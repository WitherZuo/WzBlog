{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/404.css","path":"404.css","modified":1,"renderable":0},{"_id":"source/404.html","path":"404.html","modified":1,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/baidu_verify_gcxwspHV7d.html","path":"baidu_verify_gcxwspHV7d.html","modified":1,"renderable":0},{"_id":"source/google12caa68be602a335.html","path":"google12caa68be602a335.html","modified":1,"renderable":0},{"_id":"source/manifest.json","path":"manifest.json","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/silian.txt","path":"silian.txt","modified":1,"renderable":0},{"_id":"source/images/arrow-up-34.svg","path":"images/arrow-up-34.svg","modified":1,"renderable":0},{"_id":"source/images/arrow-up-36.svg","path":"images/arrow-up-36.svg","modified":1,"renderable":0},{"_id":"source/images/crossline.png","path":"images/crossline.png","modified":1,"renderable":0},{"_id":"source/images/round-cursor.png","path":"images/round-cursor.png","modified":1,"renderable":0},{"_id":"source/images/404/atom-solid.png","path":"images/404/atom-solid.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-192x192.png","path":"images/icons/icon-192x192.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-144x144.png","path":"images/icons/icon-144x144.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-128x128.png","path":"images/icons/icon-128x128.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-152x152.png","path":"images/icons/icon-152x152.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-512x512.png","path":"images/icons/icon-512x512.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-96x96.png","path":"images/icons/icon-96x96.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-72x72.png","path":"images/icons/icon-72x72.png","modified":1,"renderable":0},{"_id":"source/images/icons/icon-384x384.png","path":"images/icons/icon-384x384.png","modified":1,"renderable":0},{"_id":"themes/next-v7/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/favicon-16x16-next.ico","path":"images/favicon-16x16-next.ico","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/favicon-32x32-next.ico","path":"images/favicon-32x32-next.ico","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next-v7/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/affix.js","path":"js/affix.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/exturl.js","path":"js/exturl.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/js.cookie.js","path":"js/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/post-details.js","path":"js/post-details.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/scrollspy.js","path":"js/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/custom/hexo_resize_image.js","path":"js/custom/hexo_resize_image.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.min.css","path":"lib/fancybox/source/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.min.js","path":"lib/fancybox/source/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next-v7/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.css","hash":"d54838765d213e4cd46a3f901eb536aef1fa2b0d","modified":1562516586832},{"_id":"source/404.html","hash":"13f2b96d88bb884298cfe39146ab29aac2e6e4a6","modified":1562516542648},{"_id":"source/CNAME","hash":"e24c6908f3b0f806cf0941e72202454c558b3597","modified":1543842224114},{"_id":"source/baidu_verify_gcxwspHV7d.html","hash":"ac5c13d19bb6c234e6c893837185bdcce857d8f0","modified":1543886960890},{"_id":"source/google12caa68be602a335.html","hash":"d8aeb885bfa07e1a69efe39eeae8456cdcbcdde4","modified":1542989825602},{"_id":"source/manifest.json","hash":"8f76c3a3a2d807a6013d895c571d11e1a167837e","modified":1555939384998},{"_id":"source/robots.txt","hash":"8604d9de4f2fa4f79f1c690bd5d950c77c10eaa8","modified":1556806978310},{"_id":"source/silian.txt","hash":"6a5963e98b6b767508c4aebceb139ee500f0064a","modified":1562747166816},{"_id":"themes/next-v7/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1562317910305},{"_id":"themes/next-v7/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1562317910308},{"_id":"themes/next-v7/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1562317910307},{"_id":"themes/next-v7/.gitignore","hash":"87d5f0f60829ceba61677ae665137dff8e029da6","modified":1553857301441},{"_id":"themes/next-v7/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1562317910324},{"_id":"themes/next-v7/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1562317910326},{"_id":"themes/next-v7/_config.yml","hash":"93c64c7bacad98d5161527fbefbc48dafba0e0e4","modified":1563348392880},{"_id":"themes/next-v7/bower.json","hash":"e9fafd267d723927d9deaf9dafd2ad76e682498a","modified":1562317910328},{"_id":"themes/next-v7/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1562317910306},{"_id":"themes/next-v7/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1562317910329},{"_id":"themes/next-v7/gulpfile.coffee","hash":"6407d9063bd88ede299ff7c2a59cf2c82e079476","modified":1562317910367},{"_id":"themes/next-v7/package.json","hash":"fa180cf1db9388f04dd930af6a4f33fc19e37a70","modified":1562317910488},{"_id":"source/_posts/Android上的写作应用-纯纯写作.md","hash":"0f1f36ea56bdc8462e401a593750284c0113a526","modified":1563251096354},{"_id":"source/_posts/Img-Share-OneDrive图床工具.md","hash":"706bf507735d355e3bfbf0b8439eb656f2dcba89","modified":1563264348392},{"_id":"source/_posts/OneNote踩坑实录-前言.md","hash":"ad5221a2a93281e58cc2ef3a48654f0193e94060","modified":1563263668138},{"_id":"source/_posts/Windows中的快捷键操作.md","hash":"edf8a70f0248cad14c804433242041da393366d1","modified":1563270914968},{"_id":"source/_posts/Windows的自带便笺应用.md","hash":"8815900c3206110bce0034dce8d801e9be4b2616","modified":1563024482919},{"_id":"source/_posts/一条命令，将网页变为原生应用.md","hash":"d334c17de70aeee34906bf7f19a5a7dc594aeb80","modified":1563263028390},{"_id":"source/_posts/九宫格解锁游戏：Breaklock.md","hash":"ae3006c527620cacba3b8163510d2fec8b15fad1","modified":1563024509298},{"_id":"source/_posts/元旦前后的一些事情.md","hash":"8b337b976f8928e36c00235ebe0fdcc5b96084ea","modified":1563251212556},{"_id":"source/_posts/挖矿脚本-CoinHive.md","hash":"1bdffcf7bd61467251b98a0c8be10a878c60cccb","modified":1563251017187},{"_id":"source/_posts/提交网站到Google上踩过的坑.md","hash":"7b20b1ff5746b1045d3f90df5dbc5452610238e7","modified":1563250928966},{"_id":"source/_posts/新版Win10中改变鼠标颜色.md","hash":"f12c3fd5ba5370a2ff4c31d9d42d30a185ec5bf3","modified":1563173791291},{"_id":"source/_posts/新的Minecraft启动器.md","hash":"60990cdde1c39275296595f2f10b34e6efb0e6a6","modified":1563251129105},{"_id":"source/_posts/更换输入法有感.md","hash":"16cfb478c2057950ebb1ac424f155c3846df4a95","modified":1563240922189},{"_id":"source/_posts/获得TrustedInstaller权限.md","hash":"14ed4ee65c9c2ced0ffcf80ab2a7ea532352e8c6","modified":1563346593337},{"_id":"source/_posts/解决百度爬虫的问题.md","hash":"86687170913f9f7334da8129131760bd56b457a6","modified":1563024490836},{"_id":"source/_posts/让OneDrive也具有同步的特性.md","hash":"971ccbd20db1ffccbb567a0e77237709d01cb85e","modified":1563263148215},{"_id":"source/_posts/记录：Google产品的墓地.md","hash":"31d9ad8ec9e624175cf6ee8b4fa761f78e8d4308","modified":1563251067190},{"_id":"source/_trashs/OneNote.md","hash":"45e1d29ec4c0eb6ffff85edf6bd188e5de1dee10","modified":1542680813885},{"_id":"source/about/index.md","hash":"942dfc1fcb50cb6ac13e10e33f4524ad320bfc17","modified":1563169646618},{"_id":"source/categories/index.md","hash":"37bfed4b47767456a1bc0d7d226cf4787ed9820d","modified":1542716520604},{"_id":"source/images/arrow-up-34.svg","hash":"4cdffe7e25c0df551adf549d9840f533a5d556ec","modified":1562924564114},{"_id":"source/images/arrow-up-36.svg","hash":"20c789c74b81dc375740a6689ff212bd364da8b0","modified":1562924640946},{"_id":"source/images/crossline.png","hash":"8f7703a4674c18388155c45cece80569d07e51c1","modified":1563183517402},{"_id":"source/images/round-cursor.png","hash":"8602c72c63deeab132be271a0432f37d2f0aed5d","modified":1563009886692},{"_id":"source/tags/index.md","hash":"2110d510440e5fc577676da5c2737ee6273240af","modified":1542716561150},{"_id":"themes/next-v7/languages/de.yml","hash":"131f9ad9ef130cfc8058e2764d3ce7e0c1700d39","modified":1562317910368},{"_id":"themes/next-v7/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1562317910369},{"_id":"themes/next-v7/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1562317910369},{"_id":"themes/next-v7/languages/es.yml","hash":"19995062f6f9fb9b621fc055e780524c42fccd31","modified":1562317910370},{"_id":"themes/next-v7/languages/fa.yml","hash":"56dccb20a1f156bd278e9c600e397e5ba845d9a1","modified":1562317910371},{"_id":"themes/next-v7/languages/fr.yml","hash":"aeae19629eab296855dc5cddfe6712c2569c7d3c","modified":1562317910373},{"_id":"themes/next-v7/languages/hu.yml","hash":"a52b04cad56168e642eb4d071b05a0dcad53f365","modified":1562317910374},{"_id":"themes/next-v7/languages/id.yml","hash":"f67c884cfbf4f6d5254a34e0ea7193dd746d29ea","modified":1562317910375},{"_id":"themes/next-v7/languages/it.yml","hash":"3e2d836aa93abf642e951fb69c234e8ef150b1c8","modified":1562317910375},{"_id":"themes/next-v7/languages/ja.yml","hash":"29bf46c6e0e3d107d2befc7bce2552668defcd3e","modified":1562317910376},{"_id":"themes/next-v7/languages/ko.yml","hash":"1874f92fffc7b93f9907da76c0bf4953a87795c5","modified":1562317910376},{"_id":"themes/next-v7/languages/nl.yml","hash":"1a0b5fa111c586e1df7fef08637ccb19bcb8eda7","modified":1562317910377},{"_id":"themes/next-v7/languages/pt-BR.yml","hash":"5158cd29b0676d3b79c3b9538f88a2f121741ff1","modified":1562317910378},{"_id":"themes/next-v7/languages/ru.yml","hash":"6504871e5f3103ab65391fc3fcab2c6c68a075dc","modified":1562317910379},{"_id":"themes/next-v7/languages/pt.yml","hash":"7b0d3a6cc507cd4325f87af9d84ab9e53e0c50e8","modified":1562317910379},{"_id":"themes/next-v7/languages/tr.yml","hash":"cd913ee8a69ecd1ba615ba71339d376677b29251","modified":1562317910380},{"_id":"themes/next-v7/languages/uk.yml","hash":"7d0396cb2adb9d44a6756c9352ffe7e0f944f10d","modified":1562317910381},{"_id":"themes/next-v7/languages/vi.yml","hash":"ed57e3263d9da09029bf2afa6853e50033faa4dd","modified":1562317910381},{"_id":"themes/next-v7/languages/zh-CN.yml","hash":"81868879a7d9eefc9fed69f3b14e73ca902855aa","modified":1562323830589},{"_id":"themes/next-v7/languages/zh-HK.yml","hash":"f42a0b7a0f0b9844e711ab13b205e8f91ae81098","modified":1562317910383},{"_id":"themes/next-v7/languages/zh-TW.yml","hash":"e72e67b1f8007428aa6952078d1ebf877f438da9","modified":1562317910383},{"_id":"themes/next-v7/layout/_layout.swig","hash":"ba786b1baba49021928e2e508da53f2fd1369b3f","modified":1562317910386},{"_id":"themes/next-v7/layout/archive.swig","hash":"61bc56e77e653684fc834f63dcbdadf18687c748","modified":1562317910483},{"_id":"themes/next-v7/layout/category.swig","hash":"ad0ac6a1ff341f8eab9570e7fb443962948c5f9d","modified":1562317910484},{"_id":"themes/next-v7/layout/index.swig","hash":"a5153bc4b2eaf2ff1f58ad04b5715188614b6b22","modified":1562317910484},{"_id":"themes/next-v7/layout/page.swig","hash":"9a272ec78ccef56a6a39304c59cdb5c0350afea0","modified":1562317910485},{"_id":"themes/next-v7/layout/post.swig","hash":"af74e97d57cf00cde6f8dbd4364f27910915454e","modified":1562317910486},{"_id":"themes/next-v7/layout/schedule.swig","hash":"e79f43df0e9a6cf48bbf00882de48c5a58080247","modified":1562317910486},{"_id":"themes/next-v7/layout/tag.swig","hash":"283519d4d5b67814412863a3e0212bac18bcc5a0","modified":1562317910487},{"_id":"themes/next-v7/scripts/auto-open.js","hash":"1da3def4bf11604e72ceeca97edb1547899ef48a","modified":1543472517635},{"_id":"themes/next-v7/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1562317910491},{"_id":"themes/next-v7/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1562317910493},{"_id":"themes/next-v7/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1562317910644},{"_id":"themes/next-v7/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1562317910645},{"_id":"themes/next-v7/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1562317910646},{"_id":"themes/next-v7/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1562317910591},{"_id":"source/images/404/atom-solid.png","hash":"29489ffb31e5f5e60b116f9a3fa4e1fab25bbff8","modified":1562509611895},{"_id":"source/images/icons/icon-192x192.png","hash":"586b24a3d4e8051be6c56a1fd69d8493b0334ccf","modified":1555784524691},{"_id":"source/images/icons/icon-144x144.png","hash":"92d9c5318c4355ffd849f489052addf93b14a3b9","modified":1555784524606},{"_id":"source/images/icons/icon-128x128.png","hash":"eb5c4cab72f3ffbbd233c704d6ae14db232bdd7d","modified":1555784524550},{"_id":"source/images/icons/icon-152x152.png","hash":"c9e568054dcf9235147b201b370ee73b7997e269","modified":1555784524577},{"_id":"source/images/icons/icon-512x512.png","hash":"fc3acf8cde6b18b6b0e7ae915671e96b0c3b1400","modified":1555784527011},{"_id":"source/images/icons/icon-96x96.png","hash":"8eaf3d5a3f8148932a22472875ec5df4f8d21cb0","modified":1555784525060},{"_id":"source/images/icons/icon-72x72.png","hash":"afb6f0cee934cb78cf7ecf8e5f06912ad649339c","modified":1555784524943},{"_id":"source/images/icons/icon-384x384.png","hash":"0fcea4cce7c5ceec52aaf4f8ab0273e2d787dd0f","modified":1555784526098},{"_id":"themes/next-v7/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1562317910385},{"_id":"themes/next-v7/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1562317910385},{"_id":"themes/next-v7/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1562317910385},{"_id":"themes/next-v7/layout/_macro/post-collapse.swig","hash":"891ab67815969dd8736cb22fbbb3f791b8fff4e4","modified":1562317910389},{"_id":"themes/next-v7/layout/_macro/post.swig","hash":"7260b273f87e42be8834b2c0f874ad7153ed289a","modified":1562317910390},{"_id":"themes/next-v7/layout/_macro/sidebar.swig","hash":"91017f58f83d9505ce99109fffdc51c032bf017e","modified":1562317910392},{"_id":"themes/next-v7/layout/_partials/comments.swig","hash":"05c71af28590c885b94d09bf0c64baeaf4a0abb5","modified":1562317910393},{"_id":"themes/next-v7/layout/_partials/footer.swig","hash":"2a1f222e0fe9a0378dafe1f17147648bab376389","modified":1563173110605},{"_id":"themes/next-v7/layout/_partials/github-banner.swig","hash":"1ad13269b43b900356f3bdab7947d6a86f035a2c","modified":1562317910395},{"_id":"themes/next-v7/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1562317910404},{"_id":"themes/next-v7/layout/_partials/post-edit.swig","hash":"dee345054d564dd56f74bb143942d3edd1cb8150","modified":1562317910405},{"_id":"themes/next-v7/layout/_scripts/baidu-push.swig","hash":"5016aab49f435f520a105cad4f50109d9b57e183","modified":1543844363133},{"_id":"themes/next-v7/layout/_scripts/commons.swig","hash":"cccd93d30787675010b1a74ef02eb5b813ec1d96","modified":1562317910417},{"_id":"themes/next-v7/layout/_scripts/exturl.swig","hash":"c2e8f4b3a2bf991320ecc827dcdc227399ad5b51","modified":1562317910418},{"_id":"themes/next-v7/layout/_scripts/next-boot.swig","hash":"50c3ae6b50f173ae70f8c3312f7c6da1097eb9b6","modified":1562317910418},{"_id":"themes/next-v7/layout/_scripts/noscript.swig","hash":"efb3404a3303622f3be60944d9d1926972c5c248","modified":1562317910420},{"_id":"themes/next-v7/layout/_scripts/scroll-cookie.swig","hash":"8a992b7fe42b9c1a5eb9d937b0827aed91586d94","modified":1562317910425},{"_id":"themes/next-v7/layout/_scripts/vendors.swig","hash":"b9b57e1735035319e200c22cf46a38b52b4e0d9c","modified":1562317910426},{"_id":"themes/next-v7/layout/_third-party/baidu-push.swig","hash":"87bcb495f7ddd81cc3fe2c2a886e51c08053019b","modified":1562317910463},{"_id":"themes/next-v7/layout/_third-party/bookmark.swig","hash":"4b93dc7ac0573c402aabcb5c933bbcb893b07c51","modified":1562317910465},{"_id":"themes/next-v7/layout/_third-party/chatra.swig","hash":"9582e2eb82b1764d2fa295b3e2ef392abf03ef7c","modified":1562317910465},{"_id":"themes/next-v7/layout/_third-party/copy-code.swig","hash":"12bf51c55449d0e838f93a4aae9f6d25c0a27ba2","modified":1562317910472},{"_id":"themes/next-v7/layout/_third-party/mermaid.swig","hash":"80dfc0879866e6512cb67590a3b2d8741a66f980","modified":1562317910475},{"_id":"themes/next-v7/layout/_third-party/needsharebutton.swig","hash":"7db4ad4a8dd5420dad2f6890f5299945df0af970","modified":1562317910476},{"_id":"themes/next-v7/layout/_third-party/pangu.swig","hash":"76f5933925670044ec65b454295ba7e0a8439986","modified":1562317910476},{"_id":"themes/next-v7/layout/_third-party/pdf.swig","hash":"4ae61c7efb16e962385bfe522a38c4d29cdcccbe","modified":1562317910477},{"_id":"themes/next-v7/layout/_third-party/quicklink.swig","hash":"8b1322a091355853db62a5aafb8886fdbd8ab56a","modified":1562317910478},{"_id":"themes/next-v7/layout/_third-party/rating.swig","hash":"c476dc3693a9dd0be2d136a45b0d7fdef55d4d92","modified":1562317910478},{"_id":"themes/next-v7/layout/_third-party/schedule.swig","hash":"882cd0b68c493af1b6d945660f9c21085e006ffc","modified":1562317910479},{"_id":"themes/next-v7/layout/_third-party/tidio.swig","hash":"b44010cd577e4d063c3406772938c4b117ec7b7b","modified":1562317910483},{"_id":"themes/next-v7/scripts/filters/exturl.js","hash":"b19c7c1021e57367b3b3bbf5678381017ed5667d","modified":1562317910489},{"_id":"themes/next-v7/scripts/helpers/engine.js","hash":"cdb6152582313268d970ffeef99b4a8a7850f034","modified":1562317910490},{"_id":"themes/next-v7/scripts/helpers/next-url.js","hash":"a40ce6bc852bb4bff8b9f984fa064741dd151e96","modified":1562317910491},{"_id":"themes/next-v7/scripts/tags/button.js","hash":"95a520f6529424a03c7ead6dbfd5e626d672febb","modified":1562317910494},{"_id":"themes/next-v7/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1562317910494},{"_id":"themes/next-v7/scripts/tags/exturl.js","hash":"f9f25905adecfb8be49def4ff3b0b8bbc6955d84","modified":1562317910496},{"_id":"themes/next-v7/scripts/tags/full-image.js","hash":"a6b2264215c555c553b2c5db85fa90678798d0d5","modified":1562317910497},{"_id":"themes/next-v7/scripts/tags/group-pictures.js","hash":"8e1befa08c07f822f9487978dbd27db60fb700c7","modified":1562317910498},{"_id":"themes/next-v7/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1562317910499},{"_id":"themes/next-v7/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1562317910500},{"_id":"themes/next-v7/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1562317910500},{"_id":"themes/next-v7/scripts/tags/pdf.js","hash":"ab995f0fc60d60f637220e2651111b775b8a06de","modified":1562317910502},{"_id":"themes/next-v7/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1562317910501},{"_id":"themes/next-v7/scripts/tags/tabs.js","hash":"72a5adbd8f300bee1d0c289367598ca06b2bed17","modified":1562317910503},{"_id":"themes/next-v7/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1562317910503},{"_id":"themes/next-v7/source/css/main.styl","hash":"5e7d28bc539e84f8b03e68df82292f7fc0f2d023","modified":1562317910590},{"_id":"themes/next-v7/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1550819124916},{"_id":"themes/next-v7/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1550819124918},{"_id":"themes/next-v7/source/images/apple-touch-icon-next.png","hash":"ba1f1938c7de35935142203e04cccbe39f7c199b","modified":1552911774621},{"_id":"themes/next-v7/source/images/avatar.jpg","hash":"4c5c0156e501dbe3cd45525ed9cac0bede4c950f","modified":1555846231759},{"_id":"themes/next-v7/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1550819124919},{"_id":"themes/next-v7/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1550819124920},{"_id":"themes/next-v7/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1550819124921},{"_id":"themes/next-v7/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1550819124922},{"_id":"themes/next-v7/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1550819124924},{"_id":"themes/next-v7/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1550819124925},{"_id":"themes/next-v7/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1550819124926},{"_id":"themes/next-v7/source/images/favicon-16x16-next.ico","hash":"b0b7d85643ec1ee77e4472ba4773ba638d91938f","modified":1552911774621},{"_id":"themes/next-v7/source/images/favicon-16x16-next.png","hash":"e8f762c8c4a929bd2aceaa75c3e6c8e6a59c5a1c","modified":1552911774621},{"_id":"themes/next-v7/source/images/favicon-32x32-next.png","hash":"dc884b11f49cd0edc9cd9845af0d5685ac48c925","modified":1552911774621},{"_id":"themes/next-v7/source/images/favicon.ico","hash":"ca86239af8e1e911d5ed3da5fda24cdf2afc64f6","modified":1552911774621},{"_id":"themes/next-v7/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1550819124928},{"_id":"themes/next-v7/source/images/favicon.png","hash":"dc884b11f49cd0edc9cd9845af0d5685ac48c925","modified":1552911774621},{"_id":"themes/next-v7/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1550819124929},{"_id":"themes/next-v7/source/images/favicon-32x32-next.ico","hash":"ca86239af8e1e911d5ed3da5fda24cdf2afc64f6","modified":1552911774621},{"_id":"themes/next-v7/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1550819124930},{"_id":"themes/next-v7/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1550819124931},{"_id":"themes/next-v7/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1550819124932},{"_id":"themes/next-v7/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1550819124933},{"_id":"themes/next-v7/source/js/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1562317910604},{"_id":"themes/next-v7/source/js/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1562317910605},{"_id":"themes/next-v7/source/js/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1562317910605},{"_id":"themes/next-v7/source/js/js.cookie.js","hash":"f11e84def0352b7dd6393f1b83e55a40ab468686","modified":1562317910606},{"_id":"themes/next-v7/source/js/motion.js","hash":"d0a6d9dbcc57159e54bbb1f683b86632ae0b78f0","modified":1562317910607},{"_id":"themes/next-v7/source/js/next-boot.js","hash":"696a0c2cf158001576d56b48195ec8e39e835b47","modified":1562317910608},{"_id":"themes/next-v7/source/js/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1562317910609},{"_id":"themes/next-v7/source/js/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1562317910612},{"_id":"themes/next-v7/source/js/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1562317910611},{"_id":"themes/next-v7/source/js/utils.js","hash":"fed16cd4fa5fac8cb4a63633d1840792a056f2be","modified":1562317910613},{"_id":"themes/next-v7/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1562317910567},{"_id":"themes/next-v7/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1562317910567},{"_id":"themes/next-v7/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1562317910569},{"_id":"themes/next-v7/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1562317910588},{"_id":"themes/next-v7/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1562317910589},{"_id":"themes/next-v7/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1562317910387},{"_id":"themes/next-v7/layout/_macro/menu/menu-item.swig","hash":"14b8ee43ac848b829960af80c8981271b9e37d51","modified":1562317910388},{"_id":"themes/next-v7/layout/_partials/head/head-unique.swig","hash":"fd079a414ca0f42f4cddd00247a9d5a5f58c4d8e","modified":1562317910397},{"_id":"themes/next-v7/layout/_partials/head/head.swig","hash":"72b5ba8985af1003c732922f5428c9299f8b26df","modified":1563173120142},{"_id":"themes/next-v7/layout/_partials/head/external-fonts.swig","hash":"b57bf9c865bed0f22157176a8085de168a1aef77","modified":1562317910397},{"_id":"themes/next-v7/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1562317910400},{"_id":"themes/next-v7/layout/_partials/header/brand.swig","hash":"03f669356bbaa70144b743f3312178e1981ac3a8","modified":1562317910399},{"_id":"themes/next-v7/layout/_partials/header/menu.swig","hash":"39c4ad0e36b7c1260da98ba345f7bd72a2ac0f2e","modified":1562317910400},{"_id":"themes/next-v7/layout/_partials/page/breadcrumb.swig","hash":"2b905ddd5dea8558c3fd95aacad241da6b6800f4","modified":1562317910403},{"_id":"themes/next-v7/layout/_partials/header/sub-menu.swig","hash":"e015c7d9b84062b60b15b36be3ef11929dd10943","modified":1562317910402},{"_id":"themes/next-v7/layout/_partials/page/page-header.swig","hash":"f46699a9daa5fef599733cbab35cb75cf7a05444","modified":1562317910404},{"_id":"themes/next-v7/layout/_partials/post/post-copyright.swig","hash":"be6683db6a269d83bb0441d7cf74db63a240fa8a","modified":1562317910406},{"_id":"themes/next-v7/layout/_partials/post/post-related.swig","hash":"f331ad02beea8990066d32ad6ec9f859672c3615","modified":1562317910407},{"_id":"themes/next-v7/layout/_partials/post/reward.swig","hash":"f62b801c7999da67b4bdca9c5e373b9b5ed039dc","modified":1562317910408},{"_id":"themes/next-v7/layout/_partials/post/wechat-subscriber.swig","hash":"fb7727e8ec63a58238a7206bf70eb273c8879993","modified":1562317910409},{"_id":"themes/next-v7/layout/_partials/search/index.swig","hash":"f14e9e8c27af82f1bfe794e252dec0d7e521f503","modified":1562317910412},{"_id":"themes/next-v7/layout/_partials/search/algolia-search.swig","hash":"277367168c647ff0160034bb93f1b069780f60ce","modified":1562317910410},{"_id":"themes/next-v7/layout/_partials/search/swiftype.swig","hash":"31245e09ce0465b994cebd94223a531585c4eab4","modified":1562317910413},{"_id":"themes/next-v7/layout/_partials/share/add-this.swig","hash":"c609097b95eb6127c2784f47f2230e6e6efc0be2","modified":1562317910414},{"_id":"themes/next-v7/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1562317910412},{"_id":"themes/next-v7/layout/_partials/share/baidushare.swig","hash":"54b43d406cf37932e7b60f46814e864d31b1842c","modified":1562317910415},{"_id":"themes/next-v7/layout/_partials/share/likely.swig","hash":"647e8677d1ccfb3f7918dd3ea2ff7078504a845d","modified":1562317910415},{"_id":"themes/next-v7/layout/_scripts/pages/post-details.swig","hash":"cf87ab778618a32119ec1c4ac2079a51385b1913","modified":1562317910421},{"_id":"themes/next-v7/layout/_scripts/schemes/gemini.swig","hash":"a62c93f19429f159bcf0c2e533ffc619aa399755","modified":1562317910422},{"_id":"themes/next-v7/layout/_scripts/schemes/mist.swig","hash":"3c548934b97cc426544947f7a2ae35c270b5e33f","modified":1562317910423},{"_id":"themes/next-v7/layout/_scripts/schemes/muse.swig","hash":"7ef07edd2a97a3774229990d2f0a6eefa31bd015","modified":1562317910423},{"_id":"themes/next-v7/layout/_scripts/schemes/pisces.swig","hash":"828eb9c47f34090c841a2e9a0b3f31b0e4ccf40a","modified":1562317910425},{"_id":"themes/next-v7/layout/_third-party/analytics/analytics-with-widget.swig","hash":"66d562b3778dbc839f7c00103bd0099c5d61602a","modified":1562317910427},{"_id":"themes/next-v7/layout/_third-party/analytics/application-insights.swig","hash":"83dd7df11b100bae38c9faab9a478f92149a0315","modified":1562317910429},{"_id":"themes/next-v7/layout/_third-party/analytics/baidu-analytics.swig","hash":"73576c9683d9ad9b124916dc6c660607fe7cc1fa","modified":1562317910430},{"_id":"themes/next-v7/layout/_third-party/analytics/busuanzi-counter.swig","hash":"2e1de38f44af00209129d4051b7ae307cb11ad68","modified":1562317910430},{"_id":"themes/next-v7/layout/_third-party/analytics/cnzz-analytics.swig","hash":"335005a9f8b36349f0ad0a7beeba6969c55fc7f7","modified":1562317910431},{"_id":"themes/next-v7/layout/_third-party/analytics/facebook-sdk.swig","hash":"f648e5bf8c5dfc74143233976ed4ff5978deda43","modified":1562317910432},{"_id":"themes/next-v7/layout/_third-party/analytics/firestore.swig","hash":"8ab040fccba41675bc835973515530af8a51f8bd","modified":1562317910457},{"_id":"themes/next-v7/layout/_third-party/analytics/google-analytics.swig","hash":"d68da660cd1cc8fb3ff0a81178decadb620afc11","modified":1562317910458},{"_id":"themes/next-v7/layout/_third-party/analytics/growingio.swig","hash":"623e73bedef067ac24a398ef27c8197295da872d","modified":1562317910459},{"_id":"themes/next-v7/layout/_third-party/analytics/index.swig","hash":"39928f358dd13d9fc1a4641800e57be157ecd815","modified":1562317910460},{"_id":"themes/next-v7/layout/_third-party/analytics/lean-analytics.swig","hash":"7a4e7d463165df3221a2a9063dc010968289782d","modified":1562317910461},{"_id":"themes/next-v7/layout/_third-party/analytics/tencent-analytics.swig","hash":"d18c87d7839e7407e39acd2998bcc9e0b34611b0","modified":1562317910461},{"_id":"themes/next-v7/layout/_third-party/analytics/tencent-mta.swig","hash":"a22d1ea29a5ffe46199ab7d108a291a05af8d5b6","modified":1562317910462},{"_id":"themes/next-v7/layout/_third-party/analytics/vkontakte-api.swig","hash":"4cff8bf5c42c62f7f0ac1f0d70f839dae39ba77a","modified":1562317910463},{"_id":"themes/next-v7/layout/_third-party/comments/changyan.swig","hash":"bc3fc9d053b3d1fc0cd3918bf9a629a6f38f6414","modified":1562317910467},{"_id":"themes/next-v7/layout/_third-party/comments/disqus.swig","hash":"3da014b25f9ac804eda1614591706e3733c0d2c5","modified":1562317910467},{"_id":"themes/next-v7/layout/_third-party/comments/disqusjs.swig","hash":"280ff4282396beb53fb3913f58c6b5890bd1c9ef","modified":1562317910468},{"_id":"themes/next-v7/layout/_third-party/comments/gitalk.swig","hash":"4e86e1ace90a70bb8862f5e6de9dbe7bfc046bee","modified":1562317910469},{"_id":"themes/next-v7/layout/_third-party/comments/index.swig","hash":"14bab3833728594ab31b3f83acba9e48502d18fc","modified":1562317910470},{"_id":"themes/next-v7/layout/_third-party/comments/livere.swig","hash":"ab2940e5ab4ee035fe2fa0279bdaec3d63d09068","modified":1562317910470},{"_id":"themes/next-v7/layout/_third-party/comments/valine.swig","hash":"b1b3778145dcfc27b58e3ecc32316ebe253793fa","modified":1562317910471},{"_id":"themes/next-v7/layout/_third-party/math/index.swig","hash":"43a20fa0e9ae2f4254f04813f9c619dd36b49ae5","modified":1562317910473},{"_id":"themes/next-v7/layout/_third-party/math/katex.swig","hash":"ea1c136f960667a0a13b334db497b9b19c41f629","modified":1562317910474},{"_id":"themes/next-v7/layout/_third-party/math/mathjax.swig","hash":"767ba29f258db5d2e5baf875a6f36ac1d44df6a3","modified":1562317910475},{"_id":"themes/next-v7/layout/_third-party/search/algolia-search.swig","hash":"143ef265c96a8ea2fb93c36c5ffb9c5e940f7693","modified":1562317910480},{"_id":"themes/next-v7/layout/_third-party/search/index.swig","hash":"078bd2d5815eb23e8c5f74467dc0042babea00ae","modified":1562317910481},{"_id":"themes/next-v7/layout/_third-party/search/localsearch.swig","hash":"d45ca53af17d1d83fd27f8ed0917a72f0060e1a9","modified":1562317910481},{"_id":"themes/next-v7/source/css/_custom/custom.styl","hash":"915df93061d2d23771a941867c71c339d9025c0c","modified":1563298397186},{"_id":"themes/next-v7/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1562317910566},{"_id":"themes/next-v7/source/css/_mixins/Pisces.styl","hash":"1aabac9e37a8f4451c86d09037b3a1f8b30eaf5e","modified":1562317910568},{"_id":"themes/next-v7/source/css/_mixins/base.styl","hash":"21a14a19149f1cb8e011c477f29dd1352675605b","modified":1562317910569},{"_id":"themes/next-v7/source/css/_variables/Gemini.styl","hash":"e9b0752f08398709e787546a246baca12b4c557f","modified":1563203788953},{"_id":"themes/next-v7/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1562317910587},{"_id":"themes/next-v7/source/css/_variables/Pisces.styl","hash":"da7049f3d9a157abe0ecc62611edcf43605ba84d","modified":1562317910588},{"_id":"themes/next-v7/source/js/custom/hexo_resize_image.js","hash":"b1b581ab96231943161874e42645f6ec1a12e8e7","modified":1563172120704},{"_id":"themes/next-v7/source/js/schemes/muse.js","hash":"ccc0c5cd4ec6f8159c98990ad83f11a5c0b0234c","modified":1562317910610},{"_id":"themes/next-v7/source/js/schemes/pisces.js","hash":"3eea56cc9ce47bb4760930c4c69cebf847a7fbb2","modified":1562317910610},{"_id":"themes/next-v7/source/lib/fancybox/.bower.json","hash":"9c0e38750e26eb9e83e2b5ab9e069b66f0965ce4","modified":1552969261693},{"_id":"themes/next-v7/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1552969261694},{"_id":"themes/next-v7/source/lib/fancybox/LICENSE","hash":"7713a1753ce88f2c7e6b054ecc8e4c786df76300","modified":1552969261696},{"_id":"themes/next-v7/source/lib/fancybox/README.md","hash":"10e4cb3bb98f6b9806bedbb8dbbc00151bad4c70","modified":1552969261698},{"_id":"themes/next-v7/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1562317910623},{"_id":"themes/next-v7/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1562317910624},{"_id":"themes/next-v7/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1562317910625},{"_id":"themes/next-v7/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1562317910626},{"_id":"themes/next-v7/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1562317910643},{"_id":"themes/next-v7/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1562317910644},{"_id":"themes/next-v7/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1562317910623},{"_id":"themes/next-v7/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1562317910642},{"_id":"themes/next-v7/source/css/_variables/base.styl","hash":"2e5392afa62b3a402cc72b68a05e76a36de53df2","modified":1563207541477},{"_id":"themes/next-v7/source/lib/jquery/index.js","hash":"b15f7cfa79519756dff1ad22553fd0ed09024343","modified":1562317910637},{"_id":"themes/next-v7/source/css/_common/components/back-to-top.styl","hash":"75b1be80aefb70b70ec263436f483103aa7aa240","modified":1562331509996},{"_id":"themes/next-v7/source/css/_common/components/back-to-top-sidebar.styl","hash":"5c0ca7f801859cff254d2f5b7d1a70d66ff61a8d","modified":1562317910505},{"_id":"themes/next-v7/source/css/_common/components/buttons.styl","hash":"9fd526db0527c71243f05e18086f937dc67b1c3e","modified":1562317910508},{"_id":"themes/next-v7/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1562317910508},{"_id":"themes/next-v7/source/css/_common/components/components.styl","hash":"997058180065d986e05df72992cc2cbfd7febd7e","modified":1562317910509},{"_id":"themes/next-v7/source/css/_common/components/pagination.styl","hash":"a4c6ee546a94fd69e5b7a1e4c054ab8cacb73d2a","modified":1562317910525},{"_id":"themes/next-v7/source/css/_common/components/rainbow.styl","hash":"cfa64bd8ee2ff9f943673e339d69341e76fbf031","modified":1562317910537},{"_id":"themes/next-v7/source/css/_common/components/scrollbar.styl","hash":"afdd21533db18d846e1a2663b1199761b1bd2c1e","modified":1562317910538},{"_id":"themes/next-v7/source/css/_common/outline/outline.styl","hash":"1a4ac0d119f2126ef8951897338706edce112235","modified":1562317910560},{"_id":"themes/next-v7/source/css/_common/scaffolding/base.styl","hash":"40144394fdfe05d400f39f6763f66f75479a2e34","modified":1562317910561},{"_id":"themes/next-v7/source/css/_common/scaffolding/helpers.styl","hash":"35c6fd7eab3779bd9e38b7ba8825ab0c67a1be7a","modified":1562317910562},{"_id":"themes/next-v7/source/css/_common/scaffolding/mobile.styl","hash":"9c6194177533619a6f6685dc7e890dcbec456241","modified":1562317910563},{"_id":"themes/next-v7/source/css/_common/scaffolding/normalize.styl","hash":"fec36a14080104b5862e9f021eab117d87c5f7c5","modified":1562317910563},{"_id":"themes/next-v7/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1562317910564},{"_id":"themes/next-v7/source/css/_common/scaffolding/tables.styl","hash":"107f42aa590ec4ba0765a0bc5d735f0f09edc0ff","modified":1562317910564},{"_id":"themes/next-v7/source/css/_schemes/Gemini/index.styl","hash":"a609ff811f2b2764f5470236fe2fb1f3aa6ccba5","modified":1562317910570},{"_id":"themes/next-v7/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1562317910571},{"_id":"themes/next-v7/source/css/_schemes/Mist/_header.styl","hash":"8da8416213127595dfc4d2b358639194647e7bd3","modified":1562317910572},{"_id":"themes/next-v7/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1562317910573},{"_id":"themes/next-v7/source/css/_schemes/Mist/_menu.styl","hash":"40f266e24af4dedc9497056ab18ebcfda38dd47d","modified":1562317910574},{"_id":"themes/next-v7/source/css/_schemes/Mist/_posts-expanded.styl","hash":"06d9d00257abd28414ec0b746f866bf9911cf5ec","modified":1562317910574},{"_id":"themes/next-v7/source/css/_schemes/Mist/_search.styl","hash":"6aee54cd5a20181e18596565356bd54c66e33823","modified":1562317910575},{"_id":"themes/next-v7/source/css/_schemes/Mist/index.styl","hash":"25f05ed8da68d034dce7f06e0f20f6cd55841070","modified":1562317910576},{"_id":"themes/next-v7/source/css/_schemes/Muse/_layout.styl","hash":"04706657af638f2746ae59520e6fc78577c7682c","modified":1562317910578},{"_id":"themes/next-v7/source/css/_schemes/Muse/_logo.styl","hash":"157e6915dcf5990566e463acffa71043b2651c07","modified":1562317910579},{"_id":"themes/next-v7/source/css/_schemes/Muse/_menu.styl","hash":"234b44cfd03f9c9e3e179ff5fd698ac876341913","modified":1562317910580},{"_id":"themes/next-v7/source/css/_schemes/Muse/_search.styl","hash":"6aee54cd5a20181e18596565356bd54c66e33823","modified":1562317910581},{"_id":"themes/next-v7/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1562317910581},{"_id":"themes/next-v7/source/css/_schemes/Pisces/_brand.styl","hash":"b9619c9827f969ca2e2f5878552362a7b858918f","modified":1562317910583},{"_id":"themes/next-v7/source/css/_schemes/Pisces/_layout.styl","hash":"e73d6da74c5755442e831d8fd7d922c5b32bd892","modified":1562317910584},{"_id":"themes/next-v7/source/css/_schemes/Pisces/_menu.styl","hash":"0b3001909f3446843b226030524ea8498d4d8997","modified":1562317910584},{"_id":"themes/next-v7/source/css/_schemes/Pisces/_sidebar.styl","hash":"5b5e0a02a7bf63de9efcd33a4e482939cce5822d","modified":1562317910584},{"_id":"themes/next-v7/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0d6f0df798449b710e1e5dbd43d470089b2a3c95","modified":1562317910585},{"_id":"themes/next-v7/source/css/_schemes/Pisces/index.styl","hash":"adb7379f3b9001840eb38b260434e89365771a81","modified":1562317910586},{"_id":"themes/next-v7/source/lib/fancybox/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1552969261695},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.css","hash":"b6964babd10efdeff086f91822b59c810a06d43d","modified":1552969261699},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1552969261700},{"_id":"themes/next-v7/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1562317910627},{"_id":"themes/next-v7/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1562317910628},{"_id":"themes/next-v7/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1562317910629},{"_id":"themes/next-v7/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1550819124975},{"_id":"themes/next-v7/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1550819124977},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1552969261702},{"_id":"themes/next-v7/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1562317910634},{"_id":"themes/next-v7/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1562317910635},{"_id":"themes/next-v7/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1562317910641},{"_id":"themes/next-v7/source/css/_common/components/footer/footer.styl","hash":"2df409df04fdb52d7234876a9f6e502edd4e3929","modified":1562317910510},{"_id":"themes/next-v7/source/css/_common/components/header/github-banner.styl","hash":"a8f4d4b86acaa34c99111b2dde5d0779cc7e0de6","modified":1562317910511},{"_id":"themes/next-v7/source/css/_common/components/header/header.styl","hash":"c9cfb4b99e1ec8ec9cf075cb761b8f7fa5fe63fd","modified":1562317910511},{"_id":"themes/next-v7/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1562317910512},{"_id":"themes/next-v7/source/css/_common/components/header/menu.styl","hash":"33200f60bd6a8bbfc66dd49a239bcc75c2f564c1","modified":1562317910514},{"_id":"themes/next-v7/source/css/_common/components/header/site-meta.styl","hash":"b8647d6140141b0a160607f6353e4d4594cca92e","modified":1562317910514},{"_id":"themes/next-v7/source/css/_common/components/header/site-nav.styl","hash":"3a0efe849587b34f20d4e260028dc799215b0bb3","modified":1562317910515},{"_id":"themes/next-v7/source/css/_common/components/pages/archive.styl","hash":"e5a5f8747fdf2ca960e4e73c081b8952afd62224","modified":1562317910519},{"_id":"themes/next-v7/source/css/_common/components/pages/breadcrumb.styl","hash":"fa1cea6fcc3f552d57cc7d28380a304859139bf6","modified":1562317910519},{"_id":"themes/next-v7/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1562317910520},{"_id":"themes/next-v7/source/css/_common/components/pages/pages.styl","hash":"9a8fb61bd2d184de9d206e62ba8961d1845c5669","modified":1562317910522},{"_id":"themes/next-v7/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1562317910522},{"_id":"themes/next-v7/source/css/_common/components/pages/schedule.styl","hash":"c27527cdeb9e3a9f447f7238f442a5dc33fde4e6","modified":1562317910523},{"_id":"themes/next-v7/source/css/_common/components/pages/tag-cloud.styl","hash":"c97c819a65f6967485184399397601e5133deda6","modified":1562317910524},{"_id":"themes/next-v7/source/css/_common/components/highlight/diff.styl","hash":"024e8ff40ca881c6fbf45712897e22f58a3811ab","modified":1562317910516},{"_id":"themes/next-v7/source/css/_common/components/highlight/highlight.styl","hash":"211b6146af090ca15081517f4484459faa36c96a","modified":1562317910517},{"_id":"themes/next-v7/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1562317910518},{"_id":"themes/next-v7/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1562317910525},{"_id":"themes/next-v7/source/css/_common/components/post/post-collapse.styl","hash":"f3b0d259e991ac86454ae5eac6bc94dc8691d8c9","modified":1562739936606},{"_id":"themes/next-v7/source/css/_common/components/post/post-copyright.styl","hash":"fc94dd09b4245143b452d6cf2fc4c12134d99d6d","modified":1562317910527},{"_id":"themes/next-v7/source/css/_common/components/post/post-eof.styl","hash":"a73346f999b31355075cd58637946a8950cf6f7e","modified":1562317910528},{"_id":"themes/next-v7/source/css/_common/components/post/post-expand.styl","hash":"77391928e594a17aba2f1afc74ba17470e324a25","modified":1562317910529},{"_id":"themes/next-v7/source/css/_common/components/post/post-gallery.styl","hash":"b6a241626783d2ac115d683fd59ec283af68e5bb","modified":1562317910529},{"_id":"themes/next-v7/source/css/_common/components/post/post-meta.styl","hash":"31bbaba8f9453a3315bce1abc1c00f3548bd339b","modified":1562317910530},{"_id":"themes/next-v7/source/css/_common/components/post/post-nav.styl","hash":"13d365ee626c01f17ec664b3f54f51d8b9ee7cf4","modified":1562317910531},{"_id":"themes/next-v7/source/css/_common/components/post/post-reading_progress.styl","hash":"4aad8e36178faaa71a767af0084d578df4c09f73","modified":1562317910532},{"_id":"themes/next-v7/source/css/_common/components/post/post-reward.styl","hash":"ccd0b1309acff0c676fdcc848a8ae2d05f0369ab","modified":1562317910532},{"_id":"themes/next-v7/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1562317910533},{"_id":"themes/next-v7/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1562317910534},{"_id":"themes/next-v7/source/css/_common/components/post/post-title.styl","hash":"539fc0880b2e035e8316d5d4b423703195c1b7ba","modified":1562317910534},{"_id":"themes/next-v7/source/css/_common/components/post/post-type.styl","hash":"c8009fd9598a661b7d23158b5121b6ac266939e9","modified":1562317910535},{"_id":"themes/next-v7/source/css/_common/components/post/post-widgets.styl","hash":"981795aad232c8bd3f52a0ed8720db696d18a234","modified":1562317910536},{"_id":"themes/next-v7/source/css/_common/components/post/post.styl","hash":"615fca7dff197a2ca3df674cf963ce70b8525985","modified":1562317910537},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"a5484d8436b2b7862faf6e7309a9e7b88cdd0027","modified":1562317910539},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-author.styl","hash":"ab1776c5dc537beabb0ab81a0f04e08bebad070b","modified":1562317910540},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"03a4e75e963e3e7cc393d588b1495a88d52e0e40","modified":1562317910541},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-button.styl","hash":"b36eea093bd4b32056b5de6f370ff57e50b25a49","modified":1562317910542},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"e58bb8b7127aa21e8260493a425ec00fcb25d338","modified":1562317910542},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"7e2ba73073daaea0a18c3d67ff137dd683af7011","modified":1562317910543},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9204c79c05d620ecd5d411cdf11e27441b6281dc","modified":1562317910544},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"d3cf6bab2b76b706faef27f034d094f5ba39dc21","modified":1562331678591},{"_id":"themes/next-v7/source/css/_common/components/sidebar/sidebar.styl","hash":"c440ee1c1fee2de763b5fa937fd440624d129338","modified":1562322109168},{"_id":"themes/next-v7/source/css/_common/components/sidebar/site-state.styl","hash":"ed3a2960ebce7396d1893bb8e08c99c7d9259140","modified":1562317910546},{"_id":"themes/next-v7/source/css/_common/components/tags/blockquote-center.styl","hash":"fde59300ec38868676ff5ed495b9dc9b02d07ffc","modified":1562317910547},{"_id":"themes/next-v7/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1562317910548},{"_id":"themes/next-v7/source/css/_common/components/tags/group-pictures.styl","hash":"3dbfb77e37485b56dd11f3c78ac2667bcaad327c","modified":1562317910549},{"_id":"themes/next-v7/source/css/_common/components/tags/label.styl","hash":"b43421291bf85b589e8d0ec853e238d36ab80631","modified":1562317910550},{"_id":"themes/next-v7/source/css/_common/components/tags/note.styl","hash":"020fac447d7a17c03e2802f0f724ae0738088354","modified":1562317910551},{"_id":"themes/next-v7/source/css/_common/components/tags/pdf.styl","hash":"3baeeb51cfe123e99235ee1816d0e1f6a97c7852","modified":1562317910551},{"_id":"themes/next-v7/source/css/_common/components/tags/tabs.styl","hash":"1df9d36e2b0e9c94e0a959acc136026405ae0d73","modified":1562317910552},{"_id":"themes/next-v7/source/css/_common/components/tags/tags.styl","hash":"da7a21f5a2f7dcf4c5a4788d7670159ca4132b65","modified":1562317910552},{"_id":"themes/next-v7/source/css/_common/components/third-party/algolia-search.styl","hash":"4305813408a1cd6aba764a7769b94b081d383d4f","modified":1562317910553},{"_id":"themes/next-v7/source/css/_common/components/third-party/copy-code.styl","hash":"d9c244b1c3a09a7fccd3c3f732e6fb112a8cd565","modified":1562317910554},{"_id":"themes/next-v7/source/css/_common/components/third-party/gitalk.styl","hash":"a01484e350ad5fc9b1fdfbfafb2ddd9687ad4d20","modified":1562317910555},{"_id":"themes/next-v7/source/css/_common/components/third-party/localsearch.styl","hash":"ed8a12982c0497eeb9d7642781abeb801428f83d","modified":1562317910557},{"_id":"themes/next-v7/source/css/_common/components/third-party/math.styl","hash":"6880467b4f6d7b057fb8291aa10966429a0a3bff","modified":1562317910557},{"_id":"themes/next-v7/source/css/_common/components/third-party/needsharebutton.styl","hash":"35dc9f3990fadff3ea038d4e8ac75923219886ed","modified":1562317910558},{"_id":"themes/next-v7/source/css/_common/components/third-party/related-posts.styl","hash":"9801977a23268e36c5deefd270423f6f1a0c3bb2","modified":1562317910558},{"_id":"themes/next-v7/source/css/_common/components/third-party/third-party.styl","hash":"93fec82905fb2aec518cb266aee42652300f88bf","modified":1562317910559},{"_id":"themes/next-v7/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1562317910576},{"_id":"themes/next-v7/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1562317910577},{"_id":"themes/next-v7/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1562317910582},{"_id":"themes/next-v7/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"1151808c52451d1b39e74fb48283195adf40b9a1","modified":1552969261706},{"_id":"themes/next-v7/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1562317910632}],"Category":[{"name":"使用体验","_id":"cjy6xa3tq00040wvc0365245g"},{"name":"OneNote","_id":"cjy6xa3u8000d0wvcrqu5hw2m"},{"name":"用户体验","_id":"cjy6xa3ui000k0wvcgyumqzde"},{"name":"Windows","_id":"cjy6xa3uo000r0wvcp991r1ci"},{"name":"小游戏","_id":"cjy6xa3us000x0wvcncfkj2ge"},{"name":"杂记","_id":"cjy6xa3v100140wvci3iwbw7l"},{"name":"Hexo","_id":"cjy6xa3v6001e0wvc9k28dg2n"},{"name":"Minecraft","_id":"cjy6xa3v8001j0wvczpt0bpgf"},{"name":"随笔","_id":"cjy6xa3va001n0wvctpqzt1me"},{"name":"OneDrive","_id":"cjy6xa3vf001t0wvckvj92ere"},{"name":"Google","_id":"cjy6xa3vi001z0wvc6sutq31h"}],"Data":[],"Page":[{"title":"关于自己","comments":0,"_content":"<p style=\"text-align:center\"><strong>type print(\"about\") to show more</strong></p>  \n<p style=\"text-align:center\">什么，这个页面需要自我介绍？</p>  \n<p style=\"text-align:center\">我需要写自我介绍？</p>  \n<p style=\"text-align:center\">就在这里？</p>  \n<p style=\"text-align:center\">好吧...</p>  \n<p style=\"text-align:center\">你觉得一个业余 Minecraft 生存玩家，默默无闻的 Windows Insider 需要自我介绍？</p>  \n<p style=\"text-align:center\">从来不会准时按点更新此 Blog</p>  \n<p style=\"text-align:center\">目前状态：在校，专业：网络与新媒体</p>  \n<p style=\"text-align:center\">在这里，从来没有什么秘密</p>  \n<p style=\"text-align:center\">有些东西，尚待发现</p>  \n<p style=\"text-align:center\">但不是现在</p>  \n<p style=\"text-align:center\">也许这里，还会有改变</p>  \n<p style=\"text-align:center\"><strong>（未完待续）</strong></p>   \n<hr style=\"width:50%;margin-left:auto;margin-right:auto\" />  \n<p style=\"text-align:center\"><u><strong>致谢列表</strong></u></p>  \n<p style=\"text-align:center\">特别感谢：时光静好</p>  \n<p style=\"text-align:center\">wzblog.fun is watching you</p>  \n<p style=\"text-align:center\"><strong>建议使用基于Chromium/Webkit内核的浏览器访问本站</strong></p>\n<style>div.post-body p {margin-bottom: 8px !important}</style>","source":"about/index.md","raw":"---\ntitle: 关于自己\ncomments: false\n---\n<p style=\"text-align:center\"><strong>type print(\"about\") to show more</strong></p>  \n<p style=\"text-align:center\">什么，这个页面需要自我介绍？</p>  \n<p style=\"text-align:center\">我需要写自我介绍？</p>  \n<p style=\"text-align:center\">就在这里？</p>  \n<p style=\"text-align:center\">好吧...</p>  \n<p style=\"text-align:center\">你觉得一个业余 Minecraft 生存玩家，默默无闻的 Windows Insider 需要自我介绍？</p>  \n<p style=\"text-align:center\">从来不会准时按点更新此 Blog</p>  \n<p style=\"text-align:center\">目前状态：在校，专业：网络与新媒体</p>  \n<p style=\"text-align:center\">在这里，从来没有什么秘密</p>  \n<p style=\"text-align:center\">有些东西，尚待发现</p>  \n<p style=\"text-align:center\">但不是现在</p>  \n<p style=\"text-align:center\">也许这里，还会有改变</p>  \n<p style=\"text-align:center\"><strong>（未完待续）</strong></p>   \n<hr style=\"width:50%;margin-left:auto;margin-right:auto\" />  \n<p style=\"text-align:center\"><u><strong>致谢列表</strong></u></p>  \n<p style=\"text-align:center\">特别感谢：时光静好</p>  \n<p style=\"text-align:center\">wzblog.fun is watching you</p>  \n<p style=\"text-align:center\"><strong>建议使用基于Chromium/Webkit内核的浏览器访问本站</strong></p>\n<style>div.post-body p {margin-bottom: 8px !important}</style>","date":"2019-07-15T05:47:26.618Z","updated":"2019-07-15T05:47:26.618Z","path":"about/index.html","layout":"page","_id":"cjy6xa3tl00010wvcuj3s3sr8","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p style=\"text-align:center\"><strong>type print(\"about\") to show more</strong></p><p style=\"text-align:center\">什么，这个页面需要自我介绍？</p><p style=\"text-align:center\">我需要写自我介绍？</p><p style=\"text-align:center\">就在这里？</p><p style=\"text-align:center\">好吧...</p><p style=\"text-align:center\">你觉得一个业余 Minecraft 生存玩家，默默无闻的 Windows Insider 需要自我介绍？</p><p style=\"text-align:center\">从来不会准时按点更新此 Blog</p><p style=\"text-align:center\">目前状态：在校，专业：网络与新媒体</p><p style=\"text-align:center\">在这里，从来没有什么秘密</p><p style=\"text-align:center\">有些东西，尚待发现</p><p style=\"text-align:center\">但不是现在</p><p style=\"text-align:center\">也许这里，还会有改变</p><p style=\"text-align:center\"><strong>（未完待续）</strong></p><hr style=\"width:50%;margin-left:auto;margin-right:auto\"><p style=\"text-align:center\"><u><strong>致谢列表</strong></u></p><p style=\"text-align:center\">特别感谢：时光静好</p><p style=\"text-align:center\">wzblog.fun is watching you</p><p style=\"text-align:center\"><strong>建议使用基于Chromium/Webkit内核的浏览器访问本站</strong></p><style>div.post-body p{margin-bottom:8px!important}</style><!-- rebuild by neat -->","site":{"data":{}},"length":306,"excerpt":"","more":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p style=\"text-align:center\"><strong>type print(\"about\") to show more</strong></p><p style=\"text-align:center\">什么，这个页面需要自我介绍？</p><p style=\"text-align:center\">我需要写自我介绍？</p><p style=\"text-align:center\">就在这里？</p><p style=\"text-align:center\">好吧...</p><p style=\"text-align:center\">你觉得一个业余 Minecraft 生存玩家，默默无闻的 Windows Insider 需要自我介绍？</p><p style=\"text-align:center\">从来不会准时按点更新此 Blog</p><p style=\"text-align:center\">目前状态：在校，专业：网络与新媒体</p><p style=\"text-align:center\">在这里，从来没有什么秘密</p><p style=\"text-align:center\">有些东西，尚待发现</p><p style=\"text-align:center\">但不是现在</p><p style=\"text-align:center\">也许这里，还会有改变</p><p style=\"text-align:center\"><strong>（未完待续）</strong></p><hr style=\"width:50%;margin-left:auto;margin-right:auto\"><p style=\"text-align:center\"><u><strong>致谢列表</strong></u></p><p style=\"text-align:center\">特别感谢：时光静好</p><p style=\"text-align:center\">wzblog.fun is watching you</p><p style=\"text-align:center\"><strong>建议使用基于Chromium/Webkit内核的浏览器访问本站</strong></p><style>div.post-body p{margin-bottom:8px!important}</style><!-- rebuild by neat -->"},{"title":"所有分类","date":"2018-11-20T05:29:23.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 所有分类\ndate: 2018-11-20 13:29:23\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-11-20T12:22:00.604Z","path":"categories/index.html","layout":"page","_id":"cjy6xa3tp00030wvc1f22gjs5","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->","site":{"data":{}},"length":0,"excerpt":"","more":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->"},{"title":"所有标签","date":"2018-11-20T05:17:21.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 所有标签\ndate: 2018-11-20 13:17:21\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-11-20T12:22:41.150Z","path":"tags/index.html","layout":"page","_id":"cjy6xa43v003r0wvcepnny0tu","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->","site":{"data":{}},"length":0,"excerpt":"","more":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->"}],"Post":[{"title":"安卓上的写作应用-纯纯写作","abbrlink":"3930012d","date":"2018-12-17T14:18:19.000Z","_content":"\n在移动端上有不少纯文本处理应用，例如 QuickEdit，有些文件管理器也自带了较为简陋的文本编辑器（例如 Mixplorer），但是却很少见到有支持 Markdown 语法的文本编辑器。电脑上倒是有不少，例如 MarkdownPad 2、Typora 等，然而移动设备上就很少看到了，即便好不容易找到了，不是停止更新很久就是用户体验差强人意。搜索了一圈下来，有个应用却让我眼前一亮，这款应用就是：**纯纯写作**  <!--more-->\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85619?authkey=APiqr1tjl5KIc1Q\" title=\"其实原图标是时光机，这里用了图标包233\" style=\"zoom: 100%\"></img>\n\n纯纯写作的作者对这款应用的描述很干脆简练：\n\n> 纯纯写作是一款致力于提供 绝不丢失内容，快速、优秀写作体验的 App。\n\n对于写作来说，**绝不丢失内容、快速、稳定，是是构成优秀写作体验的重要因素**。除此之外，纯纯写作也**完美适配了 Google 的 Material Design 设计风格**，在界面美观程度上无可挑剔，符合了不少原生界面党的审美。除了在界面美观度上发力，功能方面上纯纯写作也毫不逊色**：自定义网盘云备份、段首缩进、长图片生成、悬浮字数统计、撤销、Markdown 支持、更换信纸、指纹解锁、夜间模式、联想输入和导出和发布文件等等**，是不是一时间有些接受不了这么多内容？虽然功能多，但是纯纯写作正如其名，丝毫没有让用户感受到杂乱无章，放一张界面截图：  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85620?authkey=APiqr1tjl5KIc1Q\" title=\"主界面截图，丝毫没有杂乱的感觉\" style=\"zoom: 100%\"></img>\n\n**纯纯写作支持两种写作模式：纯文本和  Markdown**，默认进入纯纯写作时，写作模式设置为“纯文本”模式，如果想要切换为Markdown，**可以在界面右上角的三点菜单中点击“格式化选项”，在弹出的菜单中勾选“MD”这一项（在选项前面打勾），然后纯纯写作就会进入 Markdown 编辑模式，你就可以使用 Markdown 标记符号来格式化你的文档了。**\n\n如果你对默认的纸张和界面风格不太满意，纯纯写作也考虑到了这个需求，在应用设置中提供了相应的选项进行更改。方法为：\n\n> **方法一：**\n> 在右上角的菜单中点击设置按钮，进入设置界面，然后点击“稿纸”按钮，在弹出的界面中选择感兴趣的界面和稿纸风格即可（也支持自定义）。\n>\n> **方法二：**\n> 在右上角三点菜单中点击“调色盘”按钮，可以直接进入“稿纸”界面亦可\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85618?authkey=APiqr1tjl5KIc1Q\" title=\"有不少风格可以选择\" style=\"zoom: 100%\"></img>\n\n比如这里我设置为“黑曜石”风格，黑色的界面更能让我专注于内容中。\n\n### 为 Markdown 进行优化\n\n本文一开始就提到了“纯纯写作”提供了 Markdown 写作模式并且为 Markdown 进行了优化。那么这款应用为 Markdown 写作提供了什么便捷功能呢？\n\n#### Markdown 标记符号面板：\n\n有时候进行文章写作，如果要给文本加入 Markdown 语法，就需要给文本内容加入 Markdown 的标记符号，虽然相比纯 HTML 语法，Markdown 已经足够简洁，但有些时候还是略显繁琐，“纯纯写作”内置了一个快捷面板，可以帮助我们快速加入这些符号：  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85621?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n> **方法：**点击左下角的“键盘”图标，即可打开内置的标记符号键盘（需要当前的编辑模式为 Markdown 模式）\n\n#### 快速格式化：\n\n除了自带一个 Markdown 标记符号键盘，下面的底栏还有两个图标：分别是“快速格式化”和“模式设置“，**快速格式化**可以快速处理当前文章的格式，比如在文章的每一段自动空出一行等等，而**模式设置**则可以调整模式设置，在打字机模式和状态栏专注模式相互切换，也可以选择强制黑色字体还是白色字体。  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85623?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85622?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n### 更清晰的文章层级管理\n\n“纯纯写作”还提供了多篇文章层级管理的功能，以“书-章节-卷-文章”的层级进行管理，一目了然，更便于大量文章写作编排。在文章排序方式上，也可以选择多种排序方式，包括四种方式：创建时间、修改时间、标题和手动排序。  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85615?authkey=APiqr1tjl5KIc1Q\" title=\"侧边栏截图\" style=\"zoom: 100%\"></img>\n\n### 还有些其它的\n\n**“纯纯写作”还有一些其它的贴心功能**：**备份和云备份（WebDAV）**，同时也**支持国内坚果云的备份**，应该能方便不少人；还有**复制标题和复制正文内容**两个功能，终于不用手动选择文章标题和文章内容了；**“历史记录”**会保存你每一次的更改，方便你通过历史记录回到之前的修改状态；**处于后台自动锁定：**加强安全性，保护你的隐私；**屏幕常亮：**写东西的时候不用担心屏幕过段时间自动灭屏的问题了等等。  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85614?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n在最后，你可以从酷安和 Google Play 上获取”纯纯写作“，**”纯纯写作“包含付费功能，但本身可以免费使用（部分功能需付费解锁）**，可以通过支付**宝向作者转账或 Google Play 内购**方式解锁高级功能。<span style=\"background: #222; color: white\">**作者在酷安上活动异常活跃，另外不用担心 App 停更甚至弃更的问题，作者的更新频率非常频繁，甚至出现了一天多更的情况。如果想在移动设备上体验单纯写作的快感，“纯纯写作”是一个不错的选择。**</span>  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85616?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85617?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>  \n\nEND","source":"_posts/Android上的写作应用-纯纯写作.md","raw":"---\ntitle: 安卓上的写作应用-纯纯写作\ntags:\n  - Markdown\n  - 纯纯写作\n  - 移动端写作\ncategories: 使用体验\nabbrlink: 3930012d\ndate: 2018-12-17 22:18:19\n---\n\n在移动端上有不少纯文本处理应用，例如 QuickEdit，有些文件管理器也自带了较为简陋的文本编辑器（例如 Mixplorer），但是却很少见到有支持 Markdown 语法的文本编辑器。电脑上倒是有不少，例如 MarkdownPad 2、Typora 等，然而移动设备上就很少看到了，即便好不容易找到了，不是停止更新很久就是用户体验差强人意。搜索了一圈下来，有个应用却让我眼前一亮，这款应用就是：**纯纯写作**  <!--more-->\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85619?authkey=APiqr1tjl5KIc1Q\" title=\"其实原图标是时光机，这里用了图标包233\" style=\"zoom: 100%\"></img>\n\n纯纯写作的作者对这款应用的描述很干脆简练：\n\n> 纯纯写作是一款致力于提供 绝不丢失内容，快速、优秀写作体验的 App。\n\n对于写作来说，**绝不丢失内容、快速、稳定，是是构成优秀写作体验的重要因素**。除此之外，纯纯写作也**完美适配了 Google 的 Material Design 设计风格**，在界面美观程度上无可挑剔，符合了不少原生界面党的审美。除了在界面美观度上发力，功能方面上纯纯写作也毫不逊色**：自定义网盘云备份、段首缩进、长图片生成、悬浮字数统计、撤销、Markdown 支持、更换信纸、指纹解锁、夜间模式、联想输入和导出和发布文件等等**，是不是一时间有些接受不了这么多内容？虽然功能多，但是纯纯写作正如其名，丝毫没有让用户感受到杂乱无章，放一张界面截图：  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85620?authkey=APiqr1tjl5KIc1Q\" title=\"主界面截图，丝毫没有杂乱的感觉\" style=\"zoom: 100%\"></img>\n\n**纯纯写作支持两种写作模式：纯文本和  Markdown**，默认进入纯纯写作时，写作模式设置为“纯文本”模式，如果想要切换为Markdown，**可以在界面右上角的三点菜单中点击“格式化选项”，在弹出的菜单中勾选“MD”这一项（在选项前面打勾），然后纯纯写作就会进入 Markdown 编辑模式，你就可以使用 Markdown 标记符号来格式化你的文档了。**\n\n如果你对默认的纸张和界面风格不太满意，纯纯写作也考虑到了这个需求，在应用设置中提供了相应的选项进行更改。方法为：\n\n> **方法一：**\n> 在右上角的菜单中点击设置按钮，进入设置界面，然后点击“稿纸”按钮，在弹出的界面中选择感兴趣的界面和稿纸风格即可（也支持自定义）。\n>\n> **方法二：**\n> 在右上角三点菜单中点击“调色盘”按钮，可以直接进入“稿纸”界面亦可\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85618?authkey=APiqr1tjl5KIc1Q\" title=\"有不少风格可以选择\" style=\"zoom: 100%\"></img>\n\n比如这里我设置为“黑曜石”风格，黑色的界面更能让我专注于内容中。\n\n### 为 Markdown 进行优化\n\n本文一开始就提到了“纯纯写作”提供了 Markdown 写作模式并且为 Markdown 进行了优化。那么这款应用为 Markdown 写作提供了什么便捷功能呢？\n\n#### Markdown 标记符号面板：\n\n有时候进行文章写作，如果要给文本加入 Markdown 语法，就需要给文本内容加入 Markdown 的标记符号，虽然相比纯 HTML 语法，Markdown 已经足够简洁，但有些时候还是略显繁琐，“纯纯写作”内置了一个快捷面板，可以帮助我们快速加入这些符号：  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85621?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n> **方法：**点击左下角的“键盘”图标，即可打开内置的标记符号键盘（需要当前的编辑模式为 Markdown 模式）\n\n#### 快速格式化：\n\n除了自带一个 Markdown 标记符号键盘，下面的底栏还有两个图标：分别是“快速格式化”和“模式设置“，**快速格式化**可以快速处理当前文章的格式，比如在文章的每一段自动空出一行等等，而**模式设置**则可以调整模式设置，在打字机模式和状态栏专注模式相互切换，也可以选择强制黑色字体还是白色字体。  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85623?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85622?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n### 更清晰的文章层级管理\n\n“纯纯写作”还提供了多篇文章层级管理的功能，以“书-章节-卷-文章”的层级进行管理，一目了然，更便于大量文章写作编排。在文章排序方式上，也可以选择多种排序方式，包括四种方式：创建时间、修改时间、标题和手动排序。  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85615?authkey=APiqr1tjl5KIc1Q\" title=\"侧边栏截图\" style=\"zoom: 100%\"></img>\n\n### 还有些其它的\n\n**“纯纯写作”还有一些其它的贴心功能**：**备份和云备份（WebDAV）**，同时也**支持国内坚果云的备份**，应该能方便不少人；还有**复制标题和复制正文内容**两个功能，终于不用手动选择文章标题和文章内容了；**“历史记录”**会保存你每一次的更改，方便你通过历史记录回到之前的修改状态；**处于后台自动锁定：**加强安全性，保护你的隐私；**屏幕常亮：**写东西的时候不用担心屏幕过段时间自动灭屏的问题了等等。  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85614?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n在最后，你可以从酷安和 Google Play 上获取”纯纯写作“，**”纯纯写作“包含付费功能，但本身可以免费使用（部分功能需付费解锁）**，可以通过支付**宝向作者转账或 Google Play 内购**方式解锁高级功能。<span style=\"background: #222; color: white\">**作者在酷安上活动异常活跃，另外不用担心 App 停更甚至弃更的问题，作者的更新频率非常频繁，甚至出现了一天多更的情况。如果想在移动设备上体验单纯写作的快感，“纯纯写作”是一个不错的选择。**</span>  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85616?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!85617?authkey=APiqr1tjl5KIc1Q\" style=\"zoom: 100%\"></img>  \n\nEND","slug":"Android上的写作应用-纯纯写作","published":1,"updated":"2019-07-16T04:24:56.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3tf00000wvcldpwjruu","content":"<!-- build time:Wed Jul 17 2019 15:26:54 GMT+0800 (GMT+08:00) --><p>在移动端上有不少纯文本处理应用，例如 QuickEdit，有些文件管理器也自带了较为简陋的文本编辑器（例如 Mixplorer），但是却很少见到有支持 Markdown 语法的文本编辑器。电脑上倒是有不少，例如 MarkdownPad 2、Typora 等，然而移动设备上就很少看到了，即便好不容易找到了，不是停止更新很久就是用户体验差强人意。搜索了一圈下来，有个应用却让我眼前一亮，这款应用就是：<strong>纯纯写作</strong><a id=\"more\"></a></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85619?authkey=APiqr1tjl5KIc1Q\" title=\"其实原图标是时光机，这里用了图标包233\" style=\"zoom:100%\"></p><p>纯纯写作的作者对这款应用的描述很干脆简练：</p><blockquote><p>纯纯写作是一款致力于提供 绝不丢失内容，快速、优秀写作体验的 App。</p></blockquote><p>对于写作来说，<strong>绝不丢失内容、快速、稳定，是是构成优秀写作体验的重要因素</strong>。除此之外，纯纯写作也<strong>完美适配了 Google 的 Material Design 设计风格</strong>，在界面美观程度上无可挑剔，符合了不少原生界面党的审美。除了在界面美观度上发力，功能方面上纯纯写作也毫不逊色<strong>：自定义网盘云备份、段首缩进、长图片生成、悬浮字数统计、撤销、Markdown 支持、更换信纸、指纹解锁、夜间模式、联想输入和导出和发布文件等等</strong>，是不是一时间有些接受不了这么多内容？虽然功能多，但是纯纯写作正如其名，丝毫没有让用户感受到杂乱无章，放一张界面截图：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85620?authkey=APiqr1tjl5KIc1Q\" title=\"主界面截图，丝毫没有杂乱的感觉\" style=\"zoom:100%\"></p><p><strong>纯纯写作支持两种写作模式：纯文本和 Markdown</strong>，默认进入纯纯写作时，写作模式设置为“纯文本”模式，如果想要切换为Markdown，<strong>可以在界面右上角的三点菜单中点击“格式化选项”，在弹出的菜单中勾选“MD”这一项（在选项前面打勾），然后纯纯写作就会进入 Markdown 编辑模式，你就可以使用 Markdown 标记符号来格式化你的文档了。</strong></p><p>如果你对默认的纸张和界面风格不太满意，纯纯写作也考虑到了这个需求，在应用设置中提供了相应的选项进行更改。方法为：</p><blockquote><p><strong>方法一：</strong><br>在右上角的菜单中点击设置按钮，进入设置界面，然后点击“稿纸”按钮，在弹出的界面中选择感兴趣的界面和稿纸风格即可（也支持自定义）。</p><p><strong>方法二：</strong><br>在右上角三点菜单中点击“调色盘”按钮，可以直接进入“稿纸”界面亦可</p></blockquote><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85618?authkey=APiqr1tjl5KIc1Q\" title=\"有不少风格可以选择\" style=\"zoom:100%\"></p><p>比如这里我设置为“黑曜石”风格，黑色的界面更能让我专注于内容中。</p><h3 id=\"为-Markdown-进行优化\"><a href=\"#为-Markdown-进行优化\" class=\"headerlink\" title=\"为 Markdown 进行优化\"></a>为 Markdown 进行优化</h3><p>本文一开始就提到了“纯纯写作”提供了 Markdown 写作模式并且为 Markdown 进行了优化。那么这款应用为 Markdown 写作提供了什么便捷功能呢？</p><h4 id=\"Markdown-标记符号面板：\"><a href=\"#Markdown-标记符号面板：\" class=\"headerlink\" title=\"Markdown 标记符号面板：\"></a>Markdown 标记符号面板：</h4><p>有时候进行文章写作，如果要给文本加入 Markdown 语法，就需要给文本内容加入 Markdown 的标记符号，虽然相比纯 HTML 语法，Markdown 已经足够简洁，但有些时候还是略显繁琐，“纯纯写作”内置了一个快捷面板，可以帮助我们快速加入这些符号：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85621?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><blockquote><p><strong>方法：</strong>点击左下角的“键盘”图标，即可打开内置的标记符号键盘（需要当前的编辑模式为 Markdown 模式）</p></blockquote><h4 id=\"快速格式化：\"><a href=\"#快速格式化：\" class=\"headerlink\" title=\"快速格式化：\"></a>快速格式化：</h4><p>除了自带一个 Markdown 标记符号键盘，下面的底栏还有两个图标：分别是“快速格式化”和“模式设置“，<strong>快速格式化</strong>可以快速处理当前文章的格式，比如在文章的每一段自动空出一行等等，而<strong>模式设置</strong>则可以调整模式设置，在打字机模式和状态栏专注模式相互切换，也可以选择强制黑色字体还是白色字体。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85623?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85622?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><h3 id=\"更清晰的文章层级管理\"><a href=\"#更清晰的文章层级管理\" class=\"headerlink\" title=\"更清晰的文章层级管理\"></a>更清晰的文章层级管理</h3><p>“纯纯写作”还提供了多篇文章层级管理的功能，以“书-章节-卷-文章”的层级进行管理，一目了然，更便于大量文章写作编排。在文章排序方式上，也可以选择多种排序方式，包括四种方式：创建时间、修改时间、标题和手动排序。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85615?authkey=APiqr1tjl5KIc1Q\" title=\"侧边栏截图\" style=\"zoom:100%\"></p><h3 id=\"还有些其它的\"><a href=\"#还有些其它的\" class=\"headerlink\" title=\"还有些其它的\"></a>还有些其它的</h3><p><strong>“纯纯写作”还有一些其它的贴心功能</strong>：<strong>备份和云备份（WebDAV）</strong>，同时也<strong>支持国内坚果云的备份</strong>，应该能方便不少人；还有<strong>复制标题和复制正文内容</strong>两个功能，终于不用手动选择文章标题和文章内容了；<strong>“历史记录”</strong>会保存你每一次的更改，方便你通过历史记录回到之前的修改状态；<strong>处于后台自动锁定：</strong>加强安全性，保护你的隐私；<strong>屏幕常亮：</strong>写东西的时候不用担心屏幕过段时间自动灭屏的问题了等等。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85614?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p>在最后，你可以从酷安和 Google Play 上获取”纯纯写作“，<strong>”纯纯写作“包含付费功能，但本身可以免费使用（部分功能需付费解锁）</strong>，可以通过支付<strong>宝向作者转账或 Google Play 内购</strong>方式解锁高级功能。<span style=\"background:#222;color:#fff\"><strong>作者在酷安上活动异常活跃，另外不用担心 App 停更甚至弃更的问题，作者的更新频率非常频繁，甚至出现了一天多更的情况。如果想在移动设备上体验单纯写作的快感，“纯纯写作”是一个不错的选择。</strong></span></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85616?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85617?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":1839,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:54 GMT+0800 (GMT+08:00) --><p>在移动端上有不少纯文本处理应用，例如 QuickEdit，有些文件管理器也自带了较为简陋的文本编辑器（例如 Mixplorer），但是却很少见到有支持 Markdown 语法的文本编辑器。电脑上倒是有不少，例如 MarkdownPad 2、Typora 等，然而移动设备上就很少看到了，即便好不容易找到了，不是停止更新很久就是用户体验差强人意。搜索了一圈下来，有个应用却让我眼前一亮，这款应用就是：<strong>纯纯写作</strong>","more":"</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85619?authkey=APiqr1tjl5KIc1Q\" title=\"其实原图标是时光机，这里用了图标包233\" style=\"zoom:100%\"></p><p>纯纯写作的作者对这款应用的描述很干脆简练：</p><blockquote><p>纯纯写作是一款致力于提供 绝不丢失内容，快速、优秀写作体验的 App。</p></blockquote><p>对于写作来说，<strong>绝不丢失内容、快速、稳定，是是构成优秀写作体验的重要因素</strong>。除此之外，纯纯写作也<strong>完美适配了 Google 的 Material Design 设计风格</strong>，在界面美观程度上无可挑剔，符合了不少原生界面党的审美。除了在界面美观度上发力，功能方面上纯纯写作也毫不逊色<strong>：自定义网盘云备份、段首缩进、长图片生成、悬浮字数统计、撤销、Markdown 支持、更换信纸、指纹解锁、夜间模式、联想输入和导出和发布文件等等</strong>，是不是一时间有些接受不了这么多内容？虽然功能多，但是纯纯写作正如其名，丝毫没有让用户感受到杂乱无章，放一张界面截图：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85620?authkey=APiqr1tjl5KIc1Q\" title=\"主界面截图，丝毫没有杂乱的感觉\" style=\"zoom:100%\"></p><p><strong>纯纯写作支持两种写作模式：纯文本和 Markdown</strong>，默认进入纯纯写作时，写作模式设置为“纯文本”模式，如果想要切换为Markdown，<strong>可以在界面右上角的三点菜单中点击“格式化选项”，在弹出的菜单中勾选“MD”这一项（在选项前面打勾），然后纯纯写作就会进入 Markdown 编辑模式，你就可以使用 Markdown 标记符号来格式化你的文档了。</strong></p><p>如果你对默认的纸张和界面风格不太满意，纯纯写作也考虑到了这个需求，在应用设置中提供了相应的选项进行更改。方法为：</p><blockquote><p><strong>方法一：</strong><br>在右上角的菜单中点击设置按钮，进入设置界面，然后点击“稿纸”按钮，在弹出的界面中选择感兴趣的界面和稿纸风格即可（也支持自定义）。</p><p><strong>方法二：</strong><br>在右上角三点菜单中点击“调色盘”按钮，可以直接进入“稿纸”界面亦可</p></blockquote><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85618?authkey=APiqr1tjl5KIc1Q\" title=\"有不少风格可以选择\" style=\"zoom:100%\"></p><p>比如这里我设置为“黑曜石”风格，黑色的界面更能让我专注于内容中。</p><h3 id=\"为-Markdown-进行优化\"><a href=\"#为-Markdown-进行优化\" class=\"headerlink\" title=\"为 Markdown 进行优化\"></a>为 Markdown 进行优化</h3><p>本文一开始就提到了“纯纯写作”提供了 Markdown 写作模式并且为 Markdown 进行了优化。那么这款应用为 Markdown 写作提供了什么便捷功能呢？</p><h4 id=\"Markdown-标记符号面板：\"><a href=\"#Markdown-标记符号面板：\" class=\"headerlink\" title=\"Markdown 标记符号面板：\"></a>Markdown 标记符号面板：</h4><p>有时候进行文章写作，如果要给文本加入 Markdown 语法，就需要给文本内容加入 Markdown 的标记符号，虽然相比纯 HTML 语法，Markdown 已经足够简洁，但有些时候还是略显繁琐，“纯纯写作”内置了一个快捷面板，可以帮助我们快速加入这些符号：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85621?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><blockquote><p><strong>方法：</strong>点击左下角的“键盘”图标，即可打开内置的标记符号键盘（需要当前的编辑模式为 Markdown 模式）</p></blockquote><h4 id=\"快速格式化：\"><a href=\"#快速格式化：\" class=\"headerlink\" title=\"快速格式化：\"></a>快速格式化：</h4><p>除了自带一个 Markdown 标记符号键盘，下面的底栏还有两个图标：分别是“快速格式化”和“模式设置“，<strong>快速格式化</strong>可以快速处理当前文章的格式，比如在文章的每一段自动空出一行等等，而<strong>模式设置</strong>则可以调整模式设置，在打字机模式和状态栏专注模式相互切换，也可以选择强制黑色字体还是白色字体。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85623?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85622?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><h3 id=\"更清晰的文章层级管理\"><a href=\"#更清晰的文章层级管理\" class=\"headerlink\" title=\"更清晰的文章层级管理\"></a>更清晰的文章层级管理</h3><p>“纯纯写作”还提供了多篇文章层级管理的功能，以“书-章节-卷-文章”的层级进行管理，一目了然，更便于大量文章写作编排。在文章排序方式上，也可以选择多种排序方式，包括四种方式：创建时间、修改时间、标题和手动排序。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85615?authkey=APiqr1tjl5KIc1Q\" title=\"侧边栏截图\" style=\"zoom:100%\"></p><h3 id=\"还有些其它的\"><a href=\"#还有些其它的\" class=\"headerlink\" title=\"还有些其它的\"></a>还有些其它的</h3><p><strong>“纯纯写作”还有一些其它的贴心功能</strong>：<strong>备份和云备份（WebDAV）</strong>，同时也<strong>支持国内坚果云的备份</strong>，应该能方便不少人；还有<strong>复制标题和复制正文内容</strong>两个功能，终于不用手动选择文章标题和文章内容了；<strong>“历史记录”</strong>会保存你每一次的更改，方便你通过历史记录回到之前的修改状态；<strong>处于后台自动锁定：</strong>加强安全性，保护你的隐私；<strong>屏幕常亮：</strong>写东西的时候不用担心屏幕过段时间自动灭屏的问题了等等。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85614?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p>在最后，你可以从酷安和 Google Play 上获取”纯纯写作“，<strong>”纯纯写作“包含付费功能，但本身可以免费使用（部分功能需付费解锁）</strong>，可以通过支付<strong>宝向作者转账或 Google Play 内购</strong>方式解锁高级功能。<span style=\"background:#222;color:#fff\"><strong>作者在酷安上活动异常活跃，另外不用担心 App 停更甚至弃更的问题，作者的更新频率非常频繁，甚至出现了一天多更的情况。如果想在移动设备上体验单纯写作的快感，“纯纯写作”是一个不错的选择。</strong></span></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85616?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!85617?authkey=APiqr1tjl5KIc1Q\" style=\"zoom:100%\"></p><p>END</p><!-- rebuild by neat -->"},{"title":"Img Share: OneDrive 图床?","abbrlink":"b036879a","date":"2018-12-14T05:19:52.000Z","_content":"\n在写文章的时候不免要插入一些图片进去，如果用本地插入的方式，在本地上浏览倒还好，要是在线上浏览的话，一个又一个的红叉极其影响观赏体验。因此图床就应运而生了。虽然 GitHub 上建立的 Hexo 博客，可以通过将图片放入博客源目录`/sources/images/`的方式来引入图片，再通过外链来展示，**但限于 GitHub 在内地的速度，这样做并不一定好用，经常会出现网页基本加载完成但图片迟迟不出现的情况，在网络情况较差时更甚**。<!--more-->  \n\n选用第三方图床，但因为要准备上传到图床的图片一般都在本地，上传上去之后往往就忘记了在本地的文件位置，如果再找起来无异于大海捞针，有没有一种更好的办法呢？  \n\n办法当然有，就是**用 OneDrive 来作为图床**，而 Img Share 就是为此而生的。  \n\n作者对这款软件的介绍也很直接，**最不错的一点是：这软件是 UWP 应用，意味着 UWP 平台上也出现了一款好用的图床工具。**  \n\n![imgshare-winstore.png](https://storage.live.com/items/5582C1D07E2893FB!83088?authkey=APiqr1tjl5KIc1Q \"Img Share的宣传图，很心动有木有？\")  \n\n> 这软件功能很简单\n> \n> OneDrive 图床\n> 简单，直接，好看还TM好用。我做的东西，设计上不用担心\n> 目前这款工具仅针对 OneDrive 设计，因为你可以确保 OneDrive 的稳定性和私密性，而其它云服务本钦件不予考虑\n\n三言两语便将这款应用的特点概括出来：**简单直接、界面漂亮、设计流畅、仅支持 OneDrive**。  \n\n为什么要用OneDrive来当图床而不是其它的服务呢，**简单来说，用 Img Share 生成的图片外链，都会自动在 OneDrive 下新建一个文件夹存放起来，也就是说，之后在找这些图片的时候，就不用在本机硬盘上东翻西翻了，OneDrive 将会自动同步这些内容在任何设备上可用**，方便了不少。  \n\n### 与 OneDrive 授权：\n\n要想通过Img&nbsp;Share来创建 OneDrive 图床，**首先需要提供给 Img Share 我们的 OneDrive 的 authkey**，OneDrive 通过这个 authkey 来验证我们的请求。作者也十分贴心，在第一次进入应用时就会告诉我们如何添加这个 authkey。  \n\n**作者的说明：[单击此处](https://blog.richasy.cn/document/basic/onedrive_authkey.html)**  \n\n{% note warning %}  \n\n**注意：这一步骤需要通过网页端 OneDrive 来完成，如果您在中国内地，可能需要科学上网**\n\n{% endnote %}  \n\n**概括来说，就是给予 Img Share 图片文件夹的访问权限，这样就可以使用图床外链了。**  \n\n放两张图示意一下，**authkey 字段后面的字符串就是我们需要的 authkey（不需要复制两边的双引号)**\n\n![howtoauth-1.png](https://storage.live.com/items/5582C1D07E2893FB!83090?authkey=APiqr1tjl5KIc1Q \"注意红框标注的位置\")\n\n![howtoauth-2.png](https://storage.live.com/items/5582C1D07E2893FB!83084?authkey=APiqr1tjl5KIc1Q \"画红线的地方，authkey=之后的一串字符就是我们需要的authkey\")  \n\n然后将这一串字符串复制到 Img Share 弹出的窗口中，单击“确定”，等待 Img Share 验证完成即可。  \n\n### 创建图片外链：\n\n一切准备就绪之后，接下来就可以添加图片了，**将图片拖拽到红框所示区域内：**  \n\n![addpic.png](https://storage.live.com/items/5582C1D07E2893FB!83086?authkey=APiqr1tjl5KIc1Q \"添加图片\")  \n\n这里会让你选择一个分组，**如果没有存在任意一个分组，那么 Img Share 会要求你首先新建一个**，然后继续。这里也是我觉得做的非常好的一个地方，在**之后查找图片的时候，只需要找到对应的分组即可，不需要乱翻了**。  \n\n![addgroup.png](https://storage.live.com/items/5582C1D07E2893FB!83085?authkey=APiqr1tjl5KIc1Q \"在输入框内输入分组名称\")  \n\n一切完成之后，等待 Img Share 将图片上传，然后就会自动生成 OneDrive 的外链：  \n\n![picinfo.png](https://storage.live.com/items/5582C1D07E2893FB!83087?authkey=APiqr1tjl5KIc1Q \"支持普通链接、Markdown链接和HTML嵌入\")  \n\n可以看到，**Img Share 不仅会生成普通的图片外链链接，还提供了生成 Markdown 图片链接格式和 HTML 内嵌入格式的选项**，可谓十分贴心，考虑到不同的情况。  \n\n### 一点总结：\n\n先放上下载链接（Microsoft Store）：[单击此处](https://www.microsoft.com/zh-cn/p/img-share/9ncxnz52g9q8?activetab=pivot:overviewtab)\n\nUWP 的生态目前的境况很多人都是有目共睹，而这种情况下 Img Share 的出现无异于给 UWP 一缕曙光，**界面清爽（遵循了 Fluent Design，但又在里面加入了作者自己的设计，两者完美融合）、操作方便（只需将图片拖拽入图片框内即可）、功能完善（多余的功能一个没有，麻雀虽小五脏俱全，自带的分组简直好用有木有），充分利用了 OneDrive 的特性，可以在本地管理这些图片，所有已上传的外链图片可以在任何设备上管理**。唯一略麻烦的一点是需要先配置  authkey，网页端的 OneDrive 需要翻出去（科学上网），但与这些实用的功能相比，这些小瑕疵可以手动忽略掉了。😁    \n\n另外这个作者还有一款应用：Acrylic&nbsp;Markdown，是一款 UWP 的 markdown 编辑器，与 Img Share 一样，美观与实用并存，践行了作者一贯的风格，如果对 Img Share 的印象不错，也可以试试这款 Acrylic Markdown，这里必须给作者打 call。[单击此处](https://www.microsoft.com/zh-cn/p/acrylic-markdown/9mx0mgjmjnbj?cid=msft_web_chart&activetab=pivot%3Areviewstab)   \n\n**更新：由于作者无法提交软件更新，原 Img Share 更名为 Picture Share 重新发布。微软商店中即可搜索到，同时作者已将此项目[开源](https://github.com/Richasy/Img-Share?files=1)**  \n\n**12 月 22 日更新：部分图片添加为外链后可能不是 HTTPS 链接，浏览器控制台会报 https 错误，解决方法为自行在图片外链接中将 http 改为 https 即可。**  \n\nEND","source":"_posts/Img-Share-OneDrive图床工具.md","raw":"---\ntitle: 'Img Share: OneDrive 图床?'\ntags:\n  - OneDrive\n  - 图床\n  - UWP\ncategories: 使用体验\nabbrlink: b036879a\ndate: 2018-12-14 13:19:52\n---\n\n在写文章的时候不免要插入一些图片进去，如果用本地插入的方式，在本地上浏览倒还好，要是在线上浏览的话，一个又一个的红叉极其影响观赏体验。因此图床就应运而生了。虽然 GitHub 上建立的 Hexo 博客，可以通过将图片放入博客源目录`/sources/images/`的方式来引入图片，再通过外链来展示，**但限于 GitHub 在内地的速度，这样做并不一定好用，经常会出现网页基本加载完成但图片迟迟不出现的情况，在网络情况较差时更甚**。<!--more-->  \n\n选用第三方图床，但因为要准备上传到图床的图片一般都在本地，上传上去之后往往就忘记了在本地的文件位置，如果再找起来无异于大海捞针，有没有一种更好的办法呢？  \n\n办法当然有，就是**用 OneDrive 来作为图床**，而 Img Share 就是为此而生的。  \n\n作者对这款软件的介绍也很直接，**最不错的一点是：这软件是 UWP 应用，意味着 UWP 平台上也出现了一款好用的图床工具。**  \n\n![imgshare-winstore.png](https://storage.live.com/items/5582C1D07E2893FB!83088?authkey=APiqr1tjl5KIc1Q \"Img Share的宣传图，很心动有木有？\")  \n\n> 这软件功能很简单\n> \n> OneDrive 图床\n> 简单，直接，好看还TM好用。我做的东西，设计上不用担心\n> 目前这款工具仅针对 OneDrive 设计，因为你可以确保 OneDrive 的稳定性和私密性，而其它云服务本钦件不予考虑\n\n三言两语便将这款应用的特点概括出来：**简单直接、界面漂亮、设计流畅、仅支持 OneDrive**。  \n\n为什么要用OneDrive来当图床而不是其它的服务呢，**简单来说，用 Img Share 生成的图片外链，都会自动在 OneDrive 下新建一个文件夹存放起来，也就是说，之后在找这些图片的时候，就不用在本机硬盘上东翻西翻了，OneDrive 将会自动同步这些内容在任何设备上可用**，方便了不少。  \n\n### 与 OneDrive 授权：\n\n要想通过Img&nbsp;Share来创建 OneDrive 图床，**首先需要提供给 Img Share 我们的 OneDrive 的 authkey**，OneDrive 通过这个 authkey 来验证我们的请求。作者也十分贴心，在第一次进入应用时就会告诉我们如何添加这个 authkey。  \n\n**作者的说明：[单击此处](https://blog.richasy.cn/document/basic/onedrive_authkey.html)**  \n\n{% note warning %}  \n\n**注意：这一步骤需要通过网页端 OneDrive 来完成，如果您在中国内地，可能需要科学上网**\n\n{% endnote %}  \n\n**概括来说，就是给予 Img Share 图片文件夹的访问权限，这样就可以使用图床外链了。**  \n\n放两张图示意一下，**authkey 字段后面的字符串就是我们需要的 authkey（不需要复制两边的双引号)**\n\n![howtoauth-1.png](https://storage.live.com/items/5582C1D07E2893FB!83090?authkey=APiqr1tjl5KIc1Q \"注意红框标注的位置\")\n\n![howtoauth-2.png](https://storage.live.com/items/5582C1D07E2893FB!83084?authkey=APiqr1tjl5KIc1Q \"画红线的地方，authkey=之后的一串字符就是我们需要的authkey\")  \n\n然后将这一串字符串复制到 Img Share 弹出的窗口中，单击“确定”，等待 Img Share 验证完成即可。  \n\n### 创建图片外链：\n\n一切准备就绪之后，接下来就可以添加图片了，**将图片拖拽到红框所示区域内：**  \n\n![addpic.png](https://storage.live.com/items/5582C1D07E2893FB!83086?authkey=APiqr1tjl5KIc1Q \"添加图片\")  \n\n这里会让你选择一个分组，**如果没有存在任意一个分组，那么 Img Share 会要求你首先新建一个**，然后继续。这里也是我觉得做的非常好的一个地方，在**之后查找图片的时候，只需要找到对应的分组即可，不需要乱翻了**。  \n\n![addgroup.png](https://storage.live.com/items/5582C1D07E2893FB!83085?authkey=APiqr1tjl5KIc1Q \"在输入框内输入分组名称\")  \n\n一切完成之后，等待 Img Share 将图片上传，然后就会自动生成 OneDrive 的外链：  \n\n![picinfo.png](https://storage.live.com/items/5582C1D07E2893FB!83087?authkey=APiqr1tjl5KIc1Q \"支持普通链接、Markdown链接和HTML嵌入\")  \n\n可以看到，**Img Share 不仅会生成普通的图片外链链接，还提供了生成 Markdown 图片链接格式和 HTML 内嵌入格式的选项**，可谓十分贴心，考虑到不同的情况。  \n\n### 一点总结：\n\n先放上下载链接（Microsoft Store）：[单击此处](https://www.microsoft.com/zh-cn/p/img-share/9ncxnz52g9q8?activetab=pivot:overviewtab)\n\nUWP 的生态目前的境况很多人都是有目共睹，而这种情况下 Img Share 的出现无异于给 UWP 一缕曙光，**界面清爽（遵循了 Fluent Design，但又在里面加入了作者自己的设计，两者完美融合）、操作方便（只需将图片拖拽入图片框内即可）、功能完善（多余的功能一个没有，麻雀虽小五脏俱全，自带的分组简直好用有木有），充分利用了 OneDrive 的特性，可以在本地管理这些图片，所有已上传的外链图片可以在任何设备上管理**。唯一略麻烦的一点是需要先配置  authkey，网页端的 OneDrive 需要翻出去（科学上网），但与这些实用的功能相比，这些小瑕疵可以手动忽略掉了。😁    \n\n另外这个作者还有一款应用：Acrylic&nbsp;Markdown，是一款 UWP 的 markdown 编辑器，与 Img Share 一样，美观与实用并存，践行了作者一贯的风格，如果对 Img Share 的印象不错，也可以试试这款 Acrylic Markdown，这里必须给作者打 call。[单击此处](https://www.microsoft.com/zh-cn/p/acrylic-markdown/9mx0mgjmjnbj?cid=msft_web_chart&activetab=pivot%3Areviewstab)   \n\n**更新：由于作者无法提交软件更新，原 Img Share 更名为 Picture Share 重新发布。微软商店中即可搜索到，同时作者已将此项目[开源](https://github.com/Richasy/Img-Share?files=1)**  \n\n**12 月 22 日更新：部分图片添加为外链后可能不是 HTTPS 链接，浏览器控制台会报 https 错误，解决方法为自行在图片外链接中将 http 改为 https 即可。**  \n\nEND","slug":"Img-Share-OneDrive图床工具","published":1,"updated":"2019-07-16T08:05:48.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3tn00020wvcezzmkpdv","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>在写文章的时候不免要插入一些图片进去，如果用本地插入的方式，在本地上浏览倒还好，要是在线上浏览的话，一个又一个的红叉极其影响观赏体验。因此图床就应运而生了。虽然 GitHub 上建立的 Hexo 博客，可以通过将图片放入博客源目录<code>/sources/images/</code>的方式来引入图片，再通过外链来展示，<strong>但限于 GitHub 在内地的速度，这样做并不一定好用，经常会出现网页基本加载完成但图片迟迟不出现的情况，在网络情况较差时更甚</strong>。<a id=\"more\"></a></p><p>选用第三方图床，但因为要准备上传到图床的图片一般都在本地，上传上去之后往往就忘记了在本地的文件位置，如果再找起来无异于大海捞针，有没有一种更好的办法呢？</p><p>办法当然有，就是<strong>用 OneDrive 来作为图床</strong>，而 Img Share 就是为此而生的。</p><p>作者对这款软件的介绍也很直接，<strong>最不错的一点是：这软件是 UWP 应用，意味着 UWP 平台上也出现了一款好用的图床工具。</strong></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83088?authkey=APiqr1tjl5KIc1Q\" alt=\"imgshare-winstore.png\" title=\"Img Share的宣传图，很心动有木有？\"></p><blockquote><p>这软件功能很简单</p><p>OneDrive 图床<br>简单，直接，好看还TM好用。我做的东西，设计上不用担心<br>目前这款工具仅针对 OneDrive 设计，因为你可以确保 OneDrive 的稳定性和私密性，而其它云服务本钦件不予考虑</p></blockquote><p>三言两语便将这款应用的特点概括出来：<strong>简单直接、界面漂亮、设计流畅、仅支持 OneDrive</strong>。</p><p>为什么要用OneDrive来当图床而不是其它的服务呢，<strong>简单来说，用 Img Share 生成的图片外链，都会自动在 OneDrive 下新建一个文件夹存放起来，也就是说，之后在找这些图片的时候，就不用在本机硬盘上东翻西翻了，OneDrive 将会自动同步这些内容在任何设备上可用</strong>，方便了不少。</p><h3 id=\"与-OneDrive-授权：\"><a href=\"#与-OneDrive-授权：\" class=\"headerlink\" title=\"与 OneDrive 授权：\"></a>与 OneDrive 授权：</h3><p>要想通过Img&nbsp;Share来创建 OneDrive 图床，<strong>首先需要提供给 Img Share 我们的 OneDrive 的 authkey</strong>，OneDrive 通过这个 authkey 来验证我们的请求。作者也十分贴心，在第一次进入应用时就会告诉我们如何添加这个 authkey。</p><p><strong>作者的说明：<a href=\"https://blog.richasy.cn/document/basic/onedrive_authkey.html\" target=\"_blank\" rel=\"noopener\">单击此处</a></strong></p><div class=\"note warning\"><p><strong>注意：这一步骤需要通过网页端 OneDrive 来完成，如果您在中国内地，可能需要科学上网</strong></p></div><p><strong>概括来说，就是给予 Img Share 图片文件夹的访问权限，这样就可以使用图床外链了。</strong></p><p>放两张图示意一下，<strong>authkey 字段后面的字符串就是我们需要的 authkey（不需要复制两边的双引号)</strong></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83090?authkey=APiqr1tjl5KIc1Q\" alt=\"howtoauth-1.png\" title=\"注意红框标注的位置\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83084?authkey=APiqr1tjl5KIc1Q\" alt=\"howtoauth-2.png\" title=\"画红线的地方，authkey=之后的一串字符就是我们需要的authkey\"></p><p>然后将这一串字符串复制到 Img Share 弹出的窗口中，单击“确定”，等待 Img Share 验证完成即可。</p><h3 id=\"创建图片外链：\"><a href=\"#创建图片外链：\" class=\"headerlink\" title=\"创建图片外链：\"></a>创建图片外链：</h3><p>一切准备就绪之后，接下来就可以添加图片了，<strong>将图片拖拽到红框所示区域内：</strong></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83086?authkey=APiqr1tjl5KIc1Q\" alt=\"addpic.png\" title=\"添加图片\"></p><p>这里会让你选择一个分组，<strong>如果没有存在任意一个分组，那么 Img Share 会要求你首先新建一个</strong>，然后继续。这里也是我觉得做的非常好的一个地方，在<strong>之后查找图片的时候，只需要找到对应的分组即可，不需要乱翻了</strong>。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83085?authkey=APiqr1tjl5KIc1Q\" alt=\"addgroup.png\" title=\"在输入框内输入分组名称\"></p><p>一切完成之后，等待 Img Share 将图片上传，然后就会自动生成 OneDrive 的外链：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83087?authkey=APiqr1tjl5KIc1Q\" alt=\"picinfo.png\" title=\"支持普通链接、Markdown链接和HTML嵌入\"></p><p>可以看到，<strong>Img Share 不仅会生成普通的图片外链链接，还提供了生成 Markdown 图片链接格式和 HTML 内嵌入格式的选项</strong>，可谓十分贴心，考虑到不同的情况。</p><h3 id=\"一点总结：\"><a href=\"#一点总结：\" class=\"headerlink\" title=\"一点总结：\"></a>一点总结：</h3><p>先放上下载链接（Microsoft Store）：<a href=\"https://www.microsoft.com/zh-cn/p/img-share/9ncxnz52g9q8?activetab=pivot:overviewtab\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>UWP 的生态目前的境况很多人都是有目共睹，而这种情况下 Img Share 的出现无异于给 UWP 一缕曙光，<strong>界面清爽（遵循了 Fluent Design，但又在里面加入了作者自己的设计，两者完美融合）、操作方便（只需将图片拖拽入图片框内即可）、功能完善（多余的功能一个没有，麻雀虽小五脏俱全，自带的分组简直好用有木有），充分利用了 OneDrive 的特性，可以在本地管理这些图片，所有已上传的外链图片可以在任何设备上管理</strong>。唯一略麻烦的一点是需要先配置 authkey，网页端的 OneDrive 需要翻出去（科学上网），但与这些实用的功能相比，这些小瑕疵可以手动忽略掉了。😁</p><p>另外这个作者还有一款应用：Acrylic&nbsp;Markdown，是一款 UWP 的 markdown 编辑器，与 Img Share 一样，美观与实用并存，践行了作者一贯的风格，如果对 Img Share 的印象不错，也可以试试这款 Acrylic Markdown，这里必须给作者打 call。<a href=\"https://www.microsoft.com/zh-cn/p/acrylic-markdown/9mx0mgjmjnbj?cid=msft_web_chart&activetab=pivot%3Areviewstab\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p><strong>更新：由于作者无法提交软件更新，原 Img Share 更名为 Picture Share 重新发布。微软商店中即可搜索到，同时作者已将此项目<a href=\"https://github.com/Richasy/Img-Share?files=1\" target=\"_blank\" rel=\"noopener\">开源</a></strong></p><p><strong>12 月 22 日更新：部分图片添加为外链后可能不是 HTTPS 链接，浏览器控制台会报 https 错误，解决方法为自行在图片外链接中将 http 改为 https 即可。</strong></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":1980,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>在写文章的时候不免要插入一些图片进去，如果用本地插入的方式，在本地上浏览倒还好，要是在线上浏览的话，一个又一个的红叉极其影响观赏体验。因此图床就应运而生了。虽然 GitHub 上建立的 Hexo 博客，可以通过将图片放入博客源目录<code>/sources/images/</code>的方式来引入图片，再通过外链来展示，<strong>但限于 GitHub 在内地的速度，这样做并不一定好用，经常会出现网页基本加载完成但图片迟迟不出现的情况，在网络情况较差时更甚</strong>。","more":"</p><p>选用第三方图床，但因为要准备上传到图床的图片一般都在本地，上传上去之后往往就忘记了在本地的文件位置，如果再找起来无异于大海捞针，有没有一种更好的办法呢？</p><p>办法当然有，就是<strong>用 OneDrive 来作为图床</strong>，而 Img Share 就是为此而生的。</p><p>作者对这款软件的介绍也很直接，<strong>最不错的一点是：这软件是 UWP 应用，意味着 UWP 平台上也出现了一款好用的图床工具。</strong></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83088?authkey=APiqr1tjl5KIc1Q\" alt=\"imgshare-winstore.png\" title=\"Img Share的宣传图，很心动有木有？\"></p><blockquote><p>这软件功能很简单</p><p>OneDrive 图床<br>简单，直接，好看还TM好用。我做的东西，设计上不用担心<br>目前这款工具仅针对 OneDrive 设计，因为你可以确保 OneDrive 的稳定性和私密性，而其它云服务本钦件不予考虑</p></blockquote><p>三言两语便将这款应用的特点概括出来：<strong>简单直接、界面漂亮、设计流畅、仅支持 OneDrive</strong>。</p><p>为什么要用OneDrive来当图床而不是其它的服务呢，<strong>简单来说，用 Img Share 生成的图片外链，都会自动在 OneDrive 下新建一个文件夹存放起来，也就是说，之后在找这些图片的时候，就不用在本机硬盘上东翻西翻了，OneDrive 将会自动同步这些内容在任何设备上可用</strong>，方便了不少。</p><h3 id=\"与-OneDrive-授权：\"><a href=\"#与-OneDrive-授权：\" class=\"headerlink\" title=\"与 OneDrive 授权：\"></a>与 OneDrive 授权：</h3><p>要想通过Img&nbsp;Share来创建 OneDrive 图床，<strong>首先需要提供给 Img Share 我们的 OneDrive 的 authkey</strong>，OneDrive 通过这个 authkey 来验证我们的请求。作者也十分贴心，在第一次进入应用时就会告诉我们如何添加这个 authkey。</p><p><strong>作者的说明：<a href=\"https://blog.richasy.cn/document/basic/onedrive_authkey.html\" target=\"_blank\" rel=\"noopener\">单击此处</a></strong></p><div class=\"note warning\"><p><strong>注意：这一步骤需要通过网页端 OneDrive 来完成，如果您在中国内地，可能需要科学上网</strong></p></div><p><strong>概括来说，就是给予 Img Share 图片文件夹的访问权限，这样就可以使用图床外链了。</strong></p><p>放两张图示意一下，<strong>authkey 字段后面的字符串就是我们需要的 authkey（不需要复制两边的双引号)</strong></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83090?authkey=APiqr1tjl5KIc1Q\" alt=\"howtoauth-1.png\" title=\"注意红框标注的位置\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83084?authkey=APiqr1tjl5KIc1Q\" alt=\"howtoauth-2.png\" title=\"画红线的地方，authkey=之后的一串字符就是我们需要的authkey\"></p><p>然后将这一串字符串复制到 Img Share 弹出的窗口中，单击“确定”，等待 Img Share 验证完成即可。</p><h3 id=\"创建图片外链：\"><a href=\"#创建图片外链：\" class=\"headerlink\" title=\"创建图片外链：\"></a>创建图片外链：</h3><p>一切准备就绪之后，接下来就可以添加图片了，<strong>将图片拖拽到红框所示区域内：</strong></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83086?authkey=APiqr1tjl5KIc1Q\" alt=\"addpic.png\" title=\"添加图片\"></p><p>这里会让你选择一个分组，<strong>如果没有存在任意一个分组，那么 Img Share 会要求你首先新建一个</strong>，然后继续。这里也是我觉得做的非常好的一个地方，在<strong>之后查找图片的时候，只需要找到对应的分组即可，不需要乱翻了</strong>。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83085?authkey=APiqr1tjl5KIc1Q\" alt=\"addgroup.png\" title=\"在输入框内输入分组名称\"></p><p>一切完成之后，等待 Img Share 将图片上传，然后就会自动生成 OneDrive 的外链：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!83087?authkey=APiqr1tjl5KIc1Q\" alt=\"picinfo.png\" title=\"支持普通链接、Markdown链接和HTML嵌入\"></p><p>可以看到，<strong>Img Share 不仅会生成普通的图片外链链接，还提供了生成 Markdown 图片链接格式和 HTML 内嵌入格式的选项</strong>，可谓十分贴心，考虑到不同的情况。</p><h3 id=\"一点总结：\"><a href=\"#一点总结：\" class=\"headerlink\" title=\"一点总结：\"></a>一点总结：</h3><p>先放上下载链接（Microsoft Store）：<a href=\"https://www.microsoft.com/zh-cn/p/img-share/9ncxnz52g9q8?activetab=pivot:overviewtab\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>UWP 的生态目前的境况很多人都是有目共睹，而这种情况下 Img Share 的出现无异于给 UWP 一缕曙光，<strong>界面清爽（遵循了 Fluent Design，但又在里面加入了作者自己的设计，两者完美融合）、操作方便（只需将图片拖拽入图片框内即可）、功能完善（多余的功能一个没有，麻雀虽小五脏俱全，自带的分组简直好用有木有），充分利用了 OneDrive 的特性，可以在本地管理这些图片，所有已上传的外链图片可以在任何设备上管理</strong>。唯一略麻烦的一点是需要先配置 authkey，网页端的 OneDrive 需要翻出去（科学上网），但与这些实用的功能相比，这些小瑕疵可以手动忽略掉了。😁</p><p>另外这个作者还有一款应用：Acrylic&nbsp;Markdown，是一款 UWP 的 markdown 编辑器，与 Img Share 一样，美观与实用并存，践行了作者一贯的风格，如果对 Img Share 的印象不错，也可以试试这款 Acrylic Markdown，这里必须给作者打 call。<a href=\"https://www.microsoft.com/zh-cn/p/acrylic-markdown/9mx0mgjmjnbj?cid=msft_web_chart&activetab=pivot%3Areviewstab\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p><strong>更新：由于作者无法提交软件更新，原 Img Share 更名为 Picture Share 重新发布。微软商店中即可搜索到，同时作者已将此项目<a href=\"https://github.com/Richasy/Img-Share?files=1\" target=\"_blank\" rel=\"noopener\">开源</a></strong></p><p><strong>12 月 22 日更新：部分图片添加为外链后可能不是 HTTPS 链接，浏览器控制台会报 https 错误，解决方法为自行在图片外链接中将 http 改为 https 即可。</strong></p><p>END</p><!-- rebuild by neat -->"},{"title":"OneNote 踩坑实录 - 前言","abbrlink":"7567769","date":"2018-11-20T02:29:00.000Z","_content":"\n### 1. OneNote 的前世今生\n\n**OneNote** 作为微软在 Office 中预装进去的组件之一，因为不像 Office 中其它三剑客那样家喻户晓，再加上平时几乎没有什么人为其做宣传打广告，导致很长时间里 OneNote 都只能静静地躺在 Office 所有套件产品中做一个“美男子”（逃 😁  \n\n简单介绍一下 OneNote 的发展历史，OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）。从 Office 2007 开始，OneNote 也引入了 Ribbon UI 界面设计，**自 Office 2010 开始，OneNote 开始具备与 OneDrive（原 SkyDrive）同步的能力，意味着用户可以将自己的笔记存储在 OneDrive 上多平台同步，以便用户在其它平台的 OneNote 上获取并阅读笔记**。\n\n下面贴几张 OneNote 在不同平台的截图，看看**以紫色为界面主色调**的 OneNote 能不能俘获你的芳心？😜 （因为我没有 iOS 的设备，所以...iOS 端的 OneNote 截图暂缺）<!--more-->\n\n![onenoteuwp-ui.png](https://i.loli.net/2018/11/11/5be7ff1d6b127.png \"图1：UWP版OneNote的界面\") \n\n![onenotedesktop-ui.png](https://i.loli.net/2018/11/11/5be7ffe1bb95b.png \"图2：桌面版OneNote 2016的界面\") \n\n<img src=\"https://i.loli.net/2018/11/12/5be9859dcbfa5.jpg\" title=\"图3：安卓端的OneNote界面\" height=\"640px\" width=\"360px\"></img>\n\n![onenoteweb-ui.png](https://i.loli.net/2018/11/11/5be80fc393bf9.png \"图4：在线版的OneNote Online的界面\") \n\n### 2. OneNote 的优势\n\n<span style=\"background:#222;color:white;\">**容器：**</span>如果你平时经常做纸质笔记，你会发现你的笔记内容可以写在这张纸的任何一个位置上，无论是按照普通的方式由第一行一直写到最后一行，还是从任何位置开始，你可以随心所欲。OneNote 也是如此，你会发现，当你在 OneNote 中输入一段文字的时候，这段文字周围会出现文字框的边界，实际上这是一个“容器”，你可以在页面的任何地方创建容器，然后把你需要的内容放入到这个容器中，可以自由拖拽容器或是合并容器，厌倦了 Word 中“死板”的排版方式，也许 OneNote 可以让你让你眼前一亮👀\n\n![onenote-container.png](https://i.loli.net/2018/11/14/5bec2f1cbd70b.png \"图5：OneNote中的\"容器\") \n\n<span style=\"background:#222;color:white;\">**与 Office 其它组件的关联性：**</span>在前面提到过，OneNote 在 Office 2016 及之前的版本中是随附安装进去的，虽然在 Office 2019 中 OneNote 默认不再安装进入 Office 中，但你仍然可以单独安装 OneNote 2016，同样也可以与其它已安装的 Office 组件联动。例如你可以将 Word 或 Excel 的内容直接插入到 OneNote 的笔记当中，将你在 Visio 中创建的图表直接插入到 OneNote 笔记里，省去了来回折腾的时间和精力。\n\n![onenote-connectto.png](https://i.loli.net/2018/11/14/5bec2e10af3e3.png \"图6：OneNote与其它Office组建的联动性\")  \n\n<span style=\"background:#222;color:white;\">**笔记的层级划分：**</span>在组织笔记的内容时，我们有必要对笔记的层级进行划分。OneNote 的笔记层级可以按照“笔记本-分区组-笔记单页”来看，每一个笔记本可以包含无数的笔记分区，而每一个分区下面又可以包含无数个笔记页面，从理论上来说，你可以无限创建笔记（前提是你的本地空间或云存储空间足够），除此之外，你还可以创建多层级嵌套的笔记分区。  \n\n<span style=\"background:#222;color:white;\">**不限的同步流量：**</span>如果你用过 EverNote（印象笔记），免费版的每月同步流量最多为 60MB，即使付费订阅成为高级用户，每月的同步流量最多为 10GB，而 OneNote 的同步流量则没有任何限制，虽然免费的个人版 OneDrive 最多只有 5G 空间，存一些笔记还是绰绰有余的（如果觉得 OneDrive 的 5G 空间不够用，后续也可以通过付费订阅 Office 365 或购买 OneDrive 空间来扩展容量。  \n\n### 3. OneNote 的不足\n\n在开始之前，请允许我先说几句开场白：\n\n> 我能说上面那一大串洋溢之词都是跟挤牙膏一样挤出来的吗！  \n> 不少遗留问题，我只想问一句巨硬你到底打不打算解决？！  \n\n当然，我还是要说：  \n\n> 以上的优点都是真正的优点  \n\n好了，接下来进入正题：OneNote 到底有什么不足？  \n\n<span style=\"background:#222;color:white;\">**同步速度慢：**</span>最大的问题：OneNote 的同步速度太慢了，虽然这与 OneDrive 的速度有不小的关联，但在某些时候、某些地区尤其如此，当你完成笔记的一部分修改，然后发现，OneNote 还在给你慢吞吞地进行同步，更甚者，即便你等的花都谢了，OneNote 仍然不紧不慢地告诉你：“你等会儿，我还在同步呢”  \n\n有位饱受 OneNote 同步折磨的用户，这么开玩笑道：  \n\n> 我去年新建的笔记，我今年看了一下，它还在同步\n\nemmmmm，好吧（同情这位用户）  \n\n<span style=\"background:#222;color:white;\">**百般变化的字体：**</span>OneNote 的字体变换问题频遭用户诟病，这种变换问题在中英文输入法切换的情况下尤其严重，例如：当你用中文输入法敲了一段文字，然后切换成英文输入法，再敲一段文字，你会发现用中文输入法和英文输入法输入的文字，在字号、字体和其它格式上有明显区别，中文输入法上字体就是微软雅黑，而英文输入法的字体则变成了 Calibri，如果你输入了数学公式，你会发现数学公式的字体是 Calibri Math，如此混乱的字体关系让不少人伤透脑筋，即便在 OneNote 的设置中重设默认字体也无济于事，不少人想出了各种“奇招”解决：  \n\n> 修改 OneNote 的字体，而且是中英文分别修改，然鹅...这样的方法只能对已经输入的文本有效  \n>   \n> 修改系统字体，用其它的中文字体把相应的英文字体同名替换掉，不过只能在本地有效   \n> \n> 或者干脆写完后全部手动改   \n\n（注：这是一个历史遗留问题，**严格来说，微软现在已经不把它当作是一个问题了.......**）\n\n<span style=\"background:#222;color:white;\">**过于自由的容器：**</span>在前文提到的“文本容器”和自由位置创建笔记内容，也成为 OneNote 被人批评最多的其中一项，自由的创建位置导致笔记内容无法对齐，而 OneNote 又没有标尺和参考线来辅助对齐，往往在 OneNote 中对齐笔记内容是一件极其烦心的事情。  \n\n<span style=\"background:#222;color:white;\">**新版本的功能缺失：**</span>OneNote for Windows 10 也成为用户最担心的一点，微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者，而不少重度 OneNote 用户发现目前的应用商店版本 OneNote 相较于桌面版的 OneNote，仍然缺少一些重要功能，这只能让微软再加把劲了。 \n\n<span style=\"background:#222;color:white;\">**糟糕的移动端体验：**</span>如果你用移动端的 OneNote 来编辑笔记，这真的是一件非常令人痛苦的事情，你大概只能用移动端的 OneNote 来阅读笔记，但更加悲催的是，似乎移动端 OneNote 连在移动端阅读笔记这一功能都没有完全做好......  \n\n<u>**其实，除了这些已经列出的问题以外，还有不少问题，我就不说了......**</u>  \n\n### 4. 应用商店和桌面版的 OneNote，应该选择哪个？\n\n在文章的开头，我写了这样一段话：  \n\n> OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）  \n>\n> 微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者  \n\n在今年 4 月 18 日（2018 年），微软正式宣布在今年晚些时候发布的 Office 2019 和 Office 365 中，OneNote 桌面版将不再是 Office 的唯一体验，取而代之的是 OneNote for Windows 10（即我们一般常说的“应用商店版本”，可在 Windows 10 的应用商店中免费下载的版本）  \n\n详情页面（英文版本）：[单击此处](https://support.office.com/zh-cn/article/what-s-the-difference-between-onenote-and-onenote-2016-a624e692-b78b-4c09-b07f-46181958118f)  \n\n![uwpanddesktop-diff.png](https://i.loli.net/2018/11/14/5bec1996c27c2.png)  \n\n**简单来说，OneNote for Windows 10 的命运，接下来是这样的：**  \n\n- 将会定期获得功能更新、安全更新和质量更新  \n- 同步引擎将会重写，更加快速和稳定  \n- 更好的 Windows 10 集成\n- 加强的研究工具、数学工具、墨迹与手写和教育领域功能  \n\n**而桌面版的 OneNote，它的命运，接下来是这样的：**  \n\n- 在支持期限内，仍将继续获得安全更新和质量更新  \n- 将不会再获得任何实质的功能更新\n- 你仍然可用桌面版的 OneNote 来管理你的笔记  \n\n从上面的对比，我们可以看到，<span style=\"background:#222;color:white;\">**微软已经不会再为传统桌面版的 OneNote 添加任何新的功能，换言之，微软已经将开发重心逐渐转向了 OneNote for Windows 10（即应用商店版）**，值得一提的是，Mac OS X 上的 OneNote 不受到任何影响。</span>\n\n那么，作为用户，到底是追随发展潮流将应用商店版 OneNote 作为主力，还是仍然抱着传统桌面版的 OneNote 继续前行？我用一张表格来展现目前这两个版本的特点：  \n\n|         功能/版本          |        OneNote商店版本         |     OneNote桌面版本      |\n| :------------------------: | :----------------------------: | :----------------------: |\n|        **更新内容**        |  功能更新、质量更新和安全更新  | 仅包含质量更新和安全更新 |\n|          **界面**          |           更加现代化           |        不再有变化        |\n|        **同步引擎**        |         采用全新的引擎         |       仍使用旧引擎       |\n|      **笔记存储位置**      |         仅能保存在云上         |     本地或云存储均可     |\n|       **需要付费？**       |             不需要             |          不需要          |\n|     **Office 365支持**     |               有               |            有            |\n| **对手写和墨迹的支持程度** |              完善              |         有待提升         |\n|     **插件可扩展数量**     |              较少              |        完善且丰富        |\n|    **原版功能丰富程度**    | 仍有待提升，缺少部分传统版功能 |           完善           |\n|        **下载地址**        |           仅应用商店           |       onenote.com        |\n\n从上表中可以看到，与传统桌面版的 OneNote 相比较，<span style=\"background:#222;color:white;\">**全新的应用商店版本 OneNote** 可以**获得持续的功能更新、质量更新和安全更新；能够拥有更加先进的同步引擎，进一步提升同步的体验；能够拥有更加现代化的用户界面体验；对于触屏和手写以及墨迹功能的支持更加完善等等**；**不足之处**则是**只能使用 OneDrive 作为笔记本保存的唯一位置**，</span>这意味着<span style=\"background:#222;color:white;\">OneDrive的同步速度将是决定应用商店版OneNote的重要因素</span>；目前<span style=\"background:#222;color:white;\">**应用商店版本的 OneNote 支持的插件较少，原版功能和传统桌面版仍然有不少的差距**；**获取途径则仅限应用商店本身**</span>。而<span style=\"background:#222;color:white;\">**传统桌面版的 OneNote**，在之后**其界面和功能都不再会有大的改动**</span>，相较于商店版OneNote，<span style=\"background:#222;color:white;\">桌面版**可以将笔记保存在本地位置，也可以选择上传到云上同步**；同时**拥有大量功能扩展插件，其原版功能也更加完善**。**两者共同的优点**则是**免费和对 Office 365 的支持较好**</span>。  \n\n![onenote-website.png](https://i.loli.net/2018/11/14/5bec29664168d.png)\n\n因此，<span style=background:#222;color:white;>**如果你对本地保存和功能更加看重**，**目前来说传统桌面版的 OneNote 可能更加适合你**，如果你**经常在触屏上进行手写画画**，那么**应用商店版本的 OneNote 可能更加适合你**，但**随着微软逐渐将开发重心转移到应用商店版的 OneNote，在未来应用商店版本的 OneNote 可能会迎来更加快速稳定的发展**。</span>  \n\nEND","source":"_posts/OneNote踩坑实录-前言.md","raw":"---\ntitle: OneNote 踩坑实录 - 前言\ntags:\n  - OneNote\n  - 使用体验\ncategories:\n  - OneNote\nabbrlink: '7567769'\ndate: 2018-11-20 10:29:00\n---\n\n### 1. OneNote 的前世今生\n\n**OneNote** 作为微软在 Office 中预装进去的组件之一，因为不像 Office 中其它三剑客那样家喻户晓，再加上平时几乎没有什么人为其做宣传打广告，导致很长时间里 OneNote 都只能静静地躺在 Office 所有套件产品中做一个“美男子”（逃 😁  \n\n简单介绍一下 OneNote 的发展历史，OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）。从 Office 2007 开始，OneNote 也引入了 Ribbon UI 界面设计，**自 Office 2010 开始，OneNote 开始具备与 OneDrive（原 SkyDrive）同步的能力，意味着用户可以将自己的笔记存储在 OneDrive 上多平台同步，以便用户在其它平台的 OneNote 上获取并阅读笔记**。\n\n下面贴几张 OneNote 在不同平台的截图，看看**以紫色为界面主色调**的 OneNote 能不能俘获你的芳心？😜 （因为我没有 iOS 的设备，所以...iOS 端的 OneNote 截图暂缺）<!--more-->\n\n![onenoteuwp-ui.png](https://i.loli.net/2018/11/11/5be7ff1d6b127.png \"图1：UWP版OneNote的界面\") \n\n![onenotedesktop-ui.png](https://i.loli.net/2018/11/11/5be7ffe1bb95b.png \"图2：桌面版OneNote 2016的界面\") \n\n<img src=\"https://i.loli.net/2018/11/12/5be9859dcbfa5.jpg\" title=\"图3：安卓端的OneNote界面\" height=\"640px\" width=\"360px\"></img>\n\n![onenoteweb-ui.png](https://i.loli.net/2018/11/11/5be80fc393bf9.png \"图4：在线版的OneNote Online的界面\") \n\n### 2. OneNote 的优势\n\n<span style=\"background:#222;color:white;\">**容器：**</span>如果你平时经常做纸质笔记，你会发现你的笔记内容可以写在这张纸的任何一个位置上，无论是按照普通的方式由第一行一直写到最后一行，还是从任何位置开始，你可以随心所欲。OneNote 也是如此，你会发现，当你在 OneNote 中输入一段文字的时候，这段文字周围会出现文字框的边界，实际上这是一个“容器”，你可以在页面的任何地方创建容器，然后把你需要的内容放入到这个容器中，可以自由拖拽容器或是合并容器，厌倦了 Word 中“死板”的排版方式，也许 OneNote 可以让你让你眼前一亮👀\n\n![onenote-container.png](https://i.loli.net/2018/11/14/5bec2f1cbd70b.png \"图5：OneNote中的\"容器\") \n\n<span style=\"background:#222;color:white;\">**与 Office 其它组件的关联性：**</span>在前面提到过，OneNote 在 Office 2016 及之前的版本中是随附安装进去的，虽然在 Office 2019 中 OneNote 默认不再安装进入 Office 中，但你仍然可以单独安装 OneNote 2016，同样也可以与其它已安装的 Office 组件联动。例如你可以将 Word 或 Excel 的内容直接插入到 OneNote 的笔记当中，将你在 Visio 中创建的图表直接插入到 OneNote 笔记里，省去了来回折腾的时间和精力。\n\n![onenote-connectto.png](https://i.loli.net/2018/11/14/5bec2e10af3e3.png \"图6：OneNote与其它Office组建的联动性\")  \n\n<span style=\"background:#222;color:white;\">**笔记的层级划分：**</span>在组织笔记的内容时，我们有必要对笔记的层级进行划分。OneNote 的笔记层级可以按照“笔记本-分区组-笔记单页”来看，每一个笔记本可以包含无数的笔记分区，而每一个分区下面又可以包含无数个笔记页面，从理论上来说，你可以无限创建笔记（前提是你的本地空间或云存储空间足够），除此之外，你还可以创建多层级嵌套的笔记分区。  \n\n<span style=\"background:#222;color:white;\">**不限的同步流量：**</span>如果你用过 EverNote（印象笔记），免费版的每月同步流量最多为 60MB，即使付费订阅成为高级用户，每月的同步流量最多为 10GB，而 OneNote 的同步流量则没有任何限制，虽然免费的个人版 OneDrive 最多只有 5G 空间，存一些笔记还是绰绰有余的（如果觉得 OneDrive 的 5G 空间不够用，后续也可以通过付费订阅 Office 365 或购买 OneDrive 空间来扩展容量。  \n\n### 3. OneNote 的不足\n\n在开始之前，请允许我先说几句开场白：\n\n> 我能说上面那一大串洋溢之词都是跟挤牙膏一样挤出来的吗！  \n> 不少遗留问题，我只想问一句巨硬你到底打不打算解决？！  \n\n当然，我还是要说：  \n\n> 以上的优点都是真正的优点  \n\n好了，接下来进入正题：OneNote 到底有什么不足？  \n\n<span style=\"background:#222;color:white;\">**同步速度慢：**</span>最大的问题：OneNote 的同步速度太慢了，虽然这与 OneDrive 的速度有不小的关联，但在某些时候、某些地区尤其如此，当你完成笔记的一部分修改，然后发现，OneNote 还在给你慢吞吞地进行同步，更甚者，即便你等的花都谢了，OneNote 仍然不紧不慢地告诉你：“你等会儿，我还在同步呢”  \n\n有位饱受 OneNote 同步折磨的用户，这么开玩笑道：  \n\n> 我去年新建的笔记，我今年看了一下，它还在同步\n\nemmmmm，好吧（同情这位用户）  \n\n<span style=\"background:#222;color:white;\">**百般变化的字体：**</span>OneNote 的字体变换问题频遭用户诟病，这种变换问题在中英文输入法切换的情况下尤其严重，例如：当你用中文输入法敲了一段文字，然后切换成英文输入法，再敲一段文字，你会发现用中文输入法和英文输入法输入的文字，在字号、字体和其它格式上有明显区别，中文输入法上字体就是微软雅黑，而英文输入法的字体则变成了 Calibri，如果你输入了数学公式，你会发现数学公式的字体是 Calibri Math，如此混乱的字体关系让不少人伤透脑筋，即便在 OneNote 的设置中重设默认字体也无济于事，不少人想出了各种“奇招”解决：  \n\n> 修改 OneNote 的字体，而且是中英文分别修改，然鹅...这样的方法只能对已经输入的文本有效  \n>   \n> 修改系统字体，用其它的中文字体把相应的英文字体同名替换掉，不过只能在本地有效   \n> \n> 或者干脆写完后全部手动改   \n\n（注：这是一个历史遗留问题，**严格来说，微软现在已经不把它当作是一个问题了.......**）\n\n<span style=\"background:#222;color:white;\">**过于自由的容器：**</span>在前文提到的“文本容器”和自由位置创建笔记内容，也成为 OneNote 被人批评最多的其中一项，自由的创建位置导致笔记内容无法对齐，而 OneNote 又没有标尺和参考线来辅助对齐，往往在 OneNote 中对齐笔记内容是一件极其烦心的事情。  \n\n<span style=\"background:#222;color:white;\">**新版本的功能缺失：**</span>OneNote for Windows 10 也成为用户最担心的一点，微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者，而不少重度 OneNote 用户发现目前的应用商店版本 OneNote 相较于桌面版的 OneNote，仍然缺少一些重要功能，这只能让微软再加把劲了。 \n\n<span style=\"background:#222;color:white;\">**糟糕的移动端体验：**</span>如果你用移动端的 OneNote 来编辑笔记，这真的是一件非常令人痛苦的事情，你大概只能用移动端的 OneNote 来阅读笔记，但更加悲催的是，似乎移动端 OneNote 连在移动端阅读笔记这一功能都没有完全做好......  \n\n<u>**其实，除了这些已经列出的问题以外，还有不少问题，我就不说了......**</u>  \n\n### 4. 应用商店和桌面版的 OneNote，应该选择哪个？\n\n在文章的开头，我写了这样一段话：  \n\n> OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）  \n>\n> 微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者  \n\n在今年 4 月 18 日（2018 年），微软正式宣布在今年晚些时候发布的 Office 2019 和 Office 365 中，OneNote 桌面版将不再是 Office 的唯一体验，取而代之的是 OneNote for Windows 10（即我们一般常说的“应用商店版本”，可在 Windows 10 的应用商店中免费下载的版本）  \n\n详情页面（英文版本）：[单击此处](https://support.office.com/zh-cn/article/what-s-the-difference-between-onenote-and-onenote-2016-a624e692-b78b-4c09-b07f-46181958118f)  \n\n![uwpanddesktop-diff.png](https://i.loli.net/2018/11/14/5bec1996c27c2.png)  \n\n**简单来说，OneNote for Windows 10 的命运，接下来是这样的：**  \n\n- 将会定期获得功能更新、安全更新和质量更新  \n- 同步引擎将会重写，更加快速和稳定  \n- 更好的 Windows 10 集成\n- 加强的研究工具、数学工具、墨迹与手写和教育领域功能  \n\n**而桌面版的 OneNote，它的命运，接下来是这样的：**  \n\n- 在支持期限内，仍将继续获得安全更新和质量更新  \n- 将不会再获得任何实质的功能更新\n- 你仍然可用桌面版的 OneNote 来管理你的笔记  \n\n从上面的对比，我们可以看到，<span style=\"background:#222;color:white;\">**微软已经不会再为传统桌面版的 OneNote 添加任何新的功能，换言之，微软已经将开发重心逐渐转向了 OneNote for Windows 10（即应用商店版）**，值得一提的是，Mac OS X 上的 OneNote 不受到任何影响。</span>\n\n那么，作为用户，到底是追随发展潮流将应用商店版 OneNote 作为主力，还是仍然抱着传统桌面版的 OneNote 继续前行？我用一张表格来展现目前这两个版本的特点：  \n\n|         功能/版本          |        OneNote商店版本         |     OneNote桌面版本      |\n| :------------------------: | :----------------------------: | :----------------------: |\n|        **更新内容**        |  功能更新、质量更新和安全更新  | 仅包含质量更新和安全更新 |\n|          **界面**          |           更加现代化           |        不再有变化        |\n|        **同步引擎**        |         采用全新的引擎         |       仍使用旧引擎       |\n|      **笔记存储位置**      |         仅能保存在云上         |     本地或云存储均可     |\n|       **需要付费？**       |             不需要             |          不需要          |\n|     **Office 365支持**     |               有               |            有            |\n| **对手写和墨迹的支持程度** |              完善              |         有待提升         |\n|     **插件可扩展数量**     |              较少              |        完善且丰富        |\n|    **原版功能丰富程度**    | 仍有待提升，缺少部分传统版功能 |           完善           |\n|        **下载地址**        |           仅应用商店           |       onenote.com        |\n\n从上表中可以看到，与传统桌面版的 OneNote 相比较，<span style=\"background:#222;color:white;\">**全新的应用商店版本 OneNote** 可以**获得持续的功能更新、质量更新和安全更新；能够拥有更加先进的同步引擎，进一步提升同步的体验；能够拥有更加现代化的用户界面体验；对于触屏和手写以及墨迹功能的支持更加完善等等**；**不足之处**则是**只能使用 OneDrive 作为笔记本保存的唯一位置**，</span>这意味着<span style=\"background:#222;color:white;\">OneDrive的同步速度将是决定应用商店版OneNote的重要因素</span>；目前<span style=\"background:#222;color:white;\">**应用商店版本的 OneNote 支持的插件较少，原版功能和传统桌面版仍然有不少的差距**；**获取途径则仅限应用商店本身**</span>。而<span style=\"background:#222;color:white;\">**传统桌面版的 OneNote**，在之后**其界面和功能都不再会有大的改动**</span>，相较于商店版OneNote，<span style=\"background:#222;color:white;\">桌面版**可以将笔记保存在本地位置，也可以选择上传到云上同步**；同时**拥有大量功能扩展插件，其原版功能也更加完善**。**两者共同的优点**则是**免费和对 Office 365 的支持较好**</span>。  \n\n![onenote-website.png](https://i.loli.net/2018/11/14/5bec29664168d.png)\n\n因此，<span style=background:#222;color:white;>**如果你对本地保存和功能更加看重**，**目前来说传统桌面版的 OneNote 可能更加适合你**，如果你**经常在触屏上进行手写画画**，那么**应用商店版本的 OneNote 可能更加适合你**，但**随着微软逐渐将开发重心转移到应用商店版的 OneNote，在未来应用商店版本的 OneNote 可能会迎来更加快速稳定的发展**。</span>  \n\nEND","slug":"OneNote踩坑实录-前言","published":1,"updated":"2019-07-16T07:54:28.138Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3tt00060wvcjztmuaer","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><h3 id=\"1-OneNote-的前世今生\"><a href=\"#1-OneNote-的前世今生\" class=\"headerlink\" title=\"1. OneNote 的前世今生\"></a>1. OneNote 的前世今生</h3><p><strong>OneNote</strong> 作为微软在 Office 中预装进去的组件之一，因为不像 Office 中其它三剑客那样家喻户晓，再加上平时几乎没有什么人为其做宣传打广告，导致很长时间里 OneNote 都只能静静地躺在 Office 所有套件产品中做一个“美男子”（逃 😁</p><p>简单介绍一下 OneNote 的发展历史，OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）。从 Office 2007 开始，OneNote 也引入了 Ribbon UI 界面设计，<strong>自 Office 2010 开始，OneNote 开始具备与 OneDrive（原 SkyDrive）同步的能力，意味着用户可以将自己的笔记存储在 OneDrive 上多平台同步，以便用户在其它平台的 OneNote 上获取并阅读笔记</strong>。</p><p>下面贴几张 OneNote 在不同平台的截图，看看<strong>以紫色为界面主色调</strong>的 OneNote 能不能俘获你的芳心？😜 （因为我没有 iOS 的设备，所以…iOS 端的 OneNote 截图暂缺）<a id=\"more\"></a></p><p><img src=\"https://i.loli.net/2018/11/11/5be7ff1d6b127.png\" alt=\"onenoteuwp-ui.png\" title=\"图1：UWP版OneNote的界面\"></p><p><img src=\"https://i.loli.net/2018/11/11/5be7ffe1bb95b.png\" alt=\"onenotedesktop-ui.png\" title=\"图2：桌面版OneNote 2016的界面\"></p><p><img src=\"https://i.loli.net/2018/11/12/5be9859dcbfa5.jpg\" title=\"图3：安卓端的OneNote界面\" height=\"640px\" width=\"360px\"></p><p><img src=\"https://i.loli.net/2018/11/11/5be80fc393bf9.png\" alt=\"onenoteweb-ui.png\" title=\"图4：在线版的OneNote Online的界面\"></p><h3 id=\"2-OneNote-的优势\"><a href=\"#2-OneNote-的优势\" class=\"headerlink\" title=\"2. OneNote 的优势\"></a>2. OneNote 的优势</h3><p><span style=\"background:#222;color:#fff\"><strong>容器：</strong></span>如果你平时经常做纸质笔记，你会发现你的笔记内容可以写在这张纸的任何一个位置上，无论是按照普通的方式由第一行一直写到最后一行，还是从任何位置开始，你可以随心所欲。OneNote 也是如此，你会发现，当你在 OneNote 中输入一段文字的时候，这段文字周围会出现文字框的边界，实际上这是一个“容器”，你可以在页面的任何地方创建容器，然后把你需要的内容放入到这个容器中，可以自由拖拽容器或是合并容器，厌倦了 Word 中“死板”的排版方式，也许 OneNote 可以让你让你眼前一亮👀</p><p>![onenote-container.png](<a href=\"https://i.loli.net/2018/11/14/5bec2f1cbd70b.png\" target=\"_blank\" rel=\"noopener\">https://i.loli.net/2018/11/14/5bec2f1cbd70b.png</a> “图5：OneNote中的”容器”)</p><p><span style=\"background:#222;color:#fff\"><strong>与 Office 其它组件的关联性：</strong></span>在前面提到过，OneNote 在 Office 2016 及之前的版本中是随附安装进去的，虽然在 Office 2019 中 OneNote 默认不再安装进入 Office 中，但你仍然可以单独安装 OneNote 2016，同样也可以与其它已安装的 Office 组件联动。例如你可以将 Word 或 Excel 的内容直接插入到 OneNote 的笔记当中，将你在 Visio 中创建的图表直接插入到 OneNote 笔记里，省去了来回折腾的时间和精力。</p><p><img src=\"https://i.loli.net/2018/11/14/5bec2e10af3e3.png\" alt=\"onenote-connectto.png\" title=\"图6：OneNote与其它Office组建的联动性\"></p><p><span style=\"background:#222;color:#fff\"><strong>笔记的层级划分：</strong></span>在组织笔记的内容时，我们有必要对笔记的层级进行划分。OneNote 的笔记层级可以按照“笔记本-分区组-笔记单页”来看，每一个笔记本可以包含无数的笔记分区，而每一个分区下面又可以包含无数个笔记页面，从理论上来说，你可以无限创建笔记（前提是你的本地空间或云存储空间足够），除此之外，你还可以创建多层级嵌套的笔记分区。</p><p><span style=\"background:#222;color:#fff\"><strong>不限的同步流量：</strong></span>如果你用过 EverNote（印象笔记），免费版的每月同步流量最多为 60MB，即使付费订阅成为高级用户，每月的同步流量最多为 10GB，而 OneNote 的同步流量则没有任何限制，虽然免费的个人版 OneDrive 最多只有 5G 空间，存一些笔记还是绰绰有余的（如果觉得 OneDrive 的 5G 空间不够用，后续也可以通过付费订阅 Office 365 或购买 OneDrive 空间来扩展容量。</p><h3 id=\"3-OneNote-的不足\"><a href=\"#3-OneNote-的不足\" class=\"headerlink\" title=\"3. OneNote 的不足\"></a>3. OneNote 的不足</h3><p>在开始之前，请允许我先说几句开场白：</p><blockquote><p>我能说上面那一大串洋溢之词都是跟挤牙膏一样挤出来的吗！<br>不少遗留问题，我只想问一句巨硬你到底打不打算解决？！</p></blockquote><p>当然，我还是要说：</p><blockquote><p>以上的优点都是真正的优点</p></blockquote><p>好了，接下来进入正题：OneNote 到底有什么不足？</p><p><span style=\"background:#222;color:#fff\"><strong>同步速度慢：</strong></span>最大的问题：OneNote 的同步速度太慢了，虽然这与 OneDrive 的速度有不小的关联，但在某些时候、某些地区尤其如此，当你完成笔记的一部分修改，然后发现，OneNote 还在给你慢吞吞地进行同步，更甚者，即便你等的花都谢了，OneNote 仍然不紧不慢地告诉你：“你等会儿，我还在同步呢”</p><p>有位饱受 OneNote 同步折磨的用户，这么开玩笑道：</p><blockquote><p>我去年新建的笔记，我今年看了一下，它还在同步</p></blockquote><p>emmmmm，好吧（同情这位用户）</p><p><span style=\"background:#222;color:#fff\"><strong>百般变化的字体：</strong></span>OneNote 的字体变换问题频遭用户诟病，这种变换问题在中英文输入法切换的情况下尤其严重，例如：当你用中文输入法敲了一段文字，然后切换成英文输入法，再敲一段文字，你会发现用中文输入法和英文输入法输入的文字，在字号、字体和其它格式上有明显区别，中文输入法上字体就是微软雅黑，而英文输入法的字体则变成了 Calibri，如果你输入了数学公式，你会发现数学公式的字体是 Calibri Math，如此混乱的字体关系让不少人伤透脑筋，即便在 OneNote 的设置中重设默认字体也无济于事，不少人想出了各种“奇招”解决：</p><blockquote><p>修改 OneNote 的字体，而且是中英文分别修改，然鹅…这样的方法只能对已经输入的文本有效</p><p>修改系统字体，用其它的中文字体把相应的英文字体同名替换掉，不过只能在本地有效</p><p>或者干脆写完后全部手动改</p></blockquote><p>（注：这是一个历史遗留问题，<strong>严格来说，微软现在已经不把它当作是一个问题了…….</strong>）</p><p><span style=\"background:#222;color:#fff\"><strong>过于自由的容器：</strong></span>在前文提到的“文本容器”和自由位置创建笔记内容，也成为 OneNote 被人批评最多的其中一项，自由的创建位置导致笔记内容无法对齐，而 OneNote 又没有标尺和参考线来辅助对齐，往往在 OneNote 中对齐笔记内容是一件极其烦心的事情。</p><p><span style=\"background:#222;color:#fff\"><strong>新版本的功能缺失：</strong></span>OneNote for Windows 10 也成为用户最担心的一点，微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者，而不少重度 OneNote 用户发现目前的应用商店版本 OneNote 相较于桌面版的 OneNote，仍然缺少一些重要功能，这只能让微软再加把劲了。</p><p><span style=\"background:#222;color:#fff\"><strong>糟糕的移动端体验：</strong></span>如果你用移动端的 OneNote 来编辑笔记，这真的是一件非常令人痛苦的事情，你大概只能用移动端的 OneNote 来阅读笔记，但更加悲催的是，似乎移动端 OneNote 连在移动端阅读笔记这一功能都没有完全做好……</p><p><u><strong>其实，除了这些已经列出的问题以外，还有不少问题，我就不说了……</strong></u></p><h3 id=\"4-应用商店和桌面版的-OneNote，应该选择哪个？\"><a href=\"#4-应用商店和桌面版的-OneNote，应该选择哪个？\" class=\"headerlink\" title=\"4. 应用商店和桌面版的 OneNote，应该选择哪个？\"></a>4. 应用商店和桌面版的 OneNote，应该选择哪个？</h3><p>在文章的开头，我写了这样一段话：</p><blockquote><p>OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）</p><p>微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者</p></blockquote><p>在今年 4 月 18 日（2018 年），微软正式宣布在今年晚些时候发布的 Office 2019 和 Office 365 中，OneNote 桌面版将不再是 Office 的唯一体验，取而代之的是 OneNote for Windows 10（即我们一般常说的“应用商店版本”，可在 Windows 10 的应用商店中免费下载的版本）</p><p>详情页面（英文版本）：<a href=\"https://support.office.com/zh-cn/article/what-s-the-difference-between-onenote-and-onenote-2016-a624e692-b78b-4c09-b07f-46181958118f\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p><img src=\"https://i.loli.net/2018/11/14/5bec1996c27c2.png\" alt=\"uwpanddesktop-diff.png\"></p><p><strong>简单来说，OneNote for Windows 10 的命运，接下来是这样的：</strong></p><ul><li>将会定期获得功能更新、安全更新和质量更新</li><li>同步引擎将会重写，更加快速和稳定</li><li>更好的 Windows 10 集成</li><li>加强的研究工具、数学工具、墨迹与手写和教育领域功能</li></ul><p><strong>而桌面版的 OneNote，它的命运，接下来是这样的：</strong></p><ul><li>在支持期限内，仍将继续获得安全更新和质量更新</li><li>将不会再获得任何实质的功能更新</li><li>你仍然可用桌面版的 OneNote 来管理你的笔记</li></ul><p>从上面的对比，我们可以看到，<span style=\"background:#222;color:#fff\"><strong>微软已经不会再为传统桌面版的 OneNote 添加任何新的功能，换言之，微软已经将开发重心逐渐转向了 OneNote for Windows 10（即应用商店版）</strong>，值得一提的是，Mac OS X 上的 OneNote 不受到任何影响。</span></p><p>那么，作为用户，到底是追随发展潮流将应用商店版 OneNote 作为主力，还是仍然抱着传统桌面版的 OneNote 继续前行？我用一张表格来展现目前这两个版本的特点：</p><table><thead><tr><th align=\"center\">功能/版本</th><th align=\"center\">OneNote商店版本</th><th align=\"center\">OneNote桌面版本</th></tr></thead><tbody><tr><td align=\"center\"><strong>更新内容</strong></td><td align=\"center\">功能更新、质量更新和安全更新</td><td align=\"center\">仅包含质量更新和安全更新</td></tr><tr><td align=\"center\"><strong>界面</strong></td><td align=\"center\">更加现代化</td><td align=\"center\">不再有变化</td></tr><tr><td align=\"center\"><strong>同步引擎</strong></td><td align=\"center\">采用全新的引擎</td><td align=\"center\">仍使用旧引擎</td></tr><tr><td align=\"center\"><strong>笔记存储位置</strong></td><td align=\"center\">仅能保存在云上</td><td align=\"center\">本地或云存储均可</td></tr><tr><td align=\"center\"><strong>需要付费？</strong></td><td align=\"center\">不需要</td><td align=\"center\">不需要</td></tr><tr><td align=\"center\"><strong>Office 365支持</strong></td><td align=\"center\">有</td><td align=\"center\">有</td></tr><tr><td align=\"center\"><strong>对手写和墨迹的支持程度</strong></td><td align=\"center\">完善</td><td align=\"center\">有待提升</td></tr><tr><td align=\"center\"><strong>插件可扩展数量</strong></td><td align=\"center\">较少</td><td align=\"center\">完善且丰富</td></tr><tr><td align=\"center\"><strong>原版功能丰富程度</strong></td><td align=\"center\">仍有待提升，缺少部分传统版功能</td><td align=\"center\">完善</td></tr><tr><td align=\"center\"><strong>下载地址</strong></td><td align=\"center\">仅应用商店</td><td align=\"center\">onenote.com</td></tr></tbody></table><p>从上表中可以看到，与传统桌面版的 OneNote 相比较，<span style=\"background:#222;color:#fff\"><strong>全新的应用商店版本 OneNote</strong> 可以<strong>获得持续的功能更新、质量更新和安全更新；能够拥有更加先进的同步引擎，进一步提升同步的体验；能够拥有更加现代化的用户界面体验；对于触屏和手写以及墨迹功能的支持更加完善等等</strong>；<strong>不足之处</strong>则是<strong>只能使用 OneDrive 作为笔记本保存的唯一位置</strong>，</span>这意味着<span style=\"background:#222;color:#fff\">OneDrive的同步速度将是决定应用商店版OneNote的重要因素</span>；目前<span style=\"background:#222;color:#fff\"><strong>应用商店版本的 OneNote 支持的插件较少，原版功能和传统桌面版仍然有不少的差距</strong>；<strong>获取途径则仅限应用商店本身</strong></span>。而<span style=\"background:#222;color:#fff\"><strong>传统桌面版的 OneNote</strong>，在之后<strong>其界面和功能都不再会有大的改动</strong></span>，相较于商店版OneNote，<span style=\"background:#222;color:#fff\">桌面版<strong>可以将笔记保存在本地位置，也可以选择上传到云上同步</strong>；同时<strong>拥有大量功能扩展插件，其原版功能也更加完善</strong>。<strong>两者共同的优点</strong>则是<strong>免费和对 Office 365 的支持较好</strong></span>。</p><p><img src=\"https://i.loli.net/2018/11/14/5bec29664168d.png\" alt=\"onenote-website.png\"></p><p>因此，<span style=\"background:#222;color:#fff\"><strong>如果你对本地保存和功能更加看重</strong>，<strong>目前来说传统桌面版的 OneNote 可能更加适合你</strong>，如果你<strong>经常在触屏上进行手写画画</strong>，那么<strong>应用商店版本的 OneNote 可能更加适合你</strong>，但<strong>随着微软逐渐将开发重心转移到应用商店版的 OneNote，在未来应用商店版本的 OneNote 可能会迎来更加快速稳定的发展</strong>。</span></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":4220,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><h3 id=\"1-OneNote-的前世今生\"><a href=\"#1-OneNote-的前世今生\" class=\"headerlink\" title=\"1. OneNote 的前世今生\"></a>1. OneNote 的前世今生</h3><p><strong>OneNote</strong> 作为微软在 Office 中预装进去的组件之一，因为不像 Office 中其它三剑客那样家喻户晓，再加上平时几乎没有什么人为其做宣传打广告，导致很长时间里 OneNote 都只能静静地躺在 Office 所有套件产品中做一个“美男子”（逃 😁</p><p>简单介绍一下 OneNote 的发展历史，OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）。从 Office 2007 开始，OneNote 也引入了 Ribbon UI 界面设计，<strong>自 Office 2010 开始，OneNote 开始具备与 OneDrive（原 SkyDrive）同步的能力，意味着用户可以将自己的笔记存储在 OneDrive 上多平台同步，以便用户在其它平台的 OneNote 上获取并阅读笔记</strong>。</p><p>下面贴几张 OneNote 在不同平台的截图，看看<strong>以紫色为界面主色调</strong>的 OneNote 能不能俘获你的芳心？😜 （因为我没有 iOS 的设备，所以…iOS 端的 OneNote 截图暂缺）","more":"</p><p><img src=\"https://i.loli.net/2018/11/11/5be7ff1d6b127.png\" alt=\"onenoteuwp-ui.png\" title=\"图1：UWP版OneNote的界面\"></p><p><img src=\"https://i.loli.net/2018/11/11/5be7ffe1bb95b.png\" alt=\"onenotedesktop-ui.png\" title=\"图2：桌面版OneNote 2016的界面\"></p><p><img src=\"https://i.loli.net/2018/11/12/5be9859dcbfa5.jpg\" title=\"图3：安卓端的OneNote界面\" height=\"640px\" width=\"360px\"></p><p><img src=\"https://i.loli.net/2018/11/11/5be80fc393bf9.png\" alt=\"onenoteweb-ui.png\" title=\"图4：在线版的OneNote Online的界面\"></p><h3 id=\"2-OneNote-的优势\"><a href=\"#2-OneNote-的优势\" class=\"headerlink\" title=\"2. OneNote 的优势\"></a>2. OneNote 的优势</h3><p><span style=\"background:#222;color:#fff\"><strong>容器：</strong></span>如果你平时经常做纸质笔记，你会发现你的笔记内容可以写在这张纸的任何一个位置上，无论是按照普通的方式由第一行一直写到最后一行，还是从任何位置开始，你可以随心所欲。OneNote 也是如此，你会发现，当你在 OneNote 中输入一段文字的时候，这段文字周围会出现文字框的边界，实际上这是一个“容器”，你可以在页面的任何地方创建容器，然后把你需要的内容放入到这个容器中，可以自由拖拽容器或是合并容器，厌倦了 Word 中“死板”的排版方式，也许 OneNote 可以让你让你眼前一亮👀</p><p>![onenote-container.png](<a href=\"https://i.loli.net/2018/11/14/5bec2f1cbd70b.png\" target=\"_blank\" rel=\"noopener\">https://i.loli.net/2018/11/14/5bec2f1cbd70b.png</a> “图5：OneNote中的”容器”)</p><p><span style=\"background:#222;color:#fff\"><strong>与 Office 其它组件的关联性：</strong></span>在前面提到过，OneNote 在 Office 2016 及之前的版本中是随附安装进去的，虽然在 Office 2019 中 OneNote 默认不再安装进入 Office 中，但你仍然可以单独安装 OneNote 2016，同样也可以与其它已安装的 Office 组件联动。例如你可以将 Word 或 Excel 的内容直接插入到 OneNote 的笔记当中，将你在 Visio 中创建的图表直接插入到 OneNote 笔记里，省去了来回折腾的时间和精力。</p><p><img src=\"https://i.loli.net/2018/11/14/5bec2e10af3e3.png\" alt=\"onenote-connectto.png\" title=\"图6：OneNote与其它Office组建的联动性\"></p><p><span style=\"background:#222;color:#fff\"><strong>笔记的层级划分：</strong></span>在组织笔记的内容时，我们有必要对笔记的层级进行划分。OneNote 的笔记层级可以按照“笔记本-分区组-笔记单页”来看，每一个笔记本可以包含无数的笔记分区，而每一个分区下面又可以包含无数个笔记页面，从理论上来说，你可以无限创建笔记（前提是你的本地空间或云存储空间足够），除此之外，你还可以创建多层级嵌套的笔记分区。</p><p><span style=\"background:#222;color:#fff\"><strong>不限的同步流量：</strong></span>如果你用过 EverNote（印象笔记），免费版的每月同步流量最多为 60MB，即使付费订阅成为高级用户，每月的同步流量最多为 10GB，而 OneNote 的同步流量则没有任何限制，虽然免费的个人版 OneDrive 最多只有 5G 空间，存一些笔记还是绰绰有余的（如果觉得 OneDrive 的 5G 空间不够用，后续也可以通过付费订阅 Office 365 或购买 OneDrive 空间来扩展容量。</p><h3 id=\"3-OneNote-的不足\"><a href=\"#3-OneNote-的不足\" class=\"headerlink\" title=\"3. OneNote 的不足\"></a>3. OneNote 的不足</h3><p>在开始之前，请允许我先说几句开场白：</p><blockquote><p>我能说上面那一大串洋溢之词都是跟挤牙膏一样挤出来的吗！<br>不少遗留问题，我只想问一句巨硬你到底打不打算解决？！</p></blockquote><p>当然，我还是要说：</p><blockquote><p>以上的优点都是真正的优点</p></blockquote><p>好了，接下来进入正题：OneNote 到底有什么不足？</p><p><span style=\"background:#222;color:#fff\"><strong>同步速度慢：</strong></span>最大的问题：OneNote 的同步速度太慢了，虽然这与 OneDrive 的速度有不小的关联，但在某些时候、某些地区尤其如此，当你完成笔记的一部分修改，然后发现，OneNote 还在给你慢吞吞地进行同步，更甚者，即便你等的花都谢了，OneNote 仍然不紧不慢地告诉你：“你等会儿，我还在同步呢”</p><p>有位饱受 OneNote 同步折磨的用户，这么开玩笑道：</p><blockquote><p>我去年新建的笔记，我今年看了一下，它还在同步</p></blockquote><p>emmmmm，好吧（同情这位用户）</p><p><span style=\"background:#222;color:#fff\"><strong>百般变化的字体：</strong></span>OneNote 的字体变换问题频遭用户诟病，这种变换问题在中英文输入法切换的情况下尤其严重，例如：当你用中文输入法敲了一段文字，然后切换成英文输入法，再敲一段文字，你会发现用中文输入法和英文输入法输入的文字，在字号、字体和其它格式上有明显区别，中文输入法上字体就是微软雅黑，而英文输入法的字体则变成了 Calibri，如果你输入了数学公式，你会发现数学公式的字体是 Calibri Math，如此混乱的字体关系让不少人伤透脑筋，即便在 OneNote 的设置中重设默认字体也无济于事，不少人想出了各种“奇招”解决：</p><blockquote><p>修改 OneNote 的字体，而且是中英文分别修改，然鹅…这样的方法只能对已经输入的文本有效</p><p>修改系统字体，用其它的中文字体把相应的英文字体同名替换掉，不过只能在本地有效</p><p>或者干脆写完后全部手动改</p></blockquote><p>（注：这是一个历史遗留问题，<strong>严格来说，微软现在已经不把它当作是一个问题了…….</strong>）</p><p><span style=\"background:#222;color:#fff\"><strong>过于自由的容器：</strong></span>在前文提到的“文本容器”和自由位置创建笔记内容，也成为 OneNote 被人批评最多的其中一项，自由的创建位置导致笔记内容无法对齐，而 OneNote 又没有标尺和参考线来辅助对齐，往往在 OneNote 中对齐笔记内容是一件极其烦心的事情。</p><p><span style=\"background:#222;color:#fff\"><strong>新版本的功能缺失：</strong></span>OneNote for Windows 10 也成为用户最担心的一点，微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者，而不少重度 OneNote 用户发现目前的应用商店版本 OneNote 相较于桌面版的 OneNote，仍然缺少一些重要功能，这只能让微软再加把劲了。</p><p><span style=\"background:#222;color:#fff\"><strong>糟糕的移动端体验：</strong></span>如果你用移动端的 OneNote 来编辑笔记，这真的是一件非常令人痛苦的事情，你大概只能用移动端的 OneNote 来阅读笔记，但更加悲催的是，似乎移动端 OneNote 连在移动端阅读笔记这一功能都没有完全做好……</p><p><u><strong>其实，除了这些已经列出的问题以外，还有不少问题，我就不说了……</strong></u></p><h3 id=\"4-应用商店和桌面版的-OneNote，应该选择哪个？\"><a href=\"#4-应用商店和桌面版的-OneNote，应该选择哪个？\" class=\"headerlink\" title=\"4. 应用商店和桌面版的 OneNote，应该选择哪个？\"></a>4. 应用商店和桌面版的 OneNote，应该选择哪个？</h3><p>在文章的开头，我写了这样一段话：</p><blockquote><p>OneNote 首次出现于 Office 2003 当中，而后在历代 Office 中都可以见到它的身影（Office 2019 除外，原因见下文）</p><p>微软已经宣布 OneNote for Windows 10 将代替桌面版的 OneNote 2016 成为继任者</p></blockquote><p>在今年 4 月 18 日（2018 年），微软正式宣布在今年晚些时候发布的 Office 2019 和 Office 365 中，OneNote 桌面版将不再是 Office 的唯一体验，取而代之的是 OneNote for Windows 10（即我们一般常说的“应用商店版本”，可在 Windows 10 的应用商店中免费下载的版本）</p><p>详情页面（英文版本）：<a href=\"https://support.office.com/zh-cn/article/what-s-the-difference-between-onenote-and-onenote-2016-a624e692-b78b-4c09-b07f-46181958118f\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p><img src=\"https://i.loli.net/2018/11/14/5bec1996c27c2.png\" alt=\"uwpanddesktop-diff.png\"></p><p><strong>简单来说，OneNote for Windows 10 的命运，接下来是这样的：</strong></p><ul><li>将会定期获得功能更新、安全更新和质量更新</li><li>同步引擎将会重写，更加快速和稳定</li><li>更好的 Windows 10 集成</li><li>加强的研究工具、数学工具、墨迹与手写和教育领域功能</li></ul><p><strong>而桌面版的 OneNote，它的命运，接下来是这样的：</strong></p><ul><li>在支持期限内，仍将继续获得安全更新和质量更新</li><li>将不会再获得任何实质的功能更新</li><li>你仍然可用桌面版的 OneNote 来管理你的笔记</li></ul><p>从上面的对比，我们可以看到，<span style=\"background:#222;color:#fff\"><strong>微软已经不会再为传统桌面版的 OneNote 添加任何新的功能，换言之，微软已经将开发重心逐渐转向了 OneNote for Windows 10（即应用商店版）</strong>，值得一提的是，Mac OS X 上的 OneNote 不受到任何影响。</span></p><p>那么，作为用户，到底是追随发展潮流将应用商店版 OneNote 作为主力，还是仍然抱着传统桌面版的 OneNote 继续前行？我用一张表格来展现目前这两个版本的特点：</p><table><thead><tr><th align=\"center\">功能/版本</th><th align=\"center\">OneNote商店版本</th><th align=\"center\">OneNote桌面版本</th></tr></thead><tbody><tr><td align=\"center\"><strong>更新内容</strong></td><td align=\"center\">功能更新、质量更新和安全更新</td><td align=\"center\">仅包含质量更新和安全更新</td></tr><tr><td align=\"center\"><strong>界面</strong></td><td align=\"center\">更加现代化</td><td align=\"center\">不再有变化</td></tr><tr><td align=\"center\"><strong>同步引擎</strong></td><td align=\"center\">采用全新的引擎</td><td align=\"center\">仍使用旧引擎</td></tr><tr><td align=\"center\"><strong>笔记存储位置</strong></td><td align=\"center\">仅能保存在云上</td><td align=\"center\">本地或云存储均可</td></tr><tr><td align=\"center\"><strong>需要付费？</strong></td><td align=\"center\">不需要</td><td align=\"center\">不需要</td></tr><tr><td align=\"center\"><strong>Office 365支持</strong></td><td align=\"center\">有</td><td align=\"center\">有</td></tr><tr><td align=\"center\"><strong>对手写和墨迹的支持程度</strong></td><td align=\"center\">完善</td><td align=\"center\">有待提升</td></tr><tr><td align=\"center\"><strong>插件可扩展数量</strong></td><td align=\"center\">较少</td><td align=\"center\">完善且丰富</td></tr><tr><td align=\"center\"><strong>原版功能丰富程度</strong></td><td align=\"center\">仍有待提升，缺少部分传统版功能</td><td align=\"center\">完善</td></tr><tr><td align=\"center\"><strong>下载地址</strong></td><td align=\"center\">仅应用商店</td><td align=\"center\">onenote.com</td></tr></tbody></table><p>从上表中可以看到，与传统桌面版的 OneNote 相比较，<span style=\"background:#222;color:#fff\"><strong>全新的应用商店版本 OneNote</strong> 可以<strong>获得持续的功能更新、质量更新和安全更新；能够拥有更加先进的同步引擎，进一步提升同步的体验；能够拥有更加现代化的用户界面体验；对于触屏和手写以及墨迹功能的支持更加完善等等</strong>；<strong>不足之处</strong>则是<strong>只能使用 OneDrive 作为笔记本保存的唯一位置</strong>，</span>这意味着<span style=\"background:#222;color:#fff\">OneDrive的同步速度将是决定应用商店版OneNote的重要因素</span>；目前<span style=\"background:#222;color:#fff\"><strong>应用商店版本的 OneNote 支持的插件较少，原版功能和传统桌面版仍然有不少的差距</strong>；<strong>获取途径则仅限应用商店本身</strong></span>。而<span style=\"background:#222;color:#fff\"><strong>传统桌面版的 OneNote</strong>，在之后<strong>其界面和功能都不再会有大的改动</strong></span>，相较于商店版OneNote，<span style=\"background:#222;color:#fff\">桌面版<strong>可以将笔记保存在本地位置，也可以选择上传到云上同步</strong>；同时<strong>拥有大量功能扩展插件，其原版功能也更加完善</strong>。<strong>两者共同的优点</strong>则是<strong>免费和对 Office 365 的支持较好</strong></span>。</p><p><img src=\"https://i.loli.net/2018/11/14/5bec29664168d.png\" alt=\"onenote-website.png\"></p><p>因此，<span style=\"background:#222;color:#fff\"><strong>如果你对本地保存和功能更加看重</strong>，<strong>目前来说传统桌面版的 OneNote 可能更加适合你</strong>，如果你<strong>经常在触屏上进行手写画画</strong>，那么<strong>应用商店版本的 OneNote 可能更加适合你</strong>，但<strong>随着微软逐渐将开发重心转移到应用商店版的 OneNote，在未来应用商店版本的 OneNote 可能会迎来更加快速稳定的发展</strong>。</span></p><p>END</p><!-- rebuild by neat -->"},{"title":"Windows的自带便笺应用","abbrlink":"2207cc69","date":"2019-06-29T04:50:48.000Z","_content":"\n有时候需要快速在电脑上记录一些事情，然而自带的记事本功能过于简单，而Word又太过于复杂难以达到快速记录的效果，这个时候我们大都会去寻找一些第三方的便签应用，但大多数人都忽略了Windows的**自带应用**“Sticky Notes”（中文名称：便笺） <!--more-->   \n\n![商店介绍截图](https://i.loli.net/2019/06/29/5d17093258e9c28319.png)\n\n说是系统自带，是因为你不需要从其它地方下载这个应用，自Windows 7开始这个应用就存在于系统之中，但由于藏得过于深入，有时候不仔细寻找一番还真不一定找到。但是Windows 7上的便笺和初始版本Windows 10上的便笺功能简单，没有一个统一的管理方式（经常是开一大堆便笺窗口堆放在桌面上）、没有同步（这意味着这些内容只能在本地上查看），很多人望而却步。然而自从Windows 10 1809和Sticky Notes的3.0版本发布后，微软终于对这个应用上了心。可堪大用了。  \n\n这是因为之后微软为它加入了**统一的便笺管理窗口和同步功能**，这就意味着以后再也不会打开一大堆便笺无所适从了，而且多端同步可以让你的便笺在各个设备上预览查看，有用户说，自这次更新后，这个便笺从一个可有可无的东西瞬间变成了一个具有“极高生产力”的应用。  \n\n在打开主窗口以后，会自动弹出你上一次编辑过的便笺的窗口。如果想要打开统一的便笺管理界面，只需单击右上角的“菜单”按钮，在弹出菜单中单击“笔记列表”即可。在上方还可以切换便笺的背景颜色，如果对创建便笺时默认随机选择的颜色不满意，可以切换一个颜色。  \n\n![笔记内容菜单](https://i.loli.net/2019/06/29/5d178304c837054087.png)  \n\n笔记窗口的底部则是一排功能区按钮，从左至右分别为：加粗、斜体、下划线、删除线、切换项目符号和添加图片（新版本中提供）。这样可以方便地处理笔记的内容、标注事项等。（尤其是添加图片功能，这比用个回形针或订书钉或胶带把图片纸固定在纸质便笺上方便多了hhh）    \n\n![各功能按钮演示](https://i.loli.net/2019/06/29/5d17093389faf80806.png)\n\n从Sticky Notes的3.0版本开始，微软为其加入了统一的笔记管理窗口，单击左上角的“+”按钮可以新建笔记。在窗口的上方还有一个搜索框，不用面对着大量的便笺发愁找不到对应的信息了。  \n\n![笔记管理窗口&全文搜索](https://i.loli.net/2019/06/29/5d170932bae6935083.png)  \n\n在设置界面中，如果已经登录了微软账户，那么你的所有便笺笔记内容都会自动同步到这个账户中，这样即便你在其它电脑上，只要登录了账户，便可以轻松访问你的便笺内容了。值得一提的是，为了配合Windows 10 1809中的“暗黑模式”，便笺的新版本已经加入了暗黑模式主题，看着更加赏心悦目；而如果你是Insider成员，则可以申请参与“便笺”的内部体验成员预览，抢鲜体验新功能。    \n\n![“便笺”设置界面-1](https://i.loli.net/2019/06/29/5d1709332c06642080.png)  \n\n另外值得一提的是，除了Windows 10上面的UWP版的“便笺”应用，在移动端上也可以使用。只需下载移动端的最新版的OneNote（如果没有，可能需要进入预览版本），在下方的底部标签栏中点击“便笺”即可管理便笺（移动端中也可以实现完整的PC端功能）；除此之外，Sticky Notes还提供了网页端的版本，可以在浏览器中访问，对于没有官方客户端的macOS和较早版本的Sticky Notes的Windows 7用户来说，微软这一举动真的是太贴心了。顺带一提，网页端的Sticky Notes在国内网络条件下可以直连访问无需其它方式。当然如果不想用浏览器访问的话，也可以利用工具将它转换为网页应用（例如Chrome中的“创建网页快捷方式”）。假如你的安卓手机正在使用微软桌面，其本身也内置了“便笺”方便管理。  \n\n{% tabs tab,1 %}\n<!-- tab 移动端截图（Android） -->\n**移动端截图：** [操作截图请看这里](https://i.loli.net/2019/06/29/5d170935a704b40852.gif)\n![](https://i.loli.net/2019/06/30/5d1839b2390ac38881.png)\n<!-- endtab -->\n<!-- tab 网页端截图（Browser） -->\n**网页版截图：**\n![](https://i.loli.net/2019/06/29/5d170933ef64b12357.png) \n<!-- endtab -->\n{% endtabs %}\n\n**Sticky Notes网页版地址：**[单击此处](https://www.onenote.com/stickynotes#)\n\n所以，如果你需要一个美观颜值高、简洁但不失基本功能的便笺笔记应用，那么这个微软家的Sticky Notes不失为一个好选择。  \n\nEND","source":"_posts/Windows的自带便笺应用.md","raw":"---\ntitle: Windows的自带便笺应用\ntags:\n  - Windows\n  - 自带应用\n  - 便笺\ncategories: 用户体验\nabbrlink: 2207cc69\ndate: 2019-06-29 12:50:48\n---\n\n有时候需要快速在电脑上记录一些事情，然而自带的记事本功能过于简单，而Word又太过于复杂难以达到快速记录的效果，这个时候我们大都会去寻找一些第三方的便签应用，但大多数人都忽略了Windows的**自带应用**“Sticky Notes”（中文名称：便笺） <!--more-->   \n\n![商店介绍截图](https://i.loli.net/2019/06/29/5d17093258e9c28319.png)\n\n说是系统自带，是因为你不需要从其它地方下载这个应用，自Windows 7开始这个应用就存在于系统之中，但由于藏得过于深入，有时候不仔细寻找一番还真不一定找到。但是Windows 7上的便笺和初始版本Windows 10上的便笺功能简单，没有一个统一的管理方式（经常是开一大堆便笺窗口堆放在桌面上）、没有同步（这意味着这些内容只能在本地上查看），很多人望而却步。然而自从Windows 10 1809和Sticky Notes的3.0版本发布后，微软终于对这个应用上了心。可堪大用了。  \n\n这是因为之后微软为它加入了**统一的便笺管理窗口和同步功能**，这就意味着以后再也不会打开一大堆便笺无所适从了，而且多端同步可以让你的便笺在各个设备上预览查看，有用户说，自这次更新后，这个便笺从一个可有可无的东西瞬间变成了一个具有“极高生产力”的应用。  \n\n在打开主窗口以后，会自动弹出你上一次编辑过的便笺的窗口。如果想要打开统一的便笺管理界面，只需单击右上角的“菜单”按钮，在弹出菜单中单击“笔记列表”即可。在上方还可以切换便笺的背景颜色，如果对创建便笺时默认随机选择的颜色不满意，可以切换一个颜色。  \n\n![笔记内容菜单](https://i.loli.net/2019/06/29/5d178304c837054087.png)  \n\n笔记窗口的底部则是一排功能区按钮，从左至右分别为：加粗、斜体、下划线、删除线、切换项目符号和添加图片（新版本中提供）。这样可以方便地处理笔记的内容、标注事项等。（尤其是添加图片功能，这比用个回形针或订书钉或胶带把图片纸固定在纸质便笺上方便多了hhh）    \n\n![各功能按钮演示](https://i.loli.net/2019/06/29/5d17093389faf80806.png)\n\n从Sticky Notes的3.0版本开始，微软为其加入了统一的笔记管理窗口，单击左上角的“+”按钮可以新建笔记。在窗口的上方还有一个搜索框，不用面对着大量的便笺发愁找不到对应的信息了。  \n\n![笔记管理窗口&全文搜索](https://i.loli.net/2019/06/29/5d170932bae6935083.png)  \n\n在设置界面中，如果已经登录了微软账户，那么你的所有便笺笔记内容都会自动同步到这个账户中，这样即便你在其它电脑上，只要登录了账户，便可以轻松访问你的便笺内容了。值得一提的是，为了配合Windows 10 1809中的“暗黑模式”，便笺的新版本已经加入了暗黑模式主题，看着更加赏心悦目；而如果你是Insider成员，则可以申请参与“便笺”的内部体验成员预览，抢鲜体验新功能。    \n\n![“便笺”设置界面-1](https://i.loli.net/2019/06/29/5d1709332c06642080.png)  \n\n另外值得一提的是，除了Windows 10上面的UWP版的“便笺”应用，在移动端上也可以使用。只需下载移动端的最新版的OneNote（如果没有，可能需要进入预览版本），在下方的底部标签栏中点击“便笺”即可管理便笺（移动端中也可以实现完整的PC端功能）；除此之外，Sticky Notes还提供了网页端的版本，可以在浏览器中访问，对于没有官方客户端的macOS和较早版本的Sticky Notes的Windows 7用户来说，微软这一举动真的是太贴心了。顺带一提，网页端的Sticky Notes在国内网络条件下可以直连访问无需其它方式。当然如果不想用浏览器访问的话，也可以利用工具将它转换为网页应用（例如Chrome中的“创建网页快捷方式”）。假如你的安卓手机正在使用微软桌面，其本身也内置了“便笺”方便管理。  \n\n{% tabs tab,1 %}\n<!-- tab 移动端截图（Android） -->\n**移动端截图：** [操作截图请看这里](https://i.loli.net/2019/06/29/5d170935a704b40852.gif)\n![](https://i.loli.net/2019/06/30/5d1839b2390ac38881.png)\n<!-- endtab -->\n<!-- tab 网页端截图（Browser） -->\n**网页版截图：**\n![](https://i.loli.net/2019/06/29/5d170933ef64b12357.png) \n<!-- endtab -->\n{% endtabs %}\n\n**Sticky Notes网页版地址：**[单击此处](https://www.onenote.com/stickynotes#)\n\n所以，如果你需要一个美观颜值高、简洁但不失基本功能的便笺笔记应用，那么这个微软家的Sticky Notes不失为一个好选择。  \n\nEND","slug":"Windows的自带便笺应用","published":1,"updated":"2019-07-13T13:28:02.919Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3tw00070wvc5lc89jpl","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>有时候需要快速在电脑上记录一些事情，然而自带的记事本功能过于简单，而Word又太过于复杂难以达到快速记录的效果，这个时候我们大都会去寻找一些第三方的便签应用，但大多数人都忽略了Windows的<strong>自带应用</strong>“Sticky Notes”（中文名称：便笺）<a id=\"more\"></a></p><p><img src=\"https://i.loli.net/2019/06/29/5d17093258e9c28319.png\" alt=\"商店介绍截图\"></p><p>说是系统自带，是因为你不需要从其它地方下载这个应用，自Windows 7开始这个应用就存在于系统之中，但由于藏得过于深入，有时候不仔细寻找一番还真不一定找到。但是Windows 7上的便笺和初始版本Windows 10上的便笺功能简单，没有一个统一的管理方式（经常是开一大堆便笺窗口堆放在桌面上）、没有同步（这意味着这些内容只能在本地上查看），很多人望而却步。然而自从Windows 10 1809和Sticky Notes的3.0版本发布后，微软终于对这个应用上了心。可堪大用了。</p><p>这是因为之后微软为它加入了<strong>统一的便笺管理窗口和同步功能</strong>，这就意味着以后再也不会打开一大堆便笺无所适从了，而且多端同步可以让你的便笺在各个设备上预览查看，有用户说，自这次更新后，这个便笺从一个可有可无的东西瞬间变成了一个具有“极高生产力”的应用。</p><p>在打开主窗口以后，会自动弹出你上一次编辑过的便笺的窗口。如果想要打开统一的便笺管理界面，只需单击右上角的“菜单”按钮，在弹出菜单中单击“笔记列表”即可。在上方还可以切换便笺的背景颜色，如果对创建便笺时默认随机选择的颜色不满意，可以切换一个颜色。</p><p><img src=\"https://i.loli.net/2019/06/29/5d178304c837054087.png\" alt=\"笔记内容菜单\"></p><p>笔记窗口的底部则是一排功能区按钮，从左至右分别为：加粗、斜体、下划线、删除线、切换项目符号和添加图片（新版本中提供）。这样可以方便地处理笔记的内容、标注事项等。（尤其是添加图片功能，这比用个回形针或订书钉或胶带把图片纸固定在纸质便笺上方便多了hhh）</p><p><img src=\"https://i.loli.net/2019/06/29/5d17093389faf80806.png\" alt=\"各功能按钮演示\"></p><p>从Sticky Notes的3.0版本开始，微软为其加入了统一的笔记管理窗口，单击左上角的“+”按钮可以新建笔记。在窗口的上方还有一个搜索框，不用面对着大量的便笺发愁找不到对应的信息了。</p><p><img src=\"https://i.loli.net/2019/06/29/5d170932bae6935083.png\" alt=\"笔记管理窗口&amp;全文搜索\"></p><p>在设置界面中，如果已经登录了微软账户，那么你的所有便笺笔记内容都会自动同步到这个账户中，这样即便你在其它电脑上，只要登录了账户，便可以轻松访问你的便笺内容了。值得一提的是，为了配合Windows 10 1809中的“暗黑模式”，便笺的新版本已经加入了暗黑模式主题，看着更加赏心悦目；而如果你是Insider成员，则可以申请参与“便笺”的内部体验成员预览，抢鲜体验新功能。</p><p><img src=\"https://i.loli.net/2019/06/29/5d1709332c06642080.png\" alt=\"“便笺”设置界面-1\"></p><p>另外值得一提的是，除了Windows 10上面的UWP版的“便笺”应用，在移动端上也可以使用。只需下载移动端的最新版的OneNote（如果没有，可能需要进入预览版本），在下方的底部标签栏中点击“便笺”即可管理便笺（移动端中也可以实现完整的PC端功能）；除此之外，Sticky Notes还提供了网页端的版本，可以在浏览器中访问，对于没有官方客户端的macOS和较早版本的Sticky Notes的Windows 7用户来说，微软这一举动真的是太贴心了。顺带一提，网页端的Sticky Notes在国内网络条件下可以直连访问无需其它方式。当然如果不想用浏览器访问的话，也可以利用工具将它转换为网页应用（例如Chrome中的“创建网页快捷方式”）。假如你的安卓手机正在使用微软桌面，其本身也内置了“便笺”方便管理。</p><div class=\"tabs\" id=\"tab\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tab-1\">移动端截图（Android）</a></li><li class=\"tab\"><a href=\"#tab-2\">网页端截图（Browser）</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-1\"><p><strong>移动端截图：</strong> <a href=\"https://i.loli.net/2019/06/29/5d170935a704b40852.gif\" target=\"_blank\" rel=\"noopener\">操作截图请看这里</a><br><img src=\"https://i.loli.net/2019/06/30/5d1839b2390ac38881.png\" alt></p></div><div class=\"tab-pane\" id=\"tab-2\"><p><strong>网页版截图：</strong><br><img src=\"https://i.loli.net/2019/06/29/5d170933ef64b12357.png\" alt></p></div></div></div><p><strong>Sticky Notes网页版地址：</strong><a href=\"https://www.onenote.com/stickynotes#\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>所以，如果你需要一个美观颜值高、简洁但不失基本功能的便笺笔记应用，那么这个微软家的Sticky Notes不失为一个好选择。</p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":1502,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>有时候需要快速在电脑上记录一些事情，然而自带的记事本功能过于简单，而Word又太过于复杂难以达到快速记录的效果，这个时候我们大都会去寻找一些第三方的便签应用，但大多数人都忽略了Windows的<strong>自带应用</strong>“Sticky Notes”（中文名称：便笺）","more":"</p><p><img src=\"https://i.loli.net/2019/06/29/5d17093258e9c28319.png\" alt=\"商店介绍截图\"></p><p>说是系统自带，是因为你不需要从其它地方下载这个应用，自Windows 7开始这个应用就存在于系统之中，但由于藏得过于深入，有时候不仔细寻找一番还真不一定找到。但是Windows 7上的便笺和初始版本Windows 10上的便笺功能简单，没有一个统一的管理方式（经常是开一大堆便笺窗口堆放在桌面上）、没有同步（这意味着这些内容只能在本地上查看），很多人望而却步。然而自从Windows 10 1809和Sticky Notes的3.0版本发布后，微软终于对这个应用上了心。可堪大用了。</p><p>这是因为之后微软为它加入了<strong>统一的便笺管理窗口和同步功能</strong>，这就意味着以后再也不会打开一大堆便笺无所适从了，而且多端同步可以让你的便笺在各个设备上预览查看，有用户说，自这次更新后，这个便笺从一个可有可无的东西瞬间变成了一个具有“极高生产力”的应用。</p><p>在打开主窗口以后，会自动弹出你上一次编辑过的便笺的窗口。如果想要打开统一的便笺管理界面，只需单击右上角的“菜单”按钮，在弹出菜单中单击“笔记列表”即可。在上方还可以切换便笺的背景颜色，如果对创建便笺时默认随机选择的颜色不满意，可以切换一个颜色。</p><p><img src=\"https://i.loli.net/2019/06/29/5d178304c837054087.png\" alt=\"笔记内容菜单\"></p><p>笔记窗口的底部则是一排功能区按钮，从左至右分别为：加粗、斜体、下划线、删除线、切换项目符号和添加图片（新版本中提供）。这样可以方便地处理笔记的内容、标注事项等。（尤其是添加图片功能，这比用个回形针或订书钉或胶带把图片纸固定在纸质便笺上方便多了hhh）</p><p><img src=\"https://i.loli.net/2019/06/29/5d17093389faf80806.png\" alt=\"各功能按钮演示\"></p><p>从Sticky Notes的3.0版本开始，微软为其加入了统一的笔记管理窗口，单击左上角的“+”按钮可以新建笔记。在窗口的上方还有一个搜索框，不用面对着大量的便笺发愁找不到对应的信息了。</p><p><img src=\"https://i.loli.net/2019/06/29/5d170932bae6935083.png\" alt=\"笔记管理窗口&amp;全文搜索\"></p><p>在设置界面中，如果已经登录了微软账户，那么你的所有便笺笔记内容都会自动同步到这个账户中，这样即便你在其它电脑上，只要登录了账户，便可以轻松访问你的便笺内容了。值得一提的是，为了配合Windows 10 1809中的“暗黑模式”，便笺的新版本已经加入了暗黑模式主题，看着更加赏心悦目；而如果你是Insider成员，则可以申请参与“便笺”的内部体验成员预览，抢鲜体验新功能。</p><p><img src=\"https://i.loli.net/2019/06/29/5d1709332c06642080.png\" alt=\"“便笺”设置界面-1\"></p><p>另外值得一提的是，除了Windows 10上面的UWP版的“便笺”应用，在移动端上也可以使用。只需下载移动端的最新版的OneNote（如果没有，可能需要进入预览版本），在下方的底部标签栏中点击“便笺”即可管理便笺（移动端中也可以实现完整的PC端功能）；除此之外，Sticky Notes还提供了网页端的版本，可以在浏览器中访问，对于没有官方客户端的macOS和较早版本的Sticky Notes的Windows 7用户来说，微软这一举动真的是太贴心了。顺带一提，网页端的Sticky Notes在国内网络条件下可以直连访问无需其它方式。当然如果不想用浏览器访问的话，也可以利用工具将它转换为网页应用（例如Chrome中的“创建网页快捷方式”）。假如你的安卓手机正在使用微软桌面，其本身也内置了“便笺”方便管理。</p><div class=\"tabs\" id=\"tab\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tab-1\">移动端截图（Android）</a></li><li class=\"tab\"><a href=\"#tab-2\">网页端截图（Browser）</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-1\"><p><strong>移动端截图：</strong> <a href=\"https://i.loli.net/2019/06/29/5d170935a704b40852.gif\" target=\"_blank\" rel=\"noopener\">操作截图请看这里</a><br><img src=\"https://i.loli.net/2019/06/30/5d1839b2390ac38881.png\" alt></p></div><div class=\"tab-pane\" id=\"tab-2\"><p><strong>网页版截图：</strong><br><img src=\"https://i.loli.net/2019/06/29/5d170933ef64b12357.png\" alt></p></div></div></div><p><strong>Sticky Notes网页版地址：</strong><a href=\"https://www.onenote.com/stickynotes#\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>所以，如果你需要一个美观颜值高、简洁但不失基本功能的便笺笔记应用，那么这个微软家的Sticky Notes不失为一个好选择。</p><p>END</p><!-- rebuild by neat -->"},{"title":"一条命令, 网页变原生应用","abbrlink":"847674ff","date":"2018-11-30T10:52:50.000Z","_content":"如果说本世纪初的互联网还属于起步发展的阶段，无论是网络速度还是连接质量还无法满足人们的需要，那么现在网络已经渗透到我们的生活当中，并且还在不断快速变化，越来越先进的网络技术也开始影响应用程序的编写开发，并引申出了新的应用形态：“网络应用”（Web App）。  \n\n当然上面是从技术角度上讲，从用户角度上讲这样的网络应用技术能够解用户的“燃眉之急”，比如某些应用只有特定平台的版本，如果要在其它平台上运行，那怎么办？如果这个应用同时具有在线网页版本，那就好办了，直接将网页打包变为一个应用就能解决。移动设备上有 PhoneGap 和不少在线的网页转应用服务，**那 PC 上呢，这就要请出这个工具了——Nativefier**（这命名也是够直接，翻译过来就是“本地化”）  <!--more-->\n\n![作者的演示动图](https://storage.live.com/items/5582C1D07E2893FB!133076?authkey=APiqr1tjl5KIc1Q)  \n\n作者做这个应用的原因，是因为他厌倦了在使用 Facebook Messager 等应用聊天时再切换到开了无数标签的浏览器中搜索东西，于是便开发了这样一个项目，来把网页转化为原生网络应用。  \n\n> 作者的原话：\n>\n> I did this because I was tired of having to `⌘-tab` or `alt-tab` to my browser and then search through the numerous open tabs when I was using [Facebook Messenger](http://messenger.com/) or [Whatsapp Web](http://web.whatsapp.com/) ([relevant Hacker News thread](https://news.ycombinator.com/item?id=10930718)).  \n\n**目前整个项目已经获得了 10k 的 star**，可见这个项目本身还是值得信赖的。如果你仔细看了作者的介绍，**这里提到了 Electron**，Electron 可比 Nativefier 有名多了，作为目前最流行的前端框架，有不少项目都用到了它，比如 Atom 和 VS Code 这些代码编辑器，足见 Electron 地位的重要。  \n\n![此项目获得10k的star](https://i.loli.net/2018/11/30/5c01332288c68.png \"此项目获得了10k的star\") \n\n要想使用 Nativefier，**电脑上必须已经配置好 npm**，然后键入以下命令来安装 Nativefier 的依赖包:<font style=\"color:red\">（如果有必要，建议挂梯子下载）</font>   \n\n```\nnpm install nativefier -g\n```\n\n如果要将一个网页转换为应用，命令格式为：\n\n```\nnativefier  \"<要转换的网页地址>\"\n```\n\n例如，如果要将 GitHub 转换为应用，以上的命令就应该改为：\n\n```\nnativefier  \"https://github.com\"\n```\n\n然后按下 <kbd>Enter</kbd>回车键确认，等待一小会儿，**就会在 Nativefier 所处的根目录生成一个文件夹，文件夹中的内容就是 Nativefier 生成的原生网络应用文件，执行其中的可执行文件即可**。**另外值得注意的是，Nativefier 是支持多平台的（Windows、Mac OS 和 Linux），也支持多架构（x86、x64 和 arm）**，可以说作者考虑得很周全，也确实在一定程度上方便了用户。  \n\n但是，我们生成应用应该自己自定义一个应用的名称，这样才能让它更像一个应用，还需要一个图标（默认是 Electron 的图标），而 **Nativefier 也考虑到了这一点，因此其自身带了不少功能参数，通过指定这些功能参数，我们可以发挥无限可能性将网页变为原生应用**。  \n\n例如，我要将自己的博客网站转换为一个原生应用，同时还要自定义这个应用的名字为“WzBlog”，图标要使用这个站点的图标，这里需要指定两个功能参数：`--name`和`--icon`。命令如下：  \n\n```\nnativefier  --name  \"WzBlog\"  --icon  \"G:\\HexoBlog\\hexo-icon.ico\"   \"witherzuo.github.io\"\n```\n\n{% note warning %}   \n\nWindows 下指定的图标，**后缀名必须为 .ico 格式**  \n\n{% endnote %}   \n\n然后敲下回车，耐心等待 Nativefier 执行任务。  \n\n![转换后的界面](https://i.loli.net/2018/11/30/5c013cfc28514.png \"转换后的应用界面，已经无限逼近真正的原生应用了\")  \n\n除了能够指定图标和应用名称之外，**Nativefier 还提供了其它大量的参数供用户选择**，例如`--tray`可以给应用添加托盘图标，`--platform`可以指定要编译的目标平台，`--full-screen`可以使应用以全屏模式运行，`--flash`可以启用 flash 插件加载功能等等，也可以使用`--x`和`--y`来自定义应用的默认显示位置，如果能够善加利用，Nativefier 完全可以做到“以假乱真”的原生应用。  \n\n总的来说，Nativefier 这一项目还是很实用的，凭借着一些应用程序所具有的网页版本，可以将它们转化为原生应用来弥补一些平台上缺乏应用的情况；另外，这样的转化方式，转换后的应用，其字体显示效果要好于浏览器中展示的效果，尤其是中文字体的衬线效果，看着舒服很多。如果一定要说缺点，除去“转换的应用实际上是 Electron 的套壳，没有网络就无法正常使用”这一情况外，就应该是每个转换的应用都包含了一个 Electron 的核心框架，这一框架大小大约为 50-60MB，还是有一点大的。  \n\nEND","source":"_posts/一条命令，将网页变为原生应用.md","raw":"---\ntitle: '一条命令, 网页变原生应用'\ntags:\n  - Nativefier\n  - 使用体验\n  - Electron\n  - WebApp\ncategories:\n  - 使用体验\nabbrlink: 847674ff\ndate: 2018-11-30 18:52:50\n---\n如果说本世纪初的互联网还属于起步发展的阶段，无论是网络速度还是连接质量还无法满足人们的需要，那么现在网络已经渗透到我们的生活当中，并且还在不断快速变化，越来越先进的网络技术也开始影响应用程序的编写开发，并引申出了新的应用形态：“网络应用”（Web App）。  \n\n当然上面是从技术角度上讲，从用户角度上讲这样的网络应用技术能够解用户的“燃眉之急”，比如某些应用只有特定平台的版本，如果要在其它平台上运行，那怎么办？如果这个应用同时具有在线网页版本，那就好办了，直接将网页打包变为一个应用就能解决。移动设备上有 PhoneGap 和不少在线的网页转应用服务，**那 PC 上呢，这就要请出这个工具了——Nativefier**（这命名也是够直接，翻译过来就是“本地化”）  <!--more-->\n\n![作者的演示动图](https://storage.live.com/items/5582C1D07E2893FB!133076?authkey=APiqr1tjl5KIc1Q)  \n\n作者做这个应用的原因，是因为他厌倦了在使用 Facebook Messager 等应用聊天时再切换到开了无数标签的浏览器中搜索东西，于是便开发了这样一个项目，来把网页转化为原生网络应用。  \n\n> 作者的原话：\n>\n> I did this because I was tired of having to `⌘-tab` or `alt-tab` to my browser and then search through the numerous open tabs when I was using [Facebook Messenger](http://messenger.com/) or [Whatsapp Web](http://web.whatsapp.com/) ([relevant Hacker News thread](https://news.ycombinator.com/item?id=10930718)).  \n\n**目前整个项目已经获得了 10k 的 star**，可见这个项目本身还是值得信赖的。如果你仔细看了作者的介绍，**这里提到了 Electron**，Electron 可比 Nativefier 有名多了，作为目前最流行的前端框架，有不少项目都用到了它，比如 Atom 和 VS Code 这些代码编辑器，足见 Electron 地位的重要。  \n\n![此项目获得10k的star](https://i.loli.net/2018/11/30/5c01332288c68.png \"此项目获得了10k的star\") \n\n要想使用 Nativefier，**电脑上必须已经配置好 npm**，然后键入以下命令来安装 Nativefier 的依赖包:<font style=\"color:red\">（如果有必要，建议挂梯子下载）</font>   \n\n```\nnpm install nativefier -g\n```\n\n如果要将一个网页转换为应用，命令格式为：\n\n```\nnativefier  \"<要转换的网页地址>\"\n```\n\n例如，如果要将 GitHub 转换为应用，以上的命令就应该改为：\n\n```\nnativefier  \"https://github.com\"\n```\n\n然后按下 <kbd>Enter</kbd>回车键确认，等待一小会儿，**就会在 Nativefier 所处的根目录生成一个文件夹，文件夹中的内容就是 Nativefier 生成的原生网络应用文件，执行其中的可执行文件即可**。**另外值得注意的是，Nativefier 是支持多平台的（Windows、Mac OS 和 Linux），也支持多架构（x86、x64 和 arm）**，可以说作者考虑得很周全，也确实在一定程度上方便了用户。  \n\n但是，我们生成应用应该自己自定义一个应用的名称，这样才能让它更像一个应用，还需要一个图标（默认是 Electron 的图标），而 **Nativefier 也考虑到了这一点，因此其自身带了不少功能参数，通过指定这些功能参数，我们可以发挥无限可能性将网页变为原生应用**。  \n\n例如，我要将自己的博客网站转换为一个原生应用，同时还要自定义这个应用的名字为“WzBlog”，图标要使用这个站点的图标，这里需要指定两个功能参数：`--name`和`--icon`。命令如下：  \n\n```\nnativefier  --name  \"WzBlog\"  --icon  \"G:\\HexoBlog\\hexo-icon.ico\"   \"witherzuo.github.io\"\n```\n\n{% note warning %}   \n\nWindows 下指定的图标，**后缀名必须为 .ico 格式**  \n\n{% endnote %}   \n\n然后敲下回车，耐心等待 Nativefier 执行任务。  \n\n![转换后的界面](https://i.loli.net/2018/11/30/5c013cfc28514.png \"转换后的应用界面，已经无限逼近真正的原生应用了\")  \n\n除了能够指定图标和应用名称之外，**Nativefier 还提供了其它大量的参数供用户选择**，例如`--tray`可以给应用添加托盘图标，`--platform`可以指定要编译的目标平台，`--full-screen`可以使应用以全屏模式运行，`--flash`可以启用 flash 插件加载功能等等，也可以使用`--x`和`--y`来自定义应用的默认显示位置，如果能够善加利用，Nativefier 完全可以做到“以假乱真”的原生应用。  \n\n总的来说，Nativefier 这一项目还是很实用的，凭借着一些应用程序所具有的网页版本，可以将它们转化为原生应用来弥补一些平台上缺乏应用的情况；另外，这样的转化方式，转换后的应用，其字体显示效果要好于浏览器中展示的效果，尤其是中文字体的衬线效果，看着舒服很多。如果一定要说缺点，除去“转换的应用实际上是 Electron 的套壳，没有网络就无法正常使用”这一情况外，就应该是每个转换的应用都包含了一个 Electron 的核心框架，这一框架大小大约为 50-60MB，还是有一点大的。  \n\nEND","slug":"一条命令，将网页变为原生应用","published":1,"updated":"2019-07-16T07:43:48.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3ty00080wvcnll6mo81","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>如果说本世纪初的互联网还属于起步发展的阶段，无论是网络速度还是连接质量还无法满足人们的需要，那么现在网络已经渗透到我们的生活当中，并且还在不断快速变化，越来越先进的网络技术也开始影响应用程序的编写开发，并引申出了新的应用形态：“网络应用”（Web App）。</p><p>当然上面是从技术角度上讲，从用户角度上讲这样的网络应用技术能够解用户的“燃眉之急”，比如某些应用只有特定平台的版本，如果要在其它平台上运行，那怎么办？如果这个应用同时具有在线网页版本，那就好办了，直接将网页打包变为一个应用就能解决。移动设备上有 PhoneGap 和不少在线的网页转应用服务，<strong>那 PC 上呢，这就要请出这个工具了——Nativefier</strong>（这命名也是够直接，翻译过来就是“本地化”）<a id=\"more\"></a></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133076?authkey=APiqr1tjl5KIc1Q\" alt=\"作者的演示动图\"></p><p>作者做这个应用的原因，是因为他厌倦了在使用 Facebook Messager 等应用聊天时再切换到开了无数标签的浏览器中搜索东西，于是便开发了这样一个项目，来把网页转化为原生网络应用。</p><blockquote><p>作者的原话：</p><p>I did this because I was tired of having to <code>⌘-tab</code> or <code>alt-tab</code> to my browser and then search through the numerous open tabs when I was using <a href=\"http://messenger.com/\" target=\"_blank\" rel=\"noopener\">Facebook Messenger</a> or <a href=\"http://web.whatsapp.com/\" target=\"_blank\" rel=\"noopener\">Whatsapp Web</a> (<a href=\"https://news.ycombinator.com/item?id=10930718\" target=\"_blank\" rel=\"noopener\">relevant Hacker News thread</a>).</p></blockquote><p><strong>目前整个项目已经获得了 10k 的 star</strong>，可见这个项目本身还是值得信赖的。如果你仔细看了作者的介绍，<strong>这里提到了 Electron</strong>，Electron 可比 Nativefier 有名多了，作为目前最流行的前端框架，有不少项目都用到了它，比如 Atom 和 VS Code 这些代码编辑器，足见 Electron 地位的重要。</p><p><img src=\"https://i.loli.net/2018/11/30/5c01332288c68.png\" alt=\"此项目获得10k的star\" title=\"此项目获得了10k的star\"></p><p>要想使用 Nativefier，<strong>电脑上必须已经配置好 npm</strong>，然后键入以下命令来安装 Nativefier 的依赖包:<font style=\"color:red\">（如果有必要，建议挂梯子下载）</font></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install nativefier -g</span><br></pre></td></tr></table></figure><p>如果要将一个网页转换为应用，命令格式为：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nativefier  &quot;&lt;要转换的网页地址&gt;&quot;</span><br></pre></td></tr></table></figure><p>例如，如果要将 GitHub 转换为应用，以上的命令就应该改为：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nativefier  &quot;https://github.com&quot;</span><br></pre></td></tr></table></figure><p>然后按下 <kbd>Enter</kbd>回车键确认，等待一小会儿，<strong>就会在 Nativefier 所处的根目录生成一个文件夹，文件夹中的内容就是 Nativefier 生成的原生网络应用文件，执行其中的可执行文件即可</strong>。<strong>另外值得注意的是，Nativefier 是支持多平台的（Windows、Mac OS 和 Linux），也支持多架构（x86、x64 和 arm）</strong>，可以说作者考虑得很周全，也确实在一定程度上方便了用户。</p><p>但是，我们生成应用应该自己自定义一个应用的名称，这样才能让它更像一个应用，还需要一个图标（默认是 Electron 的图标），而 <strong>Nativefier 也考虑到了这一点，因此其自身带了不少功能参数，通过指定这些功能参数，我们可以发挥无限可能性将网页变为原生应用</strong>。</p><p>例如，我要将自己的博客网站转换为一个原生应用，同时还要自定义这个应用的名字为“WzBlog”，图标要使用这个站点的图标，这里需要指定两个功能参数：<code>--name</code>和<code>--icon</code>。命令如下：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nativefier  --name  &quot;WzBlog&quot;  --icon  &quot;G:\\HexoBlog\\hexo-icon.ico&quot;   &quot;witherzuo.github.io&quot;</span><br></pre></td></tr></table></figure><div class=\"note warning\"><p>Windows 下指定的图标，<strong>后缀名必须为 .ico 格式</strong></p></div><p>然后敲下回车，耐心等待 Nativefier 执行任务。</p><p><img src=\"https://i.loli.net/2018/11/30/5c013cfc28514.png\" alt=\"转换后的界面\" title=\"转换后的应用界面，已经无限逼近真正的原生应用了\"></p><p>除了能够指定图标和应用名称之外，<strong>Nativefier 还提供了其它大量的参数供用户选择</strong>，例如<code>--tray</code>可以给应用添加托盘图标，<code>--platform</code>可以指定要编译的目标平台，<code>--full-screen</code>可以使应用以全屏模式运行，<code>--flash</code>可以启用 flash 插件加载功能等等，也可以使用<code>--x</code>和<code>--y</code>来自定义应用的默认显示位置，如果能够善加利用，Nativefier 完全可以做到“以假乱真”的原生应用。</p><p>总的来说，Nativefier 这一项目还是很实用的，凭借着一些应用程序所具有的网页版本，可以将它们转化为原生应用来弥补一些平台上缺乏应用的情况；另外，这样的转化方式，转换后的应用，其字体显示效果要好于浏览器中展示的效果，尤其是中文字体的衬线效果，看着舒服很多。如果一定要说缺点，除去“转换的应用实际上是 Electron 的套壳，没有网络就无法正常使用”这一情况外，就应该是每个转换的应用都包含了一个 Electron 的核心框架，这一框架大小大约为 50-60MB，还是有一点大的。</p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":2074,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>如果说本世纪初的互联网还属于起步发展的阶段，无论是网络速度还是连接质量还无法满足人们的需要，那么现在网络已经渗透到我们的生活当中，并且还在不断快速变化，越来越先进的网络技术也开始影响应用程序的编写开发，并引申出了新的应用形态：“网络应用”（Web App）。</p><p>当然上面是从技术角度上讲，从用户角度上讲这样的网络应用技术能够解用户的“燃眉之急”，比如某些应用只有特定平台的版本，如果要在其它平台上运行，那怎么办？如果这个应用同时具有在线网页版本，那就好办了，直接将网页打包变为一个应用就能解决。移动设备上有 PhoneGap 和不少在线的网页转应用服务，<strong>那 PC 上呢，这就要请出这个工具了——Nativefier</strong>（这命名也是够直接，翻译过来就是“本地化”）","more":"</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133076?authkey=APiqr1tjl5KIc1Q\" alt=\"作者的演示动图\"></p><p>作者做这个应用的原因，是因为他厌倦了在使用 Facebook Messager 等应用聊天时再切换到开了无数标签的浏览器中搜索东西，于是便开发了这样一个项目，来把网页转化为原生网络应用。</p><blockquote><p>作者的原话：</p><p>I did this because I was tired of having to <code>⌘-tab</code> or <code>alt-tab</code> to my browser and then search through the numerous open tabs when I was using <a href=\"http://messenger.com/\" target=\"_blank\" rel=\"noopener\">Facebook Messenger</a> or <a href=\"http://web.whatsapp.com/\" target=\"_blank\" rel=\"noopener\">Whatsapp Web</a> (<a href=\"https://news.ycombinator.com/item?id=10930718\" target=\"_blank\" rel=\"noopener\">relevant Hacker News thread</a>).</p></blockquote><p><strong>目前整个项目已经获得了 10k 的 star</strong>，可见这个项目本身还是值得信赖的。如果你仔细看了作者的介绍，<strong>这里提到了 Electron</strong>，Electron 可比 Nativefier 有名多了，作为目前最流行的前端框架，有不少项目都用到了它，比如 Atom 和 VS Code 这些代码编辑器，足见 Electron 地位的重要。</p><p><img src=\"https://i.loli.net/2018/11/30/5c01332288c68.png\" alt=\"此项目获得10k的star\" title=\"此项目获得了10k的star\"></p><p>要想使用 Nativefier，<strong>电脑上必须已经配置好 npm</strong>，然后键入以下命令来安装 Nativefier 的依赖包:<font style=\"color:red\">（如果有必要，建议挂梯子下载）</font></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install nativefier -g</span><br></pre></td></tr></table></figure><p>如果要将一个网页转换为应用，命令格式为：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nativefier  &quot;&lt;要转换的网页地址&gt;&quot;</span><br></pre></td></tr></table></figure><p>例如，如果要将 GitHub 转换为应用，以上的命令就应该改为：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nativefier  &quot;https://github.com&quot;</span><br></pre></td></tr></table></figure><p>然后按下 <kbd>Enter</kbd>回车键确认，等待一小会儿，<strong>就会在 Nativefier 所处的根目录生成一个文件夹，文件夹中的内容就是 Nativefier 生成的原生网络应用文件，执行其中的可执行文件即可</strong>。<strong>另外值得注意的是，Nativefier 是支持多平台的（Windows、Mac OS 和 Linux），也支持多架构（x86、x64 和 arm）</strong>，可以说作者考虑得很周全，也确实在一定程度上方便了用户。</p><p>但是，我们生成应用应该自己自定义一个应用的名称，这样才能让它更像一个应用，还需要一个图标（默认是 Electron 的图标），而 <strong>Nativefier 也考虑到了这一点，因此其自身带了不少功能参数，通过指定这些功能参数，我们可以发挥无限可能性将网页变为原生应用</strong>。</p><p>例如，我要将自己的博客网站转换为一个原生应用，同时还要自定义这个应用的名字为“WzBlog”，图标要使用这个站点的图标，这里需要指定两个功能参数：<code>--name</code>和<code>--icon</code>。命令如下：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nativefier  --name  &quot;WzBlog&quot;  --icon  &quot;G:\\HexoBlog\\hexo-icon.ico&quot;   &quot;witherzuo.github.io&quot;</span><br></pre></td></tr></table></figure><div class=\"note warning\"><p>Windows 下指定的图标，<strong>后缀名必须为 .ico 格式</strong></p></div><p>然后敲下回车，耐心等待 Nativefier 执行任务。</p><p><img src=\"https://i.loli.net/2018/11/30/5c013cfc28514.png\" alt=\"转换后的界面\" title=\"转换后的应用界面，已经无限逼近真正的原生应用了\"></p><p>除了能够指定图标和应用名称之外，<strong>Nativefier 还提供了其它大量的参数供用户选择</strong>，例如<code>--tray</code>可以给应用添加托盘图标，<code>--platform</code>可以指定要编译的目标平台，<code>--full-screen</code>可以使应用以全屏模式运行，<code>--flash</code>可以启用 flash 插件加载功能等等，也可以使用<code>--x</code>和<code>--y</code>来自定义应用的默认显示位置，如果能够善加利用，Nativefier 完全可以做到“以假乱真”的原生应用。</p><p>总的来说，Nativefier 这一项目还是很实用的，凭借着一些应用程序所具有的网页版本，可以将它们转化为原生应用来弥补一些平台上缺乏应用的情况；另外，这样的转化方式，转换后的应用，其字体显示效果要好于浏览器中展示的效果，尤其是中文字体的衬线效果，看着舒服很多。如果一定要说缺点，除去“转换的应用实际上是 Electron 的套壳，没有网络就无法正常使用”这一情况外，就应该是每个转换的应用都包含了一个 Electron 的核心框架，这一框架大小大约为 50-60MB，还是有一点大的。</p><p>END</p><!-- rebuild by neat -->"},{"title":"Windows中的快捷键操作","abbrlink":"d4df7093","date":"2019-07-16T04:42:27.000Z","_content":"\n当图形化操作界面开始流行后，原来的键盘敲命令式的操作方式已经不再重要，平时对系统的大部分操作都可以通过鼠标点点即可完成。但是键盘作为现代计算机的重要输入设备，系统中自带的快捷键可以让你用更快的速度完成一些平时需要用鼠标点几下的任务。 <!--more--> \n\n平时我们很多操作都可以用快捷键来完成，比如说剪切、复制和粘贴这三个操作，就可以通过快捷键来完成：剪切 <kbd>Ctrl</kbd>+<kbd>X</kbd>、复制 <kbd>Ctrl</kbd>+<kbd>C</kbd>和粘贴 <kbd>Ctrl</kbd>+<kbd>V</kbd>。除此之外，在切换多任务窗口的时候，<kbd>Alt</kbd>+<kbd>Tab</kbd>可以唤出多任务窗口切换界面，然后按动 <kbd>Tab</kbd>键在这些窗口中变化。实际上Windows中还有不少快捷键操作。  \n\n按照微软官方的说法，键盘快捷方式就是按键或按键组合，可提供一种替代方式来执行通常使用鼠标执行的操作。快捷键操作可以分为几个部分，如“常规”、“Windows徽标键”、“文件资源管理器”等部分(下方部分以Windows 10为例)，除此之外还有第三方应用程序定义的快捷键。记录这些快捷键，也算是给自己一个备份（或是备忘录）吧。  \n\n### Windows自带快捷键：  \n\n如果没有特殊说明，所有的Windows自带快捷键都是基于Windows 10来说的，其它版本的Windows的自带快捷键大致相同，可以参考文末的微软官网说明。  \n\n#### 1. 常规快捷键\n\n|               快捷键               |                           对应操作                           |\n| :--------------------------------: | :----------------------------------------------------------: |\n|               Ctrl+X               |                          剪切选定项                          |\n|               Ctrl+C               |                          复制选定项                          |\n|               Ctrl+V               |                          粘贴选定项                          |\n|               Ctrl+Z               |                           撤销操作                           |\n|              Alt+Tab               |                      在打开的应用间切换                      |\n|               Alt+F4               |                   关闭活动项/退出活动应用                    |\n|            Win徽标键+L             |                    锁定电脑，进入锁屏界面                    |\n|            Win徽标键+D             |                        显示/隐藏桌面                         |\n|                 F2                 |                        重命名所选项目                        |\n|                 F3                 |              在文件资源管理器中搜索文件或文件夹              |\n|                 F4                 |               在文件资源管理器中显示地址栏列表               |\n|           F5（或Ctrl+R）           |                         刷新活动窗口                         |\n|                 F6                 |                循环浏览窗口或桌面上的屏幕元素                |\n|                F10                 |                    激活活动应用中的菜单栏                    |\n|              Alt+Esc               |                    按项目打开顺序循环浏览                    |\n|          Alt+带下划线字母          |                     执行该字母相关的命令                     |\n|             Alt+Enter              |                      显示所选项目的属性                      |\n|             Alt+空格键             |                    打开活动窗口的快捷菜单                    |\n|             Alt+向左键             |                             返回                             |\n|             Alt+向右键             |                             前进                             |\n|            Alt+Page Up             |                       向上移动一个屏幕                       |\n|           Alt+Page Down            |                       向下移动一个屏幕                       |\n|              Ctrl+F4               | 关闭活动文档（在可全屏显示并允许你同时打开多个文档的应用中） |\n|               Ctrl+A               |                  选择文档或窗口中的所有项目                  |\n|         Ctrl+D（或Delete）         |                  删除选定项，将其移至回收站                  |\n|               Ctrl+Y               |                           恢复操作                           |\n|            Ctrl+向右键             |                将光标移动到下一个字词的起始处                |\n|            Ctrl+向左键             |                将光标移动到上一个字词的起始处                |\n|            Ctrl+向下键             |                将光标移动到下一个段落的起始处                |\n|            Ctrl+向上键             |                将光标移动到上一个段落的起始处                |\n| Ctrl+箭头键（移至某个项目）+空格键 |               选择窗口中或桌面上的多个单独项目               |\n|       Ctrl+Shift（及箭头键）       |                          选择文本块                          |\n|        Ctrl+Esc（或徽标键）        |                        打开“开始”菜单                        |\n|           Ctrl+Shift+Esc           |                        打开任务管理器                        |\n|            Ctrl+空格键             |                  打开或关闭中文输入法编辑器                  |\n|             Shift+F10              |  显示选定项快捷菜单（在Windows安装环境中可以弹出命令窗口）   |\n|          Shift+任何箭头键          |       在窗口中或桌面上选择多个项目，或在文档中选择文本       |\n|            Shift+Delete            |                删除选定项，无需先移动到回收站                |\n|               向右键               |              打开右侧的下一个菜单，或打开子菜单              |\n|               向左键               |              打开左侧的下一个菜单，或关闭子菜单              |\n|                Esc                 |                      停止或离开当前任务                      |\n|               PrtScn               |              捕获整个屏幕截图并将其复制到剪贴板              |\n\n{% note warning %}  \n\n**尤其是最后一个快捷键，如果需要别人帮忙给你解决系统问题，不要再用手机拍出条纹状截图了，完全可以用PrintScreen键捕获整个屏幕截图然后粘贴到“画图”里再做调整。（那张熟悉的图就不放了）**  \n\n{% endnote %}  \n\n#### 2. Windows徽标键  \n\n一般位于键盘左侧下方的Windows徽标键也承载着不少快捷操作。  \n\n|      快捷键      |                           对应操作                           |\n| :--------------: | :----------------------------------------------------------: |\n|       Win        |                     打开或关闭“开始”菜单                     |\n|      Win+A       |                         打开操作中心                         |\n|      Win+C       |                     在侦听模式下启动小娜                     |\n|      Win+D       |                        显示和隐藏桌面                        |\n|      Win+E       |                      打开文件资源管理器                      |\n|      Win+G       |                          打开游戏栏                          |\n|      Win+H       |                         开始听写模式                         |\n|      Win+I       |                           打开设置                           |\n|      Win+L       |                      锁定电脑或切换账户                      |\n|      Win+M       |                        最小化所有窗口                        |\n|      Win+R       |                       打开“运行”对话框                       |\n|      Win+S       |                           打开搜索                           |\n|   Win+Shift+S    |                    获取部分屏幕的屏幕截图                    |\n|      Win+T       |                    循环浏览任务栏上的应用                    |\n|      Win+V       |               打开剪贴板（需要1809或更高版本）               |\n|      Win+X       |                      打开“快速链接”菜单                      |\n|     Win+句点     |                       打开表情符号面板                       |\n|     Win+逗号     |                         临时速览桌面                         |\n|    Win+Pause     |                     显示“系统属性”对话框                     |\n|   Win+Shift+M    |                    还原桌面上的最小化窗口                    |\n|     Win+数字     | 打开桌面，然后启动固定到任务栏的应用（位于数字所指明的位置）。如果应用已处于运行状态则切换到该应用。 |\n|     Win+Tab      |                         打开任务视图                         |\n|    Win+向上键    |                          最大化窗口                          |\n|    Win+向下键    |              删除屏幕上当前应用并最小化桌面窗口              |\n|    Win+向左键    |            最大化屏幕左侧的应用或桌面窗口（分屏）            |\n|    Win+向右键    |            最大化屏幕右侧的应用或桌面窗口（分屏）            |\n|     Win+Home     |               最小化活动桌面窗口之外的所有窗口               |\n| Win+Shift+向上键 |                将桌面窗口拉伸至屏幕顶部和底部                |\n| Win+Shift+向下键 |     在垂直方向上还原/最小化活动桌面窗口，而宽度保持不变      |\n|    Win+空格键    |                    切换输入语言和键盘布局                    |\n|     Win+加号     |                         打开“放大镜”                         |\n\n#### 3. 文件资源管理器\n\n|       快捷键        |                          对应操作                          |\n| :-----------------: | :--------------------------------------------------------: |\n|        Alt+D        |                         选择地址栏                         |\n|      Ctrl+E/F       |                         选择搜索框                         |\n|       Ctrl+N        |                         打开新窗口                         |\n|       Ctrl+W        |                        关闭活动窗口                        |\n|    Ctrl+鼠标滚轮    |              更改文件和文件夹图标的大小和外观              |\n|    Ctrl+Shift+E     |                显示选定文件夹上的所有文件夹                |\n|    Ctrl+Shift+N     |                        创建新文件夹                        |\n| NumLock+星号键（*） |               显示选定文件夹下的所有子文件夹               |\n| NumLock+加号键（+） |                   显示选定文件夹中的内容                   |\n| NumLock+减号键（-） |                       折叠选定文件夹                       |\n|        Alt+P        |                        显示预览面板                        |\n|     Alt+向右键      |                查看下一个文件夹（历史记录）                |\n|     Alt+向上键      |                  查看该文件夹所在的文件夹                  |\n|     Alt+向左键      |                查看上一个文件夹（历史记录）                |\n|      Backspace      |                      查看上一个文件夹                      |\n|       向右键        |    显示当前选择内容（如果已折叠），或选择第一个子文件夹    |\n|       向左键        | 折叠当前选择内容（如果已展开），或选择该文件夹所在的文件夹 |\n|         End         |                      显示活动窗口底部                      |\n|        Home         |                      显示活动窗口顶部                      |\n|         F11         |                   最大化或最小化活动窗口                   |\n\n#### 4. 虚拟桌面  \n\n自Windows 10新加入的虚拟桌面也拥有它的专属快捷键。\n\n|            快捷键            |             对应操作             |\n| :--------------------------: | :------------------------------: |\n|     Shift+单击任务栏按钮     | 打开应用或快速打开另一个应用实例 |\n|  Ctrl+Shift+单击任务栏按钮   |       以管理员身份打开应用       |\n|   Shift+右键单击任务栏按钮   |        显示应用的窗口菜单        |\n| Shift+右键单击分组任务栏按钮 |         显示组的窗口菜单         |\n|   Ctrl+单击分组任务栏按钮    |         循环浏览组的窗口         |\n\n### 其它快捷键说明&参考链接：\n\n**参考链接1：**[微软官网对Windows系统快捷键的说明](https://support.microsoft.com/zh-cn/help/12445/windows-keyboard-shortcuts)    \n\n**参考链接2：**[微软官网对Windows内置应用的快捷键说明](https://support.microsoft.com/zh-cn/help/13805)  \n\n**Firefox：**[Firefox帮助站点]([https://support.mozilla.org/zh-CN/kb/%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE](https://support.mozilla.org/zh-CN/kb/键盘快捷键))  \n\n**Chrome：**[Google Chrome帮助站点](https://support.google.com/chrome/answer/157179?hl=zh-Hans)  \n\n### AutoHotKey：  \n\n如果对默认的快捷键不满意（比如较难操作，按键次数较多等），可以使用AutoHotKey进行快捷键重新映射。软件官网地址：[单击此处](https://www.autohotkey.com/)  \n\nEND","source":"_posts/Windows中的快捷键操作.md","raw":"---\ntitle: Windows中的快捷键操作\nabbrlink: d4df7093\ndate: 2019-07-16 12:42:27\ntags: [Windows, 快捷键]\ncategories: Windows\n---\n\n当图形化操作界面开始流行后，原来的键盘敲命令式的操作方式已经不再重要，平时对系统的大部分操作都可以通过鼠标点点即可完成。但是键盘作为现代计算机的重要输入设备，系统中自带的快捷键可以让你用更快的速度完成一些平时需要用鼠标点几下的任务。 <!--more--> \n\n平时我们很多操作都可以用快捷键来完成，比如说剪切、复制和粘贴这三个操作，就可以通过快捷键来完成：剪切 <kbd>Ctrl</kbd>+<kbd>X</kbd>、复制 <kbd>Ctrl</kbd>+<kbd>C</kbd>和粘贴 <kbd>Ctrl</kbd>+<kbd>V</kbd>。除此之外，在切换多任务窗口的时候，<kbd>Alt</kbd>+<kbd>Tab</kbd>可以唤出多任务窗口切换界面，然后按动 <kbd>Tab</kbd>键在这些窗口中变化。实际上Windows中还有不少快捷键操作。  \n\n按照微软官方的说法，键盘快捷方式就是按键或按键组合，可提供一种替代方式来执行通常使用鼠标执行的操作。快捷键操作可以分为几个部分，如“常规”、“Windows徽标键”、“文件资源管理器”等部分(下方部分以Windows 10为例)，除此之外还有第三方应用程序定义的快捷键。记录这些快捷键，也算是给自己一个备份（或是备忘录）吧。  \n\n### Windows自带快捷键：  \n\n如果没有特殊说明，所有的Windows自带快捷键都是基于Windows 10来说的，其它版本的Windows的自带快捷键大致相同，可以参考文末的微软官网说明。  \n\n#### 1. 常规快捷键\n\n|               快捷键               |                           对应操作                           |\n| :--------------------------------: | :----------------------------------------------------------: |\n|               Ctrl+X               |                          剪切选定项                          |\n|               Ctrl+C               |                          复制选定项                          |\n|               Ctrl+V               |                          粘贴选定项                          |\n|               Ctrl+Z               |                           撤销操作                           |\n|              Alt+Tab               |                      在打开的应用间切换                      |\n|               Alt+F4               |                   关闭活动项/退出活动应用                    |\n|            Win徽标键+L             |                    锁定电脑，进入锁屏界面                    |\n|            Win徽标键+D             |                        显示/隐藏桌面                         |\n|                 F2                 |                        重命名所选项目                        |\n|                 F3                 |              在文件资源管理器中搜索文件或文件夹              |\n|                 F4                 |               在文件资源管理器中显示地址栏列表               |\n|           F5（或Ctrl+R）           |                         刷新活动窗口                         |\n|                 F6                 |                循环浏览窗口或桌面上的屏幕元素                |\n|                F10                 |                    激活活动应用中的菜单栏                    |\n|              Alt+Esc               |                    按项目打开顺序循环浏览                    |\n|          Alt+带下划线字母          |                     执行该字母相关的命令                     |\n|             Alt+Enter              |                      显示所选项目的属性                      |\n|             Alt+空格键             |                    打开活动窗口的快捷菜单                    |\n|             Alt+向左键             |                             返回                             |\n|             Alt+向右键             |                             前进                             |\n|            Alt+Page Up             |                       向上移动一个屏幕                       |\n|           Alt+Page Down            |                       向下移动一个屏幕                       |\n|              Ctrl+F4               | 关闭活动文档（在可全屏显示并允许你同时打开多个文档的应用中） |\n|               Ctrl+A               |                  选择文档或窗口中的所有项目                  |\n|         Ctrl+D（或Delete）         |                  删除选定项，将其移至回收站                  |\n|               Ctrl+Y               |                           恢复操作                           |\n|            Ctrl+向右键             |                将光标移动到下一个字词的起始处                |\n|            Ctrl+向左键             |                将光标移动到上一个字词的起始处                |\n|            Ctrl+向下键             |                将光标移动到下一个段落的起始处                |\n|            Ctrl+向上键             |                将光标移动到上一个段落的起始处                |\n| Ctrl+箭头键（移至某个项目）+空格键 |               选择窗口中或桌面上的多个单独项目               |\n|       Ctrl+Shift（及箭头键）       |                          选择文本块                          |\n|        Ctrl+Esc（或徽标键）        |                        打开“开始”菜单                        |\n|           Ctrl+Shift+Esc           |                        打开任务管理器                        |\n|            Ctrl+空格键             |                  打开或关闭中文输入法编辑器                  |\n|             Shift+F10              |  显示选定项快捷菜单（在Windows安装环境中可以弹出命令窗口）   |\n|          Shift+任何箭头键          |       在窗口中或桌面上选择多个项目，或在文档中选择文本       |\n|            Shift+Delete            |                删除选定项，无需先移动到回收站                |\n|               向右键               |              打开右侧的下一个菜单，或打开子菜单              |\n|               向左键               |              打开左侧的下一个菜单，或关闭子菜单              |\n|                Esc                 |                      停止或离开当前任务                      |\n|               PrtScn               |              捕获整个屏幕截图并将其复制到剪贴板              |\n\n{% note warning %}  \n\n**尤其是最后一个快捷键，如果需要别人帮忙给你解决系统问题，不要再用手机拍出条纹状截图了，完全可以用PrintScreen键捕获整个屏幕截图然后粘贴到“画图”里再做调整。（那张熟悉的图就不放了）**  \n\n{% endnote %}  \n\n#### 2. Windows徽标键  \n\n一般位于键盘左侧下方的Windows徽标键也承载着不少快捷操作。  \n\n|      快捷键      |                           对应操作                           |\n| :--------------: | :----------------------------------------------------------: |\n|       Win        |                     打开或关闭“开始”菜单                     |\n|      Win+A       |                         打开操作中心                         |\n|      Win+C       |                     在侦听模式下启动小娜                     |\n|      Win+D       |                        显示和隐藏桌面                        |\n|      Win+E       |                      打开文件资源管理器                      |\n|      Win+G       |                          打开游戏栏                          |\n|      Win+H       |                         开始听写模式                         |\n|      Win+I       |                           打开设置                           |\n|      Win+L       |                      锁定电脑或切换账户                      |\n|      Win+M       |                        最小化所有窗口                        |\n|      Win+R       |                       打开“运行”对话框                       |\n|      Win+S       |                           打开搜索                           |\n|   Win+Shift+S    |                    获取部分屏幕的屏幕截图                    |\n|      Win+T       |                    循环浏览任务栏上的应用                    |\n|      Win+V       |               打开剪贴板（需要1809或更高版本）               |\n|      Win+X       |                      打开“快速链接”菜单                      |\n|     Win+句点     |                       打开表情符号面板                       |\n|     Win+逗号     |                         临时速览桌面                         |\n|    Win+Pause     |                     显示“系统属性”对话框                     |\n|   Win+Shift+M    |                    还原桌面上的最小化窗口                    |\n|     Win+数字     | 打开桌面，然后启动固定到任务栏的应用（位于数字所指明的位置）。如果应用已处于运行状态则切换到该应用。 |\n|     Win+Tab      |                         打开任务视图                         |\n|    Win+向上键    |                          最大化窗口                          |\n|    Win+向下键    |              删除屏幕上当前应用并最小化桌面窗口              |\n|    Win+向左键    |            最大化屏幕左侧的应用或桌面窗口（分屏）            |\n|    Win+向右键    |            最大化屏幕右侧的应用或桌面窗口（分屏）            |\n|     Win+Home     |               最小化活动桌面窗口之外的所有窗口               |\n| Win+Shift+向上键 |                将桌面窗口拉伸至屏幕顶部和底部                |\n| Win+Shift+向下键 |     在垂直方向上还原/最小化活动桌面窗口，而宽度保持不变      |\n|    Win+空格键    |                    切换输入语言和键盘布局                    |\n|     Win+加号     |                         打开“放大镜”                         |\n\n#### 3. 文件资源管理器\n\n|       快捷键        |                          对应操作                          |\n| :-----------------: | :--------------------------------------------------------: |\n|        Alt+D        |                         选择地址栏                         |\n|      Ctrl+E/F       |                         选择搜索框                         |\n|       Ctrl+N        |                         打开新窗口                         |\n|       Ctrl+W        |                        关闭活动窗口                        |\n|    Ctrl+鼠标滚轮    |              更改文件和文件夹图标的大小和外观              |\n|    Ctrl+Shift+E     |                显示选定文件夹上的所有文件夹                |\n|    Ctrl+Shift+N     |                        创建新文件夹                        |\n| NumLock+星号键（*） |               显示选定文件夹下的所有子文件夹               |\n| NumLock+加号键（+） |                   显示选定文件夹中的内容                   |\n| NumLock+减号键（-） |                       折叠选定文件夹                       |\n|        Alt+P        |                        显示预览面板                        |\n|     Alt+向右键      |                查看下一个文件夹（历史记录）                |\n|     Alt+向上键      |                  查看该文件夹所在的文件夹                  |\n|     Alt+向左键      |                查看上一个文件夹（历史记录）                |\n|      Backspace      |                      查看上一个文件夹                      |\n|       向右键        |    显示当前选择内容（如果已折叠），或选择第一个子文件夹    |\n|       向左键        | 折叠当前选择内容（如果已展开），或选择该文件夹所在的文件夹 |\n|         End         |                      显示活动窗口底部                      |\n|        Home         |                      显示活动窗口顶部                      |\n|         F11         |                   最大化或最小化活动窗口                   |\n\n#### 4. 虚拟桌面  \n\n自Windows 10新加入的虚拟桌面也拥有它的专属快捷键。\n\n|            快捷键            |             对应操作             |\n| :--------------------------: | :------------------------------: |\n|     Shift+单击任务栏按钮     | 打开应用或快速打开另一个应用实例 |\n|  Ctrl+Shift+单击任务栏按钮   |       以管理员身份打开应用       |\n|   Shift+右键单击任务栏按钮   |        显示应用的窗口菜单        |\n| Shift+右键单击分组任务栏按钮 |         显示组的窗口菜单         |\n|   Ctrl+单击分组任务栏按钮    |         循环浏览组的窗口         |\n\n### 其它快捷键说明&参考链接：\n\n**参考链接1：**[微软官网对Windows系统快捷键的说明](https://support.microsoft.com/zh-cn/help/12445/windows-keyboard-shortcuts)    \n\n**参考链接2：**[微软官网对Windows内置应用的快捷键说明](https://support.microsoft.com/zh-cn/help/13805)  \n\n**Firefox：**[Firefox帮助站点]([https://support.mozilla.org/zh-CN/kb/%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE](https://support.mozilla.org/zh-CN/kb/键盘快捷键))  \n\n**Chrome：**[Google Chrome帮助站点](https://support.google.com/chrome/answer/157179?hl=zh-Hans)  \n\n### AutoHotKey：  \n\n如果对默认的快捷键不满意（比如较难操作，按键次数较多等），可以使用AutoHotKey进行快捷键重新映射。软件官网地址：[单击此处](https://www.autohotkey.com/)  \n\nEND","slug":"Windows中的快捷键操作","published":1,"updated":"2019-07-16T09:55:14.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3u4000b0wvcdb5jy9mf","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>当图形化操作界面开始流行后，原来的键盘敲命令式的操作方式已经不再重要，平时对系统的大部分操作都可以通过鼠标点点即可完成。但是键盘作为现代计算机的重要输入设备，系统中自带的快捷键可以让你用更快的速度完成一些平时需要用鼠标点几下的任务。<a id=\"more\"></a></p><p>平时我们很多操作都可以用快捷键来完成，比如说剪切、复制和粘贴这三个操作，就可以通过快捷键来完成：剪切 <kbd>Ctrl</kbd>+<kbd>X</kbd>、复制 <kbd>Ctrl</kbd>+<kbd>C</kbd>和粘贴 <kbd>Ctrl</kbd>+<kbd>V</kbd>。除此之外，在切换多任务窗口的时候，<kbd>Alt</kbd>+<kbd>Tab</kbd>可以唤出多任务窗口切换界面，然后按动 <kbd>Tab</kbd>键在这些窗口中变化。实际上Windows中还有不少快捷键操作。</p><p>按照微软官方的说法，键盘快捷方式就是按键或按键组合，可提供一种替代方式来执行通常使用鼠标执行的操作。快捷键操作可以分为几个部分，如“常规”、“Windows徽标键”、“文件资源管理器”等部分(下方部分以Windows 10为例)，除此之外还有第三方应用程序定义的快捷键。记录这些快捷键，也算是给自己一个备份（或是备忘录）吧。</p><h3 id=\"Windows自带快捷键：\"><a href=\"#Windows自带快捷键：\" class=\"headerlink\" title=\"Windows自带快捷键：\"></a>Windows自带快捷键：</h3><p>如果没有特殊说明，所有的Windows自带快捷键都是基于Windows 10来说的，其它版本的Windows的自带快捷键大致相同，可以参考文末的微软官网说明。</p><h4 id=\"1-常规快捷键\"><a href=\"#1-常规快捷键\" class=\"headerlink\" title=\"1. 常规快捷键\"></a>1. 常规快捷键</h4><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Ctrl+X</td><td align=\"center\">剪切选定项</td></tr><tr><td align=\"center\">Ctrl+C</td><td align=\"center\">复制选定项</td></tr><tr><td align=\"center\">Ctrl+V</td><td align=\"center\">粘贴选定项</td></tr><tr><td align=\"center\">Ctrl+Z</td><td align=\"center\">撤销操作</td></tr><tr><td align=\"center\">Alt+Tab</td><td align=\"center\">在打开的应用间切换</td></tr><tr><td align=\"center\">Alt+F4</td><td align=\"center\">关闭活动项/退出活动应用</td></tr><tr><td align=\"center\">Win徽标键+L</td><td align=\"center\">锁定电脑，进入锁屏界面</td></tr><tr><td align=\"center\">Win徽标键+D</td><td align=\"center\">显示/隐藏桌面</td></tr><tr><td align=\"center\">F2</td><td align=\"center\">重命名所选项目</td></tr><tr><td align=\"center\">F3</td><td align=\"center\">在文件资源管理器中搜索文件或文件夹</td></tr><tr><td align=\"center\">F4</td><td align=\"center\">在文件资源管理器中显示地址栏列表</td></tr><tr><td align=\"center\">F5（或Ctrl+R）</td><td align=\"center\">刷新活动窗口</td></tr><tr><td align=\"center\">F6</td><td align=\"center\">循环浏览窗口或桌面上的屏幕元素</td></tr><tr><td align=\"center\">F10</td><td align=\"center\">激活活动应用中的菜单栏</td></tr><tr><td align=\"center\">Alt+Esc</td><td align=\"center\">按项目打开顺序循环浏览</td></tr><tr><td align=\"center\">Alt+带下划线字母</td><td align=\"center\">执行该字母相关的命令</td></tr><tr><td align=\"center\">Alt+Enter</td><td align=\"center\">显示所选项目的属性</td></tr><tr><td align=\"center\">Alt+空格键</td><td align=\"center\">打开活动窗口的快捷菜单</td></tr><tr><td align=\"center\">Alt+向左键</td><td align=\"center\">返回</td></tr><tr><td align=\"center\">Alt+向右键</td><td align=\"center\">前进</td></tr><tr><td align=\"center\">Alt+Page Up</td><td align=\"center\">向上移动一个屏幕</td></tr><tr><td align=\"center\">Alt+Page Down</td><td align=\"center\">向下移动一个屏幕</td></tr><tr><td align=\"center\">Ctrl+F4</td><td align=\"center\">关闭活动文档（在可全屏显示并允许你同时打开多个文档的应用中）</td></tr><tr><td align=\"center\">Ctrl+A</td><td align=\"center\">选择文档或窗口中的所有项目</td></tr><tr><td align=\"center\">Ctrl+D（或Delete）</td><td align=\"center\">删除选定项，将其移至回收站</td></tr><tr><td align=\"center\">Ctrl+Y</td><td align=\"center\">恢复操作</td></tr><tr><td align=\"center\">Ctrl+向右键</td><td align=\"center\">将光标移动到下一个字词的起始处</td></tr><tr><td align=\"center\">Ctrl+向左键</td><td align=\"center\">将光标移动到上一个字词的起始处</td></tr><tr><td align=\"center\">Ctrl+向下键</td><td align=\"center\">将光标移动到下一个段落的起始处</td></tr><tr><td align=\"center\">Ctrl+向上键</td><td align=\"center\">将光标移动到上一个段落的起始处</td></tr><tr><td align=\"center\">Ctrl+箭头键（移至某个项目）+空格键</td><td align=\"center\">选择窗口中或桌面上的多个单独项目</td></tr><tr><td align=\"center\">Ctrl+Shift（及箭头键）</td><td align=\"center\">选择文本块</td></tr><tr><td align=\"center\">Ctrl+Esc（或徽标键）</td><td align=\"center\">打开“开始”菜单</td></tr><tr><td align=\"center\">Ctrl+Shift+Esc</td><td align=\"center\">打开任务管理器</td></tr><tr><td align=\"center\">Ctrl+空格键</td><td align=\"center\">打开或关闭中文输入法编辑器</td></tr><tr><td align=\"center\">Shift+F10</td><td align=\"center\">显示选定项快捷菜单（在Windows安装环境中可以弹出命令窗口）</td></tr><tr><td align=\"center\">Shift+任何箭头键</td><td align=\"center\">在窗口中或桌面上选择多个项目，或在文档中选择文本</td></tr><tr><td align=\"center\">Shift+Delete</td><td align=\"center\">删除选定项，无需先移动到回收站</td></tr><tr><td align=\"center\">向右键</td><td align=\"center\">打开右侧的下一个菜单，或打开子菜单</td></tr><tr><td align=\"center\">向左键</td><td align=\"center\">打开左侧的下一个菜单，或关闭子菜单</td></tr><tr><td align=\"center\">Esc</td><td align=\"center\">停止或离开当前任务</td></tr><tr><td align=\"center\">PrtScn</td><td align=\"center\">捕获整个屏幕截图并将其复制到剪贴板</td></tr></tbody></table><div class=\"note warning\"><p><strong>尤其是最后一个快捷键，如果需要别人帮忙给你解决系统问题，不要再用手机拍出条纹状截图了，完全可以用PrintScreen键捕获整个屏幕截图然后粘贴到“画图”里再做调整。（那张熟悉的图就不放了）</strong></p></div><h4 id=\"2-Windows徽标键\"><a href=\"#2-Windows徽标键\" class=\"headerlink\" title=\"2. Windows徽标键\"></a>2. Windows徽标键</h4><p>一般位于键盘左侧下方的Windows徽标键也承载着不少快捷操作。</p><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Win</td><td align=\"center\">打开或关闭“开始”菜单</td></tr><tr><td align=\"center\">Win+A</td><td align=\"center\">打开操作中心</td></tr><tr><td align=\"center\">Win+C</td><td align=\"center\">在侦听模式下启动小娜</td></tr><tr><td align=\"center\">Win+D</td><td align=\"center\">显示和隐藏桌面</td></tr><tr><td align=\"center\">Win+E</td><td align=\"center\">打开文件资源管理器</td></tr><tr><td align=\"center\">Win+G</td><td align=\"center\">打开游戏栏</td></tr><tr><td align=\"center\">Win+H</td><td align=\"center\">开始听写模式</td></tr><tr><td align=\"center\">Win+I</td><td align=\"center\">打开设置</td></tr><tr><td align=\"center\">Win+L</td><td align=\"center\">锁定电脑或切换账户</td></tr><tr><td align=\"center\">Win+M</td><td align=\"center\">最小化所有窗口</td></tr><tr><td align=\"center\">Win+R</td><td align=\"center\">打开“运行”对话框</td></tr><tr><td align=\"center\">Win+S</td><td align=\"center\">打开搜索</td></tr><tr><td align=\"center\">Win+Shift+S</td><td align=\"center\">获取部分屏幕的屏幕截图</td></tr><tr><td align=\"center\">Win+T</td><td align=\"center\">循环浏览任务栏上的应用</td></tr><tr><td align=\"center\">Win+V</td><td align=\"center\">打开剪贴板（需要1809或更高版本）</td></tr><tr><td align=\"center\">Win+X</td><td align=\"center\">打开“快速链接”菜单</td></tr><tr><td align=\"center\">Win+句点</td><td align=\"center\">打开表情符号面板</td></tr><tr><td align=\"center\">Win+逗号</td><td align=\"center\">临时速览桌面</td></tr><tr><td align=\"center\">Win+Pause</td><td align=\"center\">显示“系统属性”对话框</td></tr><tr><td align=\"center\">Win+Shift+M</td><td align=\"center\">还原桌面上的最小化窗口</td></tr><tr><td align=\"center\">Win+数字</td><td align=\"center\">打开桌面，然后启动固定到任务栏的应用（位于数字所指明的位置）。如果应用已处于运行状态则切换到该应用。</td></tr><tr><td align=\"center\">Win+Tab</td><td align=\"center\">打开任务视图</td></tr><tr><td align=\"center\">Win+向上键</td><td align=\"center\">最大化窗口</td></tr><tr><td align=\"center\">Win+向下键</td><td align=\"center\">删除屏幕上当前应用并最小化桌面窗口</td></tr><tr><td align=\"center\">Win+向左键</td><td align=\"center\">最大化屏幕左侧的应用或桌面窗口（分屏）</td></tr><tr><td align=\"center\">Win+向右键</td><td align=\"center\">最大化屏幕右侧的应用或桌面窗口（分屏）</td></tr><tr><td align=\"center\">Win+Home</td><td align=\"center\">最小化活动桌面窗口之外的所有窗口</td></tr><tr><td align=\"center\">Win+Shift+向上键</td><td align=\"center\">将桌面窗口拉伸至屏幕顶部和底部</td></tr><tr><td align=\"center\">Win+Shift+向下键</td><td align=\"center\">在垂直方向上还原/最小化活动桌面窗口，而宽度保持不变</td></tr><tr><td align=\"center\">Win+空格键</td><td align=\"center\">切换输入语言和键盘布局</td></tr><tr><td align=\"center\">Win+加号</td><td align=\"center\">打开“放大镜”</td></tr></tbody></table><h4 id=\"3-文件资源管理器\"><a href=\"#3-文件资源管理器\" class=\"headerlink\" title=\"3. 文件资源管理器\"></a>3. 文件资源管理器</h4><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Alt+D</td><td align=\"center\">选择地址栏</td></tr><tr><td align=\"center\">Ctrl+E/F</td><td align=\"center\">选择搜索框</td></tr><tr><td align=\"center\">Ctrl+N</td><td align=\"center\">打开新窗口</td></tr><tr><td align=\"center\">Ctrl+W</td><td align=\"center\">关闭活动窗口</td></tr><tr><td align=\"center\">Ctrl+鼠标滚轮</td><td align=\"center\">更改文件和文件夹图标的大小和外观</td></tr><tr><td align=\"center\">Ctrl+Shift+E</td><td align=\"center\">显示选定文件夹上的所有文件夹</td></tr><tr><td align=\"center\">Ctrl+Shift+N</td><td align=\"center\">创建新文件夹</td></tr><tr><td align=\"center\">NumLock+星号键（*）</td><td align=\"center\">显示选定文件夹下的所有子文件夹</td></tr><tr><td align=\"center\">NumLock+加号键（+）</td><td align=\"center\">显示选定文件夹中的内容</td></tr><tr><td align=\"center\">NumLock+减号键（-）</td><td align=\"center\">折叠选定文件夹</td></tr><tr><td align=\"center\">Alt+P</td><td align=\"center\">显示预览面板</td></tr><tr><td align=\"center\">Alt+向右键</td><td align=\"center\">查看下一个文件夹（历史记录）</td></tr><tr><td align=\"center\">Alt+向上键</td><td align=\"center\">查看该文件夹所在的文件夹</td></tr><tr><td align=\"center\">Alt+向左键</td><td align=\"center\">查看上一个文件夹（历史记录）</td></tr><tr><td align=\"center\">Backspace</td><td align=\"center\">查看上一个文件夹</td></tr><tr><td align=\"center\">向右键</td><td align=\"center\">显示当前选择内容（如果已折叠），或选择第一个子文件夹</td></tr><tr><td align=\"center\">向左键</td><td align=\"center\">折叠当前选择内容（如果已展开），或选择该文件夹所在的文件夹</td></tr><tr><td align=\"center\">End</td><td align=\"center\">显示活动窗口底部</td></tr><tr><td align=\"center\">Home</td><td align=\"center\">显示活动窗口顶部</td></tr><tr><td align=\"center\">F11</td><td align=\"center\">最大化或最小化活动窗口</td></tr></tbody></table><h4 id=\"4-虚拟桌面\"><a href=\"#4-虚拟桌面\" class=\"headerlink\" title=\"4. 虚拟桌面\"></a>4. 虚拟桌面</h4><p>自Windows 10新加入的虚拟桌面也拥有它的专属快捷键。</p><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Shift+单击任务栏按钮</td><td align=\"center\">打开应用或快速打开另一个应用实例</td></tr><tr><td align=\"center\">Ctrl+Shift+单击任务栏按钮</td><td align=\"center\">以管理员身份打开应用</td></tr><tr><td align=\"center\">Shift+右键单击任务栏按钮</td><td align=\"center\">显示应用的窗口菜单</td></tr><tr><td align=\"center\">Shift+右键单击分组任务栏按钮</td><td align=\"center\">显示组的窗口菜单</td></tr><tr><td align=\"center\">Ctrl+单击分组任务栏按钮</td><td align=\"center\">循环浏览组的窗口</td></tr></tbody></table><h3 id=\"其它快捷键说明-amp-参考链接：\"><a href=\"#其它快捷键说明-amp-参考链接：\" class=\"headerlink\" title=\"其它快捷键说明&amp;参考链接：\"></a>其它快捷键说明&amp;参考链接：</h3><p><strong>参考链接1：</strong><a href=\"https://support.microsoft.com/zh-cn/help/12445/windows-keyboard-shortcuts\" target=\"_blank\" rel=\"noopener\">微软官网对Windows系统快捷键的说明</a></p><p><strong>参考链接2：</strong><a href=\"https://support.microsoft.com/zh-cn/help/13805\" target=\"_blank\" rel=\"noopener\">微软官网对Windows内置应用的快捷键说明</a></p><p><strong>Firefox：</strong><a href=\"[https://support.mozilla.org/zh-CN/kb/%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE](https://support.mozilla.org/zh-CN/kb/键盘快捷键)\">Firefox帮助站点</a></p><p><strong>Chrome：</strong><a href=\"https://support.google.com/chrome/answer/157179?hl=zh-Hans\" target=\"_blank\" rel=\"noopener\">Google Chrome帮助站点</a></p><h3 id=\"AutoHotKey：\"><a href=\"#AutoHotKey：\" class=\"headerlink\" title=\"AutoHotKey：\"></a>AutoHotKey：</h3><p>如果对默认的快捷键不满意（比如较难操作，按键次数较多等），可以使用AutoHotKey进行快捷键重新映射。软件官网地址：<a href=\"https://www.autohotkey.com/\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":2835,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>当图形化操作界面开始流行后，原来的键盘敲命令式的操作方式已经不再重要，平时对系统的大部分操作都可以通过鼠标点点即可完成。但是键盘作为现代计算机的重要输入设备，系统中自带的快捷键可以让你用更快的速度完成一些平时需要用鼠标点几下的任务。","more":"</p><p>平时我们很多操作都可以用快捷键来完成，比如说剪切、复制和粘贴这三个操作，就可以通过快捷键来完成：剪切 <kbd>Ctrl</kbd>+<kbd>X</kbd>、复制 <kbd>Ctrl</kbd>+<kbd>C</kbd>和粘贴 <kbd>Ctrl</kbd>+<kbd>V</kbd>。除此之外，在切换多任务窗口的时候，<kbd>Alt</kbd>+<kbd>Tab</kbd>可以唤出多任务窗口切换界面，然后按动 <kbd>Tab</kbd>键在这些窗口中变化。实际上Windows中还有不少快捷键操作。</p><p>按照微软官方的说法，键盘快捷方式就是按键或按键组合，可提供一种替代方式来执行通常使用鼠标执行的操作。快捷键操作可以分为几个部分，如“常规”、“Windows徽标键”、“文件资源管理器”等部分(下方部分以Windows 10为例)，除此之外还有第三方应用程序定义的快捷键。记录这些快捷键，也算是给自己一个备份（或是备忘录）吧。</p><h3 id=\"Windows自带快捷键：\"><a href=\"#Windows自带快捷键：\" class=\"headerlink\" title=\"Windows自带快捷键：\"></a>Windows自带快捷键：</h3><p>如果没有特殊说明，所有的Windows自带快捷键都是基于Windows 10来说的，其它版本的Windows的自带快捷键大致相同，可以参考文末的微软官网说明。</p><h4 id=\"1-常规快捷键\"><a href=\"#1-常规快捷键\" class=\"headerlink\" title=\"1. 常规快捷键\"></a>1. 常规快捷键</h4><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Ctrl+X</td><td align=\"center\">剪切选定项</td></tr><tr><td align=\"center\">Ctrl+C</td><td align=\"center\">复制选定项</td></tr><tr><td align=\"center\">Ctrl+V</td><td align=\"center\">粘贴选定项</td></tr><tr><td align=\"center\">Ctrl+Z</td><td align=\"center\">撤销操作</td></tr><tr><td align=\"center\">Alt+Tab</td><td align=\"center\">在打开的应用间切换</td></tr><tr><td align=\"center\">Alt+F4</td><td align=\"center\">关闭活动项/退出活动应用</td></tr><tr><td align=\"center\">Win徽标键+L</td><td align=\"center\">锁定电脑，进入锁屏界面</td></tr><tr><td align=\"center\">Win徽标键+D</td><td align=\"center\">显示/隐藏桌面</td></tr><tr><td align=\"center\">F2</td><td align=\"center\">重命名所选项目</td></tr><tr><td align=\"center\">F3</td><td align=\"center\">在文件资源管理器中搜索文件或文件夹</td></tr><tr><td align=\"center\">F4</td><td align=\"center\">在文件资源管理器中显示地址栏列表</td></tr><tr><td align=\"center\">F5（或Ctrl+R）</td><td align=\"center\">刷新活动窗口</td></tr><tr><td align=\"center\">F6</td><td align=\"center\">循环浏览窗口或桌面上的屏幕元素</td></tr><tr><td align=\"center\">F10</td><td align=\"center\">激活活动应用中的菜单栏</td></tr><tr><td align=\"center\">Alt+Esc</td><td align=\"center\">按项目打开顺序循环浏览</td></tr><tr><td align=\"center\">Alt+带下划线字母</td><td align=\"center\">执行该字母相关的命令</td></tr><tr><td align=\"center\">Alt+Enter</td><td align=\"center\">显示所选项目的属性</td></tr><tr><td align=\"center\">Alt+空格键</td><td align=\"center\">打开活动窗口的快捷菜单</td></tr><tr><td align=\"center\">Alt+向左键</td><td align=\"center\">返回</td></tr><tr><td align=\"center\">Alt+向右键</td><td align=\"center\">前进</td></tr><tr><td align=\"center\">Alt+Page Up</td><td align=\"center\">向上移动一个屏幕</td></tr><tr><td align=\"center\">Alt+Page Down</td><td align=\"center\">向下移动一个屏幕</td></tr><tr><td align=\"center\">Ctrl+F4</td><td align=\"center\">关闭活动文档（在可全屏显示并允许你同时打开多个文档的应用中）</td></tr><tr><td align=\"center\">Ctrl+A</td><td align=\"center\">选择文档或窗口中的所有项目</td></tr><tr><td align=\"center\">Ctrl+D（或Delete）</td><td align=\"center\">删除选定项，将其移至回收站</td></tr><tr><td align=\"center\">Ctrl+Y</td><td align=\"center\">恢复操作</td></tr><tr><td align=\"center\">Ctrl+向右键</td><td align=\"center\">将光标移动到下一个字词的起始处</td></tr><tr><td align=\"center\">Ctrl+向左键</td><td align=\"center\">将光标移动到上一个字词的起始处</td></tr><tr><td align=\"center\">Ctrl+向下键</td><td align=\"center\">将光标移动到下一个段落的起始处</td></tr><tr><td align=\"center\">Ctrl+向上键</td><td align=\"center\">将光标移动到上一个段落的起始处</td></tr><tr><td align=\"center\">Ctrl+箭头键（移至某个项目）+空格键</td><td align=\"center\">选择窗口中或桌面上的多个单独项目</td></tr><tr><td align=\"center\">Ctrl+Shift（及箭头键）</td><td align=\"center\">选择文本块</td></tr><tr><td align=\"center\">Ctrl+Esc（或徽标键）</td><td align=\"center\">打开“开始”菜单</td></tr><tr><td align=\"center\">Ctrl+Shift+Esc</td><td align=\"center\">打开任务管理器</td></tr><tr><td align=\"center\">Ctrl+空格键</td><td align=\"center\">打开或关闭中文输入法编辑器</td></tr><tr><td align=\"center\">Shift+F10</td><td align=\"center\">显示选定项快捷菜单（在Windows安装环境中可以弹出命令窗口）</td></tr><tr><td align=\"center\">Shift+任何箭头键</td><td align=\"center\">在窗口中或桌面上选择多个项目，或在文档中选择文本</td></tr><tr><td align=\"center\">Shift+Delete</td><td align=\"center\">删除选定项，无需先移动到回收站</td></tr><tr><td align=\"center\">向右键</td><td align=\"center\">打开右侧的下一个菜单，或打开子菜单</td></tr><tr><td align=\"center\">向左键</td><td align=\"center\">打开左侧的下一个菜单，或关闭子菜单</td></tr><tr><td align=\"center\">Esc</td><td align=\"center\">停止或离开当前任务</td></tr><tr><td align=\"center\">PrtScn</td><td align=\"center\">捕获整个屏幕截图并将其复制到剪贴板</td></tr></tbody></table><div class=\"note warning\"><p><strong>尤其是最后一个快捷键，如果需要别人帮忙给你解决系统问题，不要再用手机拍出条纹状截图了，完全可以用PrintScreen键捕获整个屏幕截图然后粘贴到“画图”里再做调整。（那张熟悉的图就不放了）</strong></p></div><h4 id=\"2-Windows徽标键\"><a href=\"#2-Windows徽标键\" class=\"headerlink\" title=\"2. Windows徽标键\"></a>2. Windows徽标键</h4><p>一般位于键盘左侧下方的Windows徽标键也承载着不少快捷操作。</p><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Win</td><td align=\"center\">打开或关闭“开始”菜单</td></tr><tr><td align=\"center\">Win+A</td><td align=\"center\">打开操作中心</td></tr><tr><td align=\"center\">Win+C</td><td align=\"center\">在侦听模式下启动小娜</td></tr><tr><td align=\"center\">Win+D</td><td align=\"center\">显示和隐藏桌面</td></tr><tr><td align=\"center\">Win+E</td><td align=\"center\">打开文件资源管理器</td></tr><tr><td align=\"center\">Win+G</td><td align=\"center\">打开游戏栏</td></tr><tr><td align=\"center\">Win+H</td><td align=\"center\">开始听写模式</td></tr><tr><td align=\"center\">Win+I</td><td align=\"center\">打开设置</td></tr><tr><td align=\"center\">Win+L</td><td align=\"center\">锁定电脑或切换账户</td></tr><tr><td align=\"center\">Win+M</td><td align=\"center\">最小化所有窗口</td></tr><tr><td align=\"center\">Win+R</td><td align=\"center\">打开“运行”对话框</td></tr><tr><td align=\"center\">Win+S</td><td align=\"center\">打开搜索</td></tr><tr><td align=\"center\">Win+Shift+S</td><td align=\"center\">获取部分屏幕的屏幕截图</td></tr><tr><td align=\"center\">Win+T</td><td align=\"center\">循环浏览任务栏上的应用</td></tr><tr><td align=\"center\">Win+V</td><td align=\"center\">打开剪贴板（需要1809或更高版本）</td></tr><tr><td align=\"center\">Win+X</td><td align=\"center\">打开“快速链接”菜单</td></tr><tr><td align=\"center\">Win+句点</td><td align=\"center\">打开表情符号面板</td></tr><tr><td align=\"center\">Win+逗号</td><td align=\"center\">临时速览桌面</td></tr><tr><td align=\"center\">Win+Pause</td><td align=\"center\">显示“系统属性”对话框</td></tr><tr><td align=\"center\">Win+Shift+M</td><td align=\"center\">还原桌面上的最小化窗口</td></tr><tr><td align=\"center\">Win+数字</td><td align=\"center\">打开桌面，然后启动固定到任务栏的应用（位于数字所指明的位置）。如果应用已处于运行状态则切换到该应用。</td></tr><tr><td align=\"center\">Win+Tab</td><td align=\"center\">打开任务视图</td></tr><tr><td align=\"center\">Win+向上键</td><td align=\"center\">最大化窗口</td></tr><tr><td align=\"center\">Win+向下键</td><td align=\"center\">删除屏幕上当前应用并最小化桌面窗口</td></tr><tr><td align=\"center\">Win+向左键</td><td align=\"center\">最大化屏幕左侧的应用或桌面窗口（分屏）</td></tr><tr><td align=\"center\">Win+向右键</td><td align=\"center\">最大化屏幕右侧的应用或桌面窗口（分屏）</td></tr><tr><td align=\"center\">Win+Home</td><td align=\"center\">最小化活动桌面窗口之外的所有窗口</td></tr><tr><td align=\"center\">Win+Shift+向上键</td><td align=\"center\">将桌面窗口拉伸至屏幕顶部和底部</td></tr><tr><td align=\"center\">Win+Shift+向下键</td><td align=\"center\">在垂直方向上还原/最小化活动桌面窗口，而宽度保持不变</td></tr><tr><td align=\"center\">Win+空格键</td><td align=\"center\">切换输入语言和键盘布局</td></tr><tr><td align=\"center\">Win+加号</td><td align=\"center\">打开“放大镜”</td></tr></tbody></table><h4 id=\"3-文件资源管理器\"><a href=\"#3-文件资源管理器\" class=\"headerlink\" title=\"3. 文件资源管理器\"></a>3. 文件资源管理器</h4><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Alt+D</td><td align=\"center\">选择地址栏</td></tr><tr><td align=\"center\">Ctrl+E/F</td><td align=\"center\">选择搜索框</td></tr><tr><td align=\"center\">Ctrl+N</td><td align=\"center\">打开新窗口</td></tr><tr><td align=\"center\">Ctrl+W</td><td align=\"center\">关闭活动窗口</td></tr><tr><td align=\"center\">Ctrl+鼠标滚轮</td><td align=\"center\">更改文件和文件夹图标的大小和外观</td></tr><tr><td align=\"center\">Ctrl+Shift+E</td><td align=\"center\">显示选定文件夹上的所有文件夹</td></tr><tr><td align=\"center\">Ctrl+Shift+N</td><td align=\"center\">创建新文件夹</td></tr><tr><td align=\"center\">NumLock+星号键（*）</td><td align=\"center\">显示选定文件夹下的所有子文件夹</td></tr><tr><td align=\"center\">NumLock+加号键（+）</td><td align=\"center\">显示选定文件夹中的内容</td></tr><tr><td align=\"center\">NumLock+减号键（-）</td><td align=\"center\">折叠选定文件夹</td></tr><tr><td align=\"center\">Alt+P</td><td align=\"center\">显示预览面板</td></tr><tr><td align=\"center\">Alt+向右键</td><td align=\"center\">查看下一个文件夹（历史记录）</td></tr><tr><td align=\"center\">Alt+向上键</td><td align=\"center\">查看该文件夹所在的文件夹</td></tr><tr><td align=\"center\">Alt+向左键</td><td align=\"center\">查看上一个文件夹（历史记录）</td></tr><tr><td align=\"center\">Backspace</td><td align=\"center\">查看上一个文件夹</td></tr><tr><td align=\"center\">向右键</td><td align=\"center\">显示当前选择内容（如果已折叠），或选择第一个子文件夹</td></tr><tr><td align=\"center\">向左键</td><td align=\"center\">折叠当前选择内容（如果已展开），或选择该文件夹所在的文件夹</td></tr><tr><td align=\"center\">End</td><td align=\"center\">显示活动窗口底部</td></tr><tr><td align=\"center\">Home</td><td align=\"center\">显示活动窗口顶部</td></tr><tr><td align=\"center\">F11</td><td align=\"center\">最大化或最小化活动窗口</td></tr></tbody></table><h4 id=\"4-虚拟桌面\"><a href=\"#4-虚拟桌面\" class=\"headerlink\" title=\"4. 虚拟桌面\"></a>4. 虚拟桌面</h4><p>自Windows 10新加入的虚拟桌面也拥有它的专属快捷键。</p><table><thead><tr><th align=\"center\">快捷键</th><th align=\"center\">对应操作</th></tr></thead><tbody><tr><td align=\"center\">Shift+单击任务栏按钮</td><td align=\"center\">打开应用或快速打开另一个应用实例</td></tr><tr><td align=\"center\">Ctrl+Shift+单击任务栏按钮</td><td align=\"center\">以管理员身份打开应用</td></tr><tr><td align=\"center\">Shift+右键单击任务栏按钮</td><td align=\"center\">显示应用的窗口菜单</td></tr><tr><td align=\"center\">Shift+右键单击分组任务栏按钮</td><td align=\"center\">显示组的窗口菜单</td></tr><tr><td align=\"center\">Ctrl+单击分组任务栏按钮</td><td align=\"center\">循环浏览组的窗口</td></tr></tbody></table><h3 id=\"其它快捷键说明-amp-参考链接：\"><a href=\"#其它快捷键说明-amp-参考链接：\" class=\"headerlink\" title=\"其它快捷键说明&amp;参考链接：\"></a>其它快捷键说明&amp;参考链接：</h3><p><strong>参考链接1：</strong><a href=\"https://support.microsoft.com/zh-cn/help/12445/windows-keyboard-shortcuts\" target=\"_blank\" rel=\"noopener\">微软官网对Windows系统快捷键的说明</a></p><p><strong>参考链接2：</strong><a href=\"https://support.microsoft.com/zh-cn/help/13805\" target=\"_blank\" rel=\"noopener\">微软官网对Windows内置应用的快捷键说明</a></p><p><strong>Firefox：</strong><a href=\"[https://support.mozilla.org/zh-CN/kb/%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE](https://support.mozilla.org/zh-CN/kb/键盘快捷键)\">Firefox帮助站点</a></p><p><strong>Chrome：</strong><a href=\"https://support.google.com/chrome/answer/157179?hl=zh-Hans\" target=\"_blank\" rel=\"noopener\">Google Chrome帮助站点</a></p><h3 id=\"AutoHotKey：\"><a href=\"#AutoHotKey：\" class=\"headerlink\" title=\"AutoHotKey：\"></a>AutoHotKey：</h3><p>如果对默认的快捷键不满意（比如较难操作，按键次数较多等），可以使用AutoHotKey进行快捷键重新映射。软件官网地址：<a href=\"https://www.autohotkey.com/\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>END</p><!-- rebuild by neat -->"},{"title":"九宫格解锁游戏：Breaklock","abbrlink":"29a47e29","date":"2019-04-28T04:39:53.000Z","_content":"\n现在不少手机都自带一种屏幕解锁方式：九宫格图案解锁，顾名思义，就是在九个点中进行连线，画出正确的图案就能成功解锁屏幕进入手机。虽然现在已经有了指纹解锁甚至是面部识别解锁，但是还是有不少人使用了图案解锁方式。而有人便把这种解锁方式变为一个小游戏，来看看你用多少次能解锁正确的图案？ <!--more--> \n\n这个小游戏就是BreakLock，可以在浏览器中运行，但有一点很特殊，它无需安装，因为它是一个“渐进式网络应用”，打开后浏览器会自动弹出一条通知询问你是否将其添加到桌面，很适合无聊又不知道干什么的人用来解闷。  \n\n![breaklock-loading.jpg](https://storage.live.com/items/5582C1D07E2893FB!133776?authkey=APiqr1tjl5KIc1Q \"游戏加载界面\")  \n\n> A hybrid of Mastermind and the Android pattern lock. A game you gonna love to hate.\n\n访问地址：[单击此处](https://maxwellito.github.io/breaklock/)   \n\n![breaklock-mainscreen.jpg](https://storage.live.com/items/5582C1D07E2893FB!133777?authkey=APiqr1tjl5KIc1Q \"游戏主界面\")  \n\n游戏的判定很简单，只要画出正确的图案就算完成，实心圆表示这个点位置和顺序都正确，而空心圆则表示这个点位置正确但顺序不正确。游戏一共分成三个难度：简单（连接4个点）、中等（连接5个点）、困难（连接6个点），而游戏模式则包含三个：练习、挑战、计时，挑战模式只给你10次机会来猜出图案，次数用完游戏结束；而计时模式则限时1分钟，但不限次数。所以如果你只想休闲一下只需要选择练习模式就行，但如果想挑战一下极限，可以选择更高难度和更具挑战性的模式。  \n\n![breaklock-ruleanim.jpg](https://storage.live.com/items/5582C1D07E2893FB!133778?authkey=APiqr1tjl5KIc1Q \"规则演示动图\")  \n\n练习模式：  \n\n> No pressure, just discover and practice your game  \n\n挑战模式：  \n\n> Challenge mode give you 10 attempts only to win  \n\n计时模式：  \n\n> Solve the game in one minute, without limit of attempts  \n\n这个游戏同时已经开源在GitHub上：[单击此处](https://github.com/maxwellito/breaklock)  \n\n如果你想试试用几次能猜出正确的图案，或者实在是闲的没事可做，不妨来试试看。  \n\n视频地址：[单击此处](https://www.bilibili.com/video/av50717937/)  \n\nEND","source":"_posts/九宫格解锁游戏：Breaklock.md","raw":"---\ntitle: 九宫格解锁游戏：Breaklock\ntags:\n  - PWA\n  - 烧脑\n  - 图案解锁\ncategories: 小游戏\nabbrlink: 29a47e29\ndate: 2019-04-28 12:39:53\n---\n\n现在不少手机都自带一种屏幕解锁方式：九宫格图案解锁，顾名思义，就是在九个点中进行连线，画出正确的图案就能成功解锁屏幕进入手机。虽然现在已经有了指纹解锁甚至是面部识别解锁，但是还是有不少人使用了图案解锁方式。而有人便把这种解锁方式变为一个小游戏，来看看你用多少次能解锁正确的图案？ <!--more--> \n\n这个小游戏就是BreakLock，可以在浏览器中运行，但有一点很特殊，它无需安装，因为它是一个“渐进式网络应用”，打开后浏览器会自动弹出一条通知询问你是否将其添加到桌面，很适合无聊又不知道干什么的人用来解闷。  \n\n![breaklock-loading.jpg](https://storage.live.com/items/5582C1D07E2893FB!133776?authkey=APiqr1tjl5KIc1Q \"游戏加载界面\")  \n\n> A hybrid of Mastermind and the Android pattern lock. A game you gonna love to hate.\n\n访问地址：[单击此处](https://maxwellito.github.io/breaklock/)   \n\n![breaklock-mainscreen.jpg](https://storage.live.com/items/5582C1D07E2893FB!133777?authkey=APiqr1tjl5KIc1Q \"游戏主界面\")  \n\n游戏的判定很简单，只要画出正确的图案就算完成，实心圆表示这个点位置和顺序都正确，而空心圆则表示这个点位置正确但顺序不正确。游戏一共分成三个难度：简单（连接4个点）、中等（连接5个点）、困难（连接6个点），而游戏模式则包含三个：练习、挑战、计时，挑战模式只给你10次机会来猜出图案，次数用完游戏结束；而计时模式则限时1分钟，但不限次数。所以如果你只想休闲一下只需要选择练习模式就行，但如果想挑战一下极限，可以选择更高难度和更具挑战性的模式。  \n\n![breaklock-ruleanim.jpg](https://storage.live.com/items/5582C1D07E2893FB!133778?authkey=APiqr1tjl5KIc1Q \"规则演示动图\")  \n\n练习模式：  \n\n> No pressure, just discover and practice your game  \n\n挑战模式：  \n\n> Challenge mode give you 10 attempts only to win  \n\n计时模式：  \n\n> Solve the game in one minute, without limit of attempts  \n\n这个游戏同时已经开源在GitHub上：[单击此处](https://github.com/maxwellito/breaklock)  \n\n如果你想试试用几次能猜出正确的图案，或者实在是闲的没事可做，不妨来试试看。  \n\n视频地址：[单击此处](https://www.bilibili.com/video/av50717937/)  \n\nEND","slug":"九宫格解锁游戏：Breaklock","published":1,"updated":"2019-07-13T13:28:29.298Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3u7000c0wvc02su5rv3","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>现在不少手机都自带一种屏幕解锁方式：九宫格图案解锁，顾名思义，就是在九个点中进行连线，画出正确的图案就能成功解锁屏幕进入手机。虽然现在已经有了指纹解锁甚至是面部识别解锁，但是还是有不少人使用了图案解锁方式。而有人便把这种解锁方式变为一个小游戏，来看看你用多少次能解锁正确的图案？<a id=\"more\"></a></p><p>这个小游戏就是BreakLock，可以在浏览器中运行，但有一点很特殊，它无需安装，因为它是一个“渐进式网络应用”，打开后浏览器会自动弹出一条通知询问你是否将其添加到桌面，很适合无聊又不知道干什么的人用来解闷。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133776?authkey=APiqr1tjl5KIc1Q\" alt=\"breaklock-loading.jpg\" title=\"游戏加载界面\"></p><blockquote><p>A hybrid of Mastermind and the Android pattern lock. A game you gonna love to hate.</p></blockquote><p>访问地址：<a href=\"https://maxwellito.github.io/breaklock/\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133777?authkey=APiqr1tjl5KIc1Q\" alt=\"breaklock-mainscreen.jpg\" title=\"游戏主界面\"></p><p>游戏的判定很简单，只要画出正确的图案就算完成，实心圆表示这个点位置和顺序都正确，而空心圆则表示这个点位置正确但顺序不正确。游戏一共分成三个难度：简单（连接4个点）、中等（连接5个点）、困难（连接6个点），而游戏模式则包含三个：练习、挑战、计时，挑战模式只给你10次机会来猜出图案，次数用完游戏结束；而计时模式则限时1分钟，但不限次数。所以如果你只想休闲一下只需要选择练习模式就行，但如果想挑战一下极限，可以选择更高难度和更具挑战性的模式。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133778?authkey=APiqr1tjl5KIc1Q\" alt=\"breaklock-ruleanim.jpg\" title=\"规则演示动图\"></p><p>练习模式：</p><blockquote><p>No pressure, just discover and practice your game</p></blockquote><p>挑战模式：</p><blockquote><p>Challenge mode give you 10 attempts only to win</p></blockquote><p>计时模式：</p><blockquote><p>Solve the game in one minute, without limit of attempts</p></blockquote><p>这个游戏同时已经开源在GitHub上：<a href=\"https://github.com/maxwellito/breaklock\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>如果你想试试用几次能猜出正确的图案，或者实在是闲的没事可做，不妨来试试看。</p><p>视频地址：<a href=\"https://www.bilibili.com/video/av50717937/\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":792,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>现在不少手机都自带一种屏幕解锁方式：九宫格图案解锁，顾名思义，就是在九个点中进行连线，画出正确的图案就能成功解锁屏幕进入手机。虽然现在已经有了指纹解锁甚至是面部识别解锁，但是还是有不少人使用了图案解锁方式。而有人便把这种解锁方式变为一个小游戏，来看看你用多少次能解锁正确的图案？","more":"</p><p>这个小游戏就是BreakLock，可以在浏览器中运行，但有一点很特殊，它无需安装，因为它是一个“渐进式网络应用”，打开后浏览器会自动弹出一条通知询问你是否将其添加到桌面，很适合无聊又不知道干什么的人用来解闷。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133776?authkey=APiqr1tjl5KIc1Q\" alt=\"breaklock-loading.jpg\" title=\"游戏加载界面\"></p><blockquote><p>A hybrid of Mastermind and the Android pattern lock. A game you gonna love to hate.</p></blockquote><p>访问地址：<a href=\"https://maxwellito.github.io/breaklock/\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133777?authkey=APiqr1tjl5KIc1Q\" alt=\"breaklock-mainscreen.jpg\" title=\"游戏主界面\"></p><p>游戏的判定很简单，只要画出正确的图案就算完成，实心圆表示这个点位置和顺序都正确，而空心圆则表示这个点位置正确但顺序不正确。游戏一共分成三个难度：简单（连接4个点）、中等（连接5个点）、困难（连接6个点），而游戏模式则包含三个：练习、挑战、计时，挑战模式只给你10次机会来猜出图案，次数用完游戏结束；而计时模式则限时1分钟，但不限次数。所以如果你只想休闲一下只需要选择练习模式就行，但如果想挑战一下极限，可以选择更高难度和更具挑战性的模式。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133778?authkey=APiqr1tjl5KIc1Q\" alt=\"breaklock-ruleanim.jpg\" title=\"规则演示动图\"></p><p>练习模式：</p><blockquote><p>No pressure, just discover and practice your game</p></blockquote><p>挑战模式：</p><blockquote><p>Challenge mode give you 10 attempts only to win</p></blockquote><p>计时模式：</p><blockquote><p>Solve the game in one minute, without limit of attempts</p></blockquote><p>这个游戏同时已经开源在GitHub上：<a href=\"https://github.com/maxwellito/breaklock\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>如果你想试试用几次能猜出正确的图案，或者实在是闲的没事可做，不妨来试试看。</p><p>视频地址：<a href=\"https://www.bilibili.com/video/av50717937/\" target=\"_blank\" rel=\"noopener\">单击此处</a></p><p>END</p><!-- rebuild by neat -->"},{"title":"挖矿脚本-CoinHive","abbrlink":"e799390a","date":"2019-03-22T05:56:47.000Z","_content":"\n自从虚拟加密货币一出现，有关于挖矿的新闻就从来没有中断消失过，尤其是在网页上，相比于广告这样明显的方式，后台挖矿脚本可以在用户不知情的情况下，通过使用 CPU 甚至是 GPU 的计算力来获取收益，而这样做用户一般是不知情的（例如海盗湾）在网页渲染越来越复杂的趋势下，加载网页甚至浏览网页会消耗大量硬件资源已不再是什么新鲜事。虽然有时候会在网上看到一些用户浏览网站时遇到挖矿脚本的讨论贴，不过那终究是别人遇到过，换自己也遇上时，又会是什么反应呢？ <!--more--> \n\n![YGCQYaV0uC.png](https://storage.live.com/items/5582C1D07E2893FB!132987?authkey=APiqr1tjl5KIc1Q \"coin-hive.com瞩目\")\n\n整个事情还要追溯到上周六，正在浏览网页的我突然发现许久没有弹出消息的 Windows Defender 突然弹了一个消息通知出来，报告“发现威胁”，我还以为又是电脑里哪个第三方破解器或是注册器补丁“惨遭毒手”，因为 WD 经常这样先斩后奏，于是我直接点击通知，然而界面上出现的并不是“xx破解”，而是这么个玩意儿：  \n\n![UkNFuIjCrY.png](https://storage.live.com/items/5582C1D07E2893FB!132988?authkey=APiqr1tjl5KIc1Q \"画红圈的地方\")\n\n刚一看到这个的我还有些许没回过神儿，这是什么东西？再仔细一看：<span style=\"background-color: #222; color: white;\">**&nbsp;Trojan:JS/CoinHive.B&nbsp;**</span>，这不是 CoinHive 的挖矿脚本吗。这一下才反应过来，原来刚刚 WD 拦截的并不是什么破解或是注册机，而是一个后台挖矿的脚本！  \n\n再放一张图：  \n\n![Ibyr1IT6dS.png](https://storage.live.com/items/5582C1D07E2893FB!132990?authkey=APiqr1tjl5KIc1Q \"Windows Defender截图\")\n\n这张图看的就比较明显了，**这个脚本位于 Google Chrome 的本地代码缓存文件夹里**，也就是说，这个脚本在被缓存后就被 Windows Defender 给灭了（顺带给 WD 赞一个👍），不过 Windows Defender 也是个“手起刀落”的主儿，等我去这个文件夹里找的时候，已经什么痕迹都没有了...  \n\n![xWXJ5hGPGp.png](https://storage.live.com/items/5582C1D07E2893FB!132992?authkey=APiqr1tjl5KIc1Q \"毫无结果...\")\n\n**大致猜测一下，uBlock Origin 检测到了这个脚本并且阻止了它在当前页面上执行，然而这个脚本仍旧被下载到本地缓存，这时被 Windows Defender 发现，后面的事情想必也都清楚了。**这真是不折不扣的“午夜惊魂”。  \n\n对于虚拟加密货币，可能最令人印象深刻的就是去年 5 月的比特币“永恒之蓝”事件了，而这次的 CoinHive 又是挖掘什么的呢？\n\n![xmJB4teG0e.png](https://storage.live.com/items/5582C1D07E2893FB!132994?authkey=APiqr1tjl5KIc1Q \"已被拦截emm\")\n\n尝试访问了一下官网，果不其然，直接被拦截了...看来这条路行不通，不过，从其它途径也能够查到相关资料：\n\n![m7ctSupZ8X.png](https://storage.live.com/items/5582C1D07E2893FB!132996?authkey=APiqr1tjl5KIc1Q \"百科资料\")\n\n> 门罗币（Monero）是一个诞生于 2014 年 4 月的开源加密货币，其注重可替代性、隐私和去中心化。    ——来源于 Wikipedia\n\n而 CoinHive 正是通过加载一段 JS 脚本，来借助机器算力计算哈希来挖掘门罗币的：  \n\n> In late 2017 malware and antivirus service providers blocked a [JavaScript]>(https://en.wikipedia.org/wiki/JavaScript) implementation of Monero miner Coinhive that was embedded in websites and apps, in some cases by hackers. \n\n虽然 CoinHive 声称网站的拥有者可以通过开关来关闭 CoinHive 的挖矿脚本，或者是通过修改脚本内设置，以一种“更加友好”的方式来挖掘门罗币（即将 CPU 的工作率控制在一定范围以内），但是，显然不是所有引用了这段脚本的人都会这么做，而且这些脚本已经被一些黑客利用来进行恶意挖矿，大幅消耗用户电脑的运行资源。可以说，CoinHive 本意是希望挖掘加密货币、取得收益和网站拥有者、访问用户之间获得双赢，现在看来，整个情况并不像他们预先计划好的那样。而随着不少用户注意到挖矿脚本对电脑的影响，以及来自政府监管、安全公司警告以及**加密货币行业本身的发展的不确定性**，CoinHive 也在自家博客上宣布将于 3 月 8 号关停服务。  \n\n> Some of you might have anticipated this, some of you will be surprised. The decision has been made. We will discontinue our service on March 8, 2019. It has been a blast working on this project over the past 18 months, but to be completely honest, it isn' t economically viable anymore.\n>\n> The drop in hash rate (over 50%) after the last Monero hard fork hit us hard. So did the \"crash\" of the crypto currency market with the value of XMR depreciating over 85% within a year. This and the announced hard fork and algorithm update of the Monero network on March 9 has lead us to the conclusion that we need to discontinue Coinhive.\n>\n> Thus, mining will not be operable anymore after March 8, 2019. Your dashboards will still be accessible until April 30, 2019 so you will be able to initiate your payouts if your balance is above the minimum payout threshold.\n>\n> Thank you all for the great time we had together.\n\n虽然 CoinHive 已死，**但并不代表门罗币（Monero）和其它加密货币的挖掘会就此停止**，由于核心脚本开源，这意味着人们还可以对脚本进行修改来继续挖掘门罗币。而为了让用户注意到了解到后台挖矿对电脑的不利影响，也有人做了网站，来让用户亲身感受一下：\n\n![TW1mYQluZb.png](https://storage.live.com/items/5582C1D07E2893FB!132998?authkey=APiqr1tjl5KIc1Q \"测试网址截图\")\n\n网页地址：[单击此处](<http://tools.ldstu.com/miner/?utm_sources=/archives/41039.html>)（需要把 uBlock 或 MinerBlock 这类扩展关了再测试，不然无效）\n\n**如果没有安装能够拦截挖矿脚本的扩展，很快你的电脑 CPU 占用率会直冲到 100%，如果是笔记本的话，风扇马上就会开始全速工作起来。**\n\n现在看来，MinerBlock 还是很有用的，虽然我一般都是用 uBlock，如果你不想为了拦截挖矿脚本载单独安装一个新扩展，**uBlock 也可以达到相同的效果，生效的规则实际上已经在展示的第五张图片里出现了**😉  \n\n![5cXF54I3HE.png](https://storage.live.com/items/5582C1D07E2893FB!133000?authkey=APiqr1tjl5KIc1Q \"一切正常，报告完毕!\")   \n\nEND","source":"_posts/挖矿脚本-CoinHive.md","raw":"---\ntitle: 挖矿脚本-CoinHive\ntags:\n  - CoinHive\n  - 挖矿\ncategories: 杂记\nabbrlink: e799390a\ndate: 2019-03-22 13:56:47\n---\n\n自从虚拟加密货币一出现，有关于挖矿的新闻就从来没有中断消失过，尤其是在网页上，相比于广告这样明显的方式，后台挖矿脚本可以在用户不知情的情况下，通过使用 CPU 甚至是 GPU 的计算力来获取收益，而这样做用户一般是不知情的（例如海盗湾）在网页渲染越来越复杂的趋势下，加载网页甚至浏览网页会消耗大量硬件资源已不再是什么新鲜事。虽然有时候会在网上看到一些用户浏览网站时遇到挖矿脚本的讨论贴，不过那终究是别人遇到过，换自己也遇上时，又会是什么反应呢？ <!--more--> \n\n![YGCQYaV0uC.png](https://storage.live.com/items/5582C1D07E2893FB!132987?authkey=APiqr1tjl5KIc1Q \"coin-hive.com瞩目\")\n\n整个事情还要追溯到上周六，正在浏览网页的我突然发现许久没有弹出消息的 Windows Defender 突然弹了一个消息通知出来，报告“发现威胁”，我还以为又是电脑里哪个第三方破解器或是注册器补丁“惨遭毒手”，因为 WD 经常这样先斩后奏，于是我直接点击通知，然而界面上出现的并不是“xx破解”，而是这么个玩意儿：  \n\n![UkNFuIjCrY.png](https://storage.live.com/items/5582C1D07E2893FB!132988?authkey=APiqr1tjl5KIc1Q \"画红圈的地方\")\n\n刚一看到这个的我还有些许没回过神儿，这是什么东西？再仔细一看：<span style=\"background-color: #222; color: white;\">**&nbsp;Trojan:JS/CoinHive.B&nbsp;**</span>，这不是 CoinHive 的挖矿脚本吗。这一下才反应过来，原来刚刚 WD 拦截的并不是什么破解或是注册机，而是一个后台挖矿的脚本！  \n\n再放一张图：  \n\n![Ibyr1IT6dS.png](https://storage.live.com/items/5582C1D07E2893FB!132990?authkey=APiqr1tjl5KIc1Q \"Windows Defender截图\")\n\n这张图看的就比较明显了，**这个脚本位于 Google Chrome 的本地代码缓存文件夹里**，也就是说，这个脚本在被缓存后就被 Windows Defender 给灭了（顺带给 WD 赞一个👍），不过 Windows Defender 也是个“手起刀落”的主儿，等我去这个文件夹里找的时候，已经什么痕迹都没有了...  \n\n![xWXJ5hGPGp.png](https://storage.live.com/items/5582C1D07E2893FB!132992?authkey=APiqr1tjl5KIc1Q \"毫无结果...\")\n\n**大致猜测一下，uBlock Origin 检测到了这个脚本并且阻止了它在当前页面上执行，然而这个脚本仍旧被下载到本地缓存，这时被 Windows Defender 发现，后面的事情想必也都清楚了。**这真是不折不扣的“午夜惊魂”。  \n\n对于虚拟加密货币，可能最令人印象深刻的就是去年 5 月的比特币“永恒之蓝”事件了，而这次的 CoinHive 又是挖掘什么的呢？\n\n![xmJB4teG0e.png](https://storage.live.com/items/5582C1D07E2893FB!132994?authkey=APiqr1tjl5KIc1Q \"已被拦截emm\")\n\n尝试访问了一下官网，果不其然，直接被拦截了...看来这条路行不通，不过，从其它途径也能够查到相关资料：\n\n![m7ctSupZ8X.png](https://storage.live.com/items/5582C1D07E2893FB!132996?authkey=APiqr1tjl5KIc1Q \"百科资料\")\n\n> 门罗币（Monero）是一个诞生于 2014 年 4 月的开源加密货币，其注重可替代性、隐私和去中心化。    ——来源于 Wikipedia\n\n而 CoinHive 正是通过加载一段 JS 脚本，来借助机器算力计算哈希来挖掘门罗币的：  \n\n> In late 2017 malware and antivirus service providers blocked a [JavaScript]>(https://en.wikipedia.org/wiki/JavaScript) implementation of Monero miner Coinhive that was embedded in websites and apps, in some cases by hackers. \n\n虽然 CoinHive 声称网站的拥有者可以通过开关来关闭 CoinHive 的挖矿脚本，或者是通过修改脚本内设置，以一种“更加友好”的方式来挖掘门罗币（即将 CPU 的工作率控制在一定范围以内），但是，显然不是所有引用了这段脚本的人都会这么做，而且这些脚本已经被一些黑客利用来进行恶意挖矿，大幅消耗用户电脑的运行资源。可以说，CoinHive 本意是希望挖掘加密货币、取得收益和网站拥有者、访问用户之间获得双赢，现在看来，整个情况并不像他们预先计划好的那样。而随着不少用户注意到挖矿脚本对电脑的影响，以及来自政府监管、安全公司警告以及**加密货币行业本身的发展的不确定性**，CoinHive 也在自家博客上宣布将于 3 月 8 号关停服务。  \n\n> Some of you might have anticipated this, some of you will be surprised. The decision has been made. We will discontinue our service on March 8, 2019. It has been a blast working on this project over the past 18 months, but to be completely honest, it isn' t economically viable anymore.\n>\n> The drop in hash rate (over 50%) after the last Monero hard fork hit us hard. So did the \"crash\" of the crypto currency market with the value of XMR depreciating over 85% within a year. This and the announced hard fork and algorithm update of the Monero network on March 9 has lead us to the conclusion that we need to discontinue Coinhive.\n>\n> Thus, mining will not be operable anymore after March 8, 2019. Your dashboards will still be accessible until April 30, 2019 so you will be able to initiate your payouts if your balance is above the minimum payout threshold.\n>\n> Thank you all for the great time we had together.\n\n虽然 CoinHive 已死，**但并不代表门罗币（Monero）和其它加密货币的挖掘会就此停止**，由于核心脚本开源，这意味着人们还可以对脚本进行修改来继续挖掘门罗币。而为了让用户注意到了解到后台挖矿对电脑的不利影响，也有人做了网站，来让用户亲身感受一下：\n\n![TW1mYQluZb.png](https://storage.live.com/items/5582C1D07E2893FB!132998?authkey=APiqr1tjl5KIc1Q \"测试网址截图\")\n\n网页地址：[单击此处](<http://tools.ldstu.com/miner/?utm_sources=/archives/41039.html>)（需要把 uBlock 或 MinerBlock 这类扩展关了再测试，不然无效）\n\n**如果没有安装能够拦截挖矿脚本的扩展，很快你的电脑 CPU 占用率会直冲到 100%，如果是笔记本的话，风扇马上就会开始全速工作起来。**\n\n现在看来，MinerBlock 还是很有用的，虽然我一般都是用 uBlock，如果你不想为了拦截挖矿脚本载单独安装一个新扩展，**uBlock 也可以达到相同的效果，生效的规则实际上已经在展示的第五张图片里出现了**😉  \n\n![5cXF54I3HE.png](https://storage.live.com/items/5582C1D07E2893FB!133000?authkey=APiqr1tjl5KIc1Q \"一切正常，报告完毕!\")   \n\nEND","slug":"挖矿脚本-CoinHive","published":1,"updated":"2019-07-16T04:23:37.187Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3u9000g0wvcoecq2x8l","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>自从虚拟加密货币一出现，有关于挖矿的新闻就从来没有中断消失过，尤其是在网页上，相比于广告这样明显的方式，后台挖矿脚本可以在用户不知情的情况下，通过使用 CPU 甚至是 GPU 的计算力来获取收益，而这样做用户一般是不知情的（例如海盗湾）在网页渲染越来越复杂的趋势下，加载网页甚至浏览网页会消耗大量硬件资源已不再是什么新鲜事。虽然有时候会在网上看到一些用户浏览网站时遇到挖矿脚本的讨论贴，不过那终究是别人遇到过，换自己也遇上时，又会是什么反应呢？<a id=\"more\"></a></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132987?authkey=APiqr1tjl5KIc1Q\" alt=\"YGCQYaV0uC.png\" title=\"coin-hive.com瞩目\"></p><p>整个事情还要追溯到上周六，正在浏览网页的我突然发现许久没有弹出消息的 Windows Defender 突然弹了一个消息通知出来，报告“发现威胁”，我还以为又是电脑里哪个第三方破解器或是注册器补丁“惨遭毒手”，因为 WD 经常这样先斩后奏，于是我直接点击通知，然而界面上出现的并不是“xx破解”，而是这么个玩意儿：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132988?authkey=APiqr1tjl5KIc1Q\" alt=\"UkNFuIjCrY.png\" title=\"画红圈的地方\"></p><p>刚一看到这个的我还有些许没回过神儿，这是什么东西？再仔细一看：<span style=\"background-color:#222;color:#fff\"><strong>&nbsp;Trojan:JS/CoinHive.B&nbsp;</strong></span>，这不是 CoinHive 的挖矿脚本吗。这一下才反应过来，原来刚刚 WD 拦截的并不是什么破解或是注册机，而是一个后台挖矿的脚本！</p><p>再放一张图：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132990?authkey=APiqr1tjl5KIc1Q\" alt=\"Ibyr1IT6dS.png\" title=\"Windows Defender截图\"></p><p>这张图看的就比较明显了，<strong>这个脚本位于 Google Chrome 的本地代码缓存文件夹里</strong>，也就是说，这个脚本在被缓存后就被 Windows Defender 给灭了（顺带给 WD 赞一个👍），不过 Windows Defender 也是个“手起刀落”的主儿，等我去这个文件夹里找的时候，已经什么痕迹都没有了…</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132992?authkey=APiqr1tjl5KIc1Q\" alt=\"xWXJ5hGPGp.png\" title=\"毫无结果...\"></p><p><strong>大致猜测一下，uBlock Origin 检测到了这个脚本并且阻止了它在当前页面上执行，然而这个脚本仍旧被下载到本地缓存，这时被 Windows Defender 发现，后面的事情想必也都清楚了。</strong>这真是不折不扣的“午夜惊魂”。</p><p>对于虚拟加密货币，可能最令人印象深刻的就是去年 5 月的比特币“永恒之蓝”事件了，而这次的 CoinHive 又是挖掘什么的呢？</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132994?authkey=APiqr1tjl5KIc1Q\" alt=\"xmJB4teG0e.png\" title=\"已被拦截emm\"></p><p>尝试访问了一下官网，果不其然，直接被拦截了…看来这条路行不通，不过，从其它途径也能够查到相关资料：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132996?authkey=APiqr1tjl5KIc1Q\" alt=\"m7ctSupZ8X.png\" title=\"百科资料\"></p><blockquote><p>门罗币（Monero）是一个诞生于 2014 年 4 月的开源加密货币，其注重可替代性、隐私和去中心化。 ——来源于 Wikipedia</p></blockquote><p>而 CoinHive 正是通过加载一段 JS 脚本，来借助机器算力计算哈希来挖掘门罗币的：</p><blockquote><p>In late 2017 malware and antivirus service providers blocked a [JavaScript]&gt;(<a href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/JavaScript</a>) implementation of Monero miner Coinhive that was embedded in websites and apps, in some cases by hackers.</p></blockquote><p>虽然 CoinHive 声称网站的拥有者可以通过开关来关闭 CoinHive 的挖矿脚本，或者是通过修改脚本内设置，以一种“更加友好”的方式来挖掘门罗币（即将 CPU 的工作率控制在一定范围以内），但是，显然不是所有引用了这段脚本的人都会这么做，而且这些脚本已经被一些黑客利用来进行恶意挖矿，大幅消耗用户电脑的运行资源。可以说，CoinHive 本意是希望挖掘加密货币、取得收益和网站拥有者、访问用户之间获得双赢，现在看来，整个情况并不像他们预先计划好的那样。而随着不少用户注意到挖矿脚本对电脑的影响，以及来自政府监管、安全公司警告以及<strong>加密货币行业本身的发展的不确定性</strong>，CoinHive 也在自家博客上宣布将于 3 月 8 号关停服务。</p><blockquote><p>Some of you might have anticipated this, some of you will be surprised. The decision has been made. We will discontinue our service on March 8, 2019. It has been a blast working on this project over the past 18 months, but to be completely honest, it isn’ t economically viable anymore.</p><p>The drop in hash rate (over 50%) after the last Monero hard fork hit us hard. So did the “crash” of the crypto currency market with the value of XMR depreciating over 85% within a year. This and the announced hard fork and algorithm update of the Monero network on March 9 has lead us to the conclusion that we need to discontinue Coinhive.</p><p>Thus, mining will not be operable anymore after March 8, 2019. Your dashboards will still be accessible until April 30, 2019 so you will be able to initiate your payouts if your balance is above the minimum payout threshold.</p><p>Thank you all for the great time we had together.</p></blockquote><p>虽然 CoinHive 已死，<strong>但并不代表门罗币（Monero）和其它加密货币的挖掘会就此停止</strong>，由于核心脚本开源，这意味着人们还可以对脚本进行修改来继续挖掘门罗币。而为了让用户注意到了解到后台挖矿对电脑的不利影响，也有人做了网站，来让用户亲身感受一下：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132998?authkey=APiqr1tjl5KIc1Q\" alt=\"TW1mYQluZb.png\" title=\"测试网址截图\"></p><p>网页地址：<a href=\"http://tools.ldstu.com/miner/?utm_sources=/archives/41039.html\" target=\"_blank\" rel=\"noopener\">单击此处</a>（需要把 uBlock 或 MinerBlock 这类扩展关了再测试，不然无效）</p><p><strong>如果没有安装能够拦截挖矿脚本的扩展，很快你的电脑 CPU 占用率会直冲到 100%，如果是笔记本的话，风扇马上就会开始全速工作起来。</strong></p><p>现在看来，MinerBlock 还是很有用的，虽然我一般都是用 uBlock，如果你不想为了拦截挖矿脚本载单独安装一个新扩展，<strong>uBlock 也可以达到相同的效果，生效的规则实际上已经在展示的第五张图片里出现了</strong>😉</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133000?authkey=APiqr1tjl5KIc1Q\" alt=\"5cXF54I3HE.png\" title=\"一切正常，报告完毕!\"></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":2801,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>自从虚拟加密货币一出现，有关于挖矿的新闻就从来没有中断消失过，尤其是在网页上，相比于广告这样明显的方式，后台挖矿脚本可以在用户不知情的情况下，通过使用 CPU 甚至是 GPU 的计算力来获取收益，而这样做用户一般是不知情的（例如海盗湾）在网页渲染越来越复杂的趋势下，加载网页甚至浏览网页会消耗大量硬件资源已不再是什么新鲜事。虽然有时候会在网上看到一些用户浏览网站时遇到挖矿脚本的讨论贴，不过那终究是别人遇到过，换自己也遇上时，又会是什么反应呢？","more":"</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132987?authkey=APiqr1tjl5KIc1Q\" alt=\"YGCQYaV0uC.png\" title=\"coin-hive.com瞩目\"></p><p>整个事情还要追溯到上周六，正在浏览网页的我突然发现许久没有弹出消息的 Windows Defender 突然弹了一个消息通知出来，报告“发现威胁”，我还以为又是电脑里哪个第三方破解器或是注册器补丁“惨遭毒手”，因为 WD 经常这样先斩后奏，于是我直接点击通知，然而界面上出现的并不是“xx破解”，而是这么个玩意儿：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132988?authkey=APiqr1tjl5KIc1Q\" alt=\"UkNFuIjCrY.png\" title=\"画红圈的地方\"></p><p>刚一看到这个的我还有些许没回过神儿，这是什么东西？再仔细一看：<span style=\"background-color:#222;color:#fff\"><strong>&nbsp;Trojan:JS/CoinHive.B&nbsp;</strong></span>，这不是 CoinHive 的挖矿脚本吗。这一下才反应过来，原来刚刚 WD 拦截的并不是什么破解或是注册机，而是一个后台挖矿的脚本！</p><p>再放一张图：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132990?authkey=APiqr1tjl5KIc1Q\" alt=\"Ibyr1IT6dS.png\" title=\"Windows Defender截图\"></p><p>这张图看的就比较明显了，<strong>这个脚本位于 Google Chrome 的本地代码缓存文件夹里</strong>，也就是说，这个脚本在被缓存后就被 Windows Defender 给灭了（顺带给 WD 赞一个👍），不过 Windows Defender 也是个“手起刀落”的主儿，等我去这个文件夹里找的时候，已经什么痕迹都没有了…</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132992?authkey=APiqr1tjl5KIc1Q\" alt=\"xWXJ5hGPGp.png\" title=\"毫无结果...\"></p><p><strong>大致猜测一下，uBlock Origin 检测到了这个脚本并且阻止了它在当前页面上执行，然而这个脚本仍旧被下载到本地缓存，这时被 Windows Defender 发现，后面的事情想必也都清楚了。</strong>这真是不折不扣的“午夜惊魂”。</p><p>对于虚拟加密货币，可能最令人印象深刻的就是去年 5 月的比特币“永恒之蓝”事件了，而这次的 CoinHive 又是挖掘什么的呢？</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132994?authkey=APiqr1tjl5KIc1Q\" alt=\"xmJB4teG0e.png\" title=\"已被拦截emm\"></p><p>尝试访问了一下官网，果不其然，直接被拦截了…看来这条路行不通，不过，从其它途径也能够查到相关资料：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132996?authkey=APiqr1tjl5KIc1Q\" alt=\"m7ctSupZ8X.png\" title=\"百科资料\"></p><blockquote><p>门罗币（Monero）是一个诞生于 2014 年 4 月的开源加密货币，其注重可替代性、隐私和去中心化。 ——来源于 Wikipedia</p></blockquote><p>而 CoinHive 正是通过加载一段 JS 脚本，来借助机器算力计算哈希来挖掘门罗币的：</p><blockquote><p>In late 2017 malware and antivirus service providers blocked a [JavaScript]&gt;(<a href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/JavaScript</a>) implementation of Monero miner Coinhive that was embedded in websites and apps, in some cases by hackers.</p></blockquote><p>虽然 CoinHive 声称网站的拥有者可以通过开关来关闭 CoinHive 的挖矿脚本，或者是通过修改脚本内设置，以一种“更加友好”的方式来挖掘门罗币（即将 CPU 的工作率控制在一定范围以内），但是，显然不是所有引用了这段脚本的人都会这么做，而且这些脚本已经被一些黑客利用来进行恶意挖矿，大幅消耗用户电脑的运行资源。可以说，CoinHive 本意是希望挖掘加密货币、取得收益和网站拥有者、访问用户之间获得双赢，现在看来，整个情况并不像他们预先计划好的那样。而随着不少用户注意到挖矿脚本对电脑的影响，以及来自政府监管、安全公司警告以及<strong>加密货币行业本身的发展的不确定性</strong>，CoinHive 也在自家博客上宣布将于 3 月 8 号关停服务。</p><blockquote><p>Some of you might have anticipated this, some of you will be surprised. The decision has been made. We will discontinue our service on March 8, 2019. It has been a blast working on this project over the past 18 months, but to be completely honest, it isn’ t economically viable anymore.</p><p>The drop in hash rate (over 50%) after the last Monero hard fork hit us hard. So did the “crash” of the crypto currency market with the value of XMR depreciating over 85% within a year. This and the announced hard fork and algorithm update of the Monero network on March 9 has lead us to the conclusion that we need to discontinue Coinhive.</p><p>Thus, mining will not be operable anymore after March 8, 2019. Your dashboards will still be accessible until April 30, 2019 so you will be able to initiate your payouts if your balance is above the minimum payout threshold.</p><p>Thank you all for the great time we had together.</p></blockquote><p>虽然 CoinHive 已死，<strong>但并不代表门罗币（Monero）和其它加密货币的挖掘会就此停止</strong>，由于核心脚本开源，这意味着人们还可以对脚本进行修改来继续挖掘门罗币。而为了让用户注意到了解到后台挖矿对电脑的不利影响，也有人做了网站，来让用户亲身感受一下：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!132998?authkey=APiqr1tjl5KIc1Q\" alt=\"TW1mYQluZb.png\" title=\"测试网址截图\"></p><p>网页地址：<a href=\"http://tools.ldstu.com/miner/?utm_sources=/archives/41039.html\" target=\"_blank\" rel=\"noopener\">单击此处</a>（需要把 uBlock 或 MinerBlock 这类扩展关了再测试，不然无效）</p><p><strong>如果没有安装能够拦截挖矿脚本的扩展，很快你的电脑 CPU 占用率会直冲到 100%，如果是笔记本的话，风扇马上就会开始全速工作起来。</strong></p><p>现在看来，MinerBlock 还是很有用的，虽然我一般都是用 uBlock，如果你不想为了拦截挖矿脚本载单独安装一个新扩展，<strong>uBlock 也可以达到相同的效果，生效的规则实际上已经在展示的第五张图片里出现了</strong>😉</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133000?authkey=APiqr1tjl5KIc1Q\" alt=\"5cXF54I3HE.png\" title=\"一切正常，报告完毕!\"></p><p>END</p><!-- rebuild by neat -->"},{"title":"元旦前后的一些事情","abbrlink":"68ad6534","date":"2019-01-05T06:45:11.000Z","_content":"\n不知不觉就从 2018 年进入到 2019 年，给人的感觉就像是把 2018 年最后的数字 8 改成了 9 这样的简单。距离上一次更新已经过了大概 18 天（上一次更新是在 12 月 17 日，而修订是在 12 月 22 日），不是停更，是实在没时间来更新。那么这一段时间都发生了什么呢...接下来按时间顺序排列一下：<!--more-->\n\n{% note primary %}  \n~~1.Python 考试（计算机语言）- 12 月 25 日~~  \n\n~~2.慕课：中国文化概论~~  \n\n~~3.慕课：微观经济学~~  \n\n~~4.微观经济学的期末论文 - 上周五之前~~  \n\n~~5.中国文化概论的期末论文 - 上月底之前~~  \n\n~~6.马克思哲学原理的期末考试 - 1 月 2 日~~  \n\n~~7.大学英语三级的期末考试 - 1 月 4 日~~  \n\n8.小学期（人机交互设计）  \n{% endnote %}  \n\n事情确实不少**（画外音：不是不少而是很多啊）**然后来几个有点意思的：\n\n### 计算机语言（Python）：\n\n还记得我们老师第一次上课给我们讲 Python 这门语言的诞生原因，概括的说，**作者是因为圣诞节很无聊就闲的无事创造了 Python 这门语言**，然后 Python 这门语言就开始不断发展直到现在。**然而更巧的是我们的 Python 期末考也是在圣诞节这一天，**冥冥之中似乎在预示着什么（逃  \n\n![christmasandpy.png](https://storage.live.com/items/5582C1D07E2893FB!104593?authkey=APiqr1tjl5KIc1Q \"人们常说，Python和圣诞节一起更配呦~\")\n\n说到期末考，其实一开始还是很紧张的（废话谁考试快开始之前不紧张的），因为你不能叫我去考试我就去考试，我得先做好准备工作才能去考试是不是，结果就是我粗略地翻看了一下老师之前发的 PPT...然后毫无防备地上考场了。整个考试分为两部分，一开始是闭卷的基本概念部分，然后是上机的代码部分。之前的上机部分原本是让我们直接在纸上写代码，不能拿电脑跑出来再写，不过之后的考试规则改成了这样，也算是变相略微降低了考试难度。说实话我一开始还没觉得我写的代码能跑出来。上机代码的第一道题是要求我们按照给定的算式，按照指定的范围输出不同的结果，就是 if 和 else 的应用；第二道题是计算 1 到 100 以内（含 100）所有偶数相加的总和（我记得最后的答案是 2550 来着）；第三题是要求编写一个除法的函数，调用函数用给定的两个数来进行除法计算。还记得我们老师在闭卷考试的时候说了一句话：**如果觉得头晕的话前面讲台有糖，可以吃一颗醒醒脑....**emm反正当时所有的人都笑了.....对于我们来说，只要给答案了，不用说醒脑了，我们瞬间活力值 MAX 啊  \n\n考完试后扫了一眼班群，原来早已有“各路大神”把答案发到了群里，不过...反正我没看😜\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104585?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104586?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104587?authkey=APiqr1tjl5KIc1Q\"></img>  \n\n顺带一提，**Python 居然使用缩进的方式来确定代码所属的层级**。有次作业我用空格代替了 Tab 键进行缩进（偷懒真的是没有啥好结果...），跑代码的时候直接抛出几个异常然后 error：  \n\n> IndentationError: unexpected indent  \n\n> IndentationError: expected an indented block  \n\n事实说明，我还是太天真太 naive 了，这两行 error 直接给我教做人😂  \n\n**PS：上面我贴的三张图，那些代码都是我手动调出来的，绝对没看**😄  \n\n### 两个慕课\n\n![两个慕课...](https://storage.live.com/items/5582C1D07E2893FB!104589?authkey=APiqr1tjl5KIc1Q)  \n\n其实在大一下学期考试完之后，我们在选课的时候老师特别说了要选两节课：中国文化概论和经济学，当然一开始我们也没想这么多，顶多就是在原有基础上又多了两课而已。直到 9 月初的时候，我们老师直接在微信群里发消息通知让我们下载“中国大学mooc”和一个叫“蓝墨云班课”的 APP，然后我们才知道原来这两门课是要在线上完成的，老师在蓝墨云上布置了作业，听完课之后要在蓝墨云上提交作业。由于没有监督，再加上大学生普遍人尽皆知的自控力，到底完成了多少大家都心知肚明。直到有次周一晚上几乎每个人的微信都被老师挨个点爆，我们才发现原来还有这么多课啊。\n\n接下来的一周都不用说了，每个人都在补慕课，不光是中国文化概论，还有经济学。提交的内容分为两部分：一部分是听课笔记（经济学慕课是思维导图），另一部分是每堂课后的课后作业。情急之下，我想到了用 OneNote 来做笔记的方法，当然我在做笔记的过程中也被微软的各种奇葩脑回路坑的不轻（之后会有文章专门说这个，都是泪），用两天时间补完了文化概论，然后是经济学，在第八周之前会关闭前六周的作业提交通道，然后我开始拼命地补，然后发现这周是第七周，当然第七周的时候前六周的作业都提交完了。  \n\n![notbelieve.gif](https://storage.live.com/items/5582C1D07E2893FB!104595?authkey=APiqr1tjl5KIc1Q \"对不起，我们不相信 \")\n\n然后你觉得这样故事就结束了吗？很遗憾并没有。虽然在这之后文化概论的课程是按时完成的，经济学在第八周之后又扔了，一直到了快期末的时候，这时候文化概论还差一节课和一篇期末论文（期末大作业），而经济学还欠着从第九周到第十六周的作业外加一个期末大论文。然而我发现我之前补前六周作业的时候，我是按一周一讲的顺序完成的，而老师发的学习计划因为一开始我怎么都打不开所以就没怎么看，直到之后我终于打开了它，然后发现原来有几周的时间是把几讲给分开完成的，也就是说我还”超额”完成了一部分内容。然后你懂的。\n\n这还没完，当我沉浸在经济学的浩瀚海洋之中的时候，瞄了一眼文化概论的截止日期，卧槽居然是 12 月 29 号，我还以为是第 16 周的周日（这是经济学慕课的提交截止日期），一旁赫然显示着还有 1 天 12 个小时截止，而此时的我还有一节课和大论文没有写（是的是完全没动！），之前我还天真的觉得没多少，然而当我打开一看，每节课都有大概半小时，而且没有 PPT 可以照搬，只能一节课一节课地听完，一共是有 8 节课，此时只能是”一首凉凉送给自己”了。还好我及时稳定住了情绪，赶紧先把文化概论的最后一节课和大论文集中精力完成。一直到第二天的凌晨 4 点 07 分（是的你没有看错，此时我已经在家了），当我把文化概论的大论文的最后一个字敲完的时候，我整个手都在颤抖，不敢相信居然能用一个晚上完成了这“不可能完成的任务”，而此时距离提交只有 18 个小时了。本来还想写一篇题目叫《如何看到第二天初升的太阳》的文章，后来想想，不算是什么光彩的事，还是算了吧。\n\n经济学倒是还好，至少还有演示文稿可以参考一下，这倒是轻松很多，此时经济学的论文也已经完成了（这里插一句，要不是当时有人提了一句经济学论文周五之前交，我可能还天真的以为是周日之前交#捂脸），一直忙到晚上，终于全部完成。历经一天半的慕课突击行动终于结束了。\n\n**最后再来一句话：平时不努力，期末要倒霉（逃**🙃\n\n### 马克思主义哲学原理\n\n这门课是这学期的必修课之一，那没办法，给我们传授一些前人的经验也是很正常的不是。然而第一节马哲课就给我们雷得“外焦里嫩”，这位老师教学风格独特，至少我们没听懂他在讲什么。说好听一点，这位老师的方言水平很高，至少也是在十级以上了#大雾；往其他方面说，这位老师大概是普通话水平不过关，操着一口“太仓方言”来给我们“传道授业”。于是第一节课还没上完，我们的班群就开始热闹了：\n\n> “这是在上外语课吗？”\n\n> “我完全get不到他在讲什么”\n\n> “有人能翻译一下他说了些啥”\n\n......\n\n这还不是最主要的，这位“方言”老师不但讲课风格堪称一绝，连点名都成了“独门绝技”，一般人绝对是学不来的。混杂着方言的点名，而且还拖长音，更甚的是来了个念字念半边。比如说“烁”念成了“乐”，差点就没给人改名换姓了（也确实有人被“改姓”了，心疼）。我们都自叹不如。您说您说一口不标准的普通话就算了，咱好歹也是上过大学从大学修满学分毕业的人，总不能来个“半边字秀才”吧。总之每一次点名都是我们最快乐的时候，因为每次都会出现各种随机“笑料”，至于他讲了些什么，没人会 care 的，什么你问为什么？想留意他讲了些什么，你至少也要能听得懂啊。我都后悔没给录音了，此乃一大憾事也。\n\n当然，我也不想再上这样的课了。祈祷这位老师能专心下苦功练出一口标准的普通话吧。坑了我们这一届，千万别坑了我们的学弟学妹啊23333😁  \n\n最后补几张群里的发言截图，神了：  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104605?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104603?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104604?authkey=APiqr1tjl5KIc1Q\"></img>  \n\n### 人机交互\n\n最后再补一点儿东西。人机交互设计最后还有个小学期，就是分组完成一个人机交互设计的作品，我们决定做一个网站，而我自告奋勇地揽下了前端的活：跟 HTML 和 CSS 还有 JS 打交道。然后嘛就要开始查资料了，虽然上学期上过网页设计的课，但是有一段时间没用，估计全都还给老师了。之后自己实践了一遍，只能说：Wish myself good luck 了，这个即将到来的寒假，肯定是有的干了#大雾😄   \n\n<style>div.post-block br {display:none}</style>","source":"_posts/元旦前后的一些事情.md","raw":"---\ntitle: 元旦前后的一些事情\ntags:\n  - 杂记，奇葩，记事\ncategories: 杂记\nabbrlink: 68ad6534\ndate: 2019-01-05 14:45:11\n---\n\n不知不觉就从 2018 年进入到 2019 年，给人的感觉就像是把 2018 年最后的数字 8 改成了 9 这样的简单。距离上一次更新已经过了大概 18 天（上一次更新是在 12 月 17 日，而修订是在 12 月 22 日），不是停更，是实在没时间来更新。那么这一段时间都发生了什么呢...接下来按时间顺序排列一下：<!--more-->\n\n{% note primary %}  \n~~1.Python 考试（计算机语言）- 12 月 25 日~~  \n\n~~2.慕课：中国文化概论~~  \n\n~~3.慕课：微观经济学~~  \n\n~~4.微观经济学的期末论文 - 上周五之前~~  \n\n~~5.中国文化概论的期末论文 - 上月底之前~~  \n\n~~6.马克思哲学原理的期末考试 - 1 月 2 日~~  \n\n~~7.大学英语三级的期末考试 - 1 月 4 日~~  \n\n8.小学期（人机交互设计）  \n{% endnote %}  \n\n事情确实不少**（画外音：不是不少而是很多啊）**然后来几个有点意思的：\n\n### 计算机语言（Python）：\n\n还记得我们老师第一次上课给我们讲 Python 这门语言的诞生原因，概括的说，**作者是因为圣诞节很无聊就闲的无事创造了 Python 这门语言**，然后 Python 这门语言就开始不断发展直到现在。**然而更巧的是我们的 Python 期末考也是在圣诞节这一天，**冥冥之中似乎在预示着什么（逃  \n\n![christmasandpy.png](https://storage.live.com/items/5582C1D07E2893FB!104593?authkey=APiqr1tjl5KIc1Q \"人们常说，Python和圣诞节一起更配呦~\")\n\n说到期末考，其实一开始还是很紧张的（废话谁考试快开始之前不紧张的），因为你不能叫我去考试我就去考试，我得先做好准备工作才能去考试是不是，结果就是我粗略地翻看了一下老师之前发的 PPT...然后毫无防备地上考场了。整个考试分为两部分，一开始是闭卷的基本概念部分，然后是上机的代码部分。之前的上机部分原本是让我们直接在纸上写代码，不能拿电脑跑出来再写，不过之后的考试规则改成了这样，也算是变相略微降低了考试难度。说实话我一开始还没觉得我写的代码能跑出来。上机代码的第一道题是要求我们按照给定的算式，按照指定的范围输出不同的结果，就是 if 和 else 的应用；第二道题是计算 1 到 100 以内（含 100）所有偶数相加的总和（我记得最后的答案是 2550 来着）；第三题是要求编写一个除法的函数，调用函数用给定的两个数来进行除法计算。还记得我们老师在闭卷考试的时候说了一句话：**如果觉得头晕的话前面讲台有糖，可以吃一颗醒醒脑....**emm反正当时所有的人都笑了.....对于我们来说，只要给答案了，不用说醒脑了，我们瞬间活力值 MAX 啊  \n\n考完试后扫了一眼班群，原来早已有“各路大神”把答案发到了群里，不过...反正我没看😜\n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104585?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104586?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104587?authkey=APiqr1tjl5KIc1Q\"></img>  \n\n顺带一提，**Python 居然使用缩进的方式来确定代码所属的层级**。有次作业我用空格代替了 Tab 键进行缩进（偷懒真的是没有啥好结果...），跑代码的时候直接抛出几个异常然后 error：  \n\n> IndentationError: unexpected indent  \n\n> IndentationError: expected an indented block  \n\n事实说明，我还是太天真太 naive 了，这两行 error 直接给我教做人😂  \n\n**PS：上面我贴的三张图，那些代码都是我手动调出来的，绝对没看**😄  \n\n### 两个慕课\n\n![两个慕课...](https://storage.live.com/items/5582C1D07E2893FB!104589?authkey=APiqr1tjl5KIc1Q)  \n\n其实在大一下学期考试完之后，我们在选课的时候老师特别说了要选两节课：中国文化概论和经济学，当然一开始我们也没想这么多，顶多就是在原有基础上又多了两课而已。直到 9 月初的时候，我们老师直接在微信群里发消息通知让我们下载“中国大学mooc”和一个叫“蓝墨云班课”的 APP，然后我们才知道原来这两门课是要在线上完成的，老师在蓝墨云上布置了作业，听完课之后要在蓝墨云上提交作业。由于没有监督，再加上大学生普遍人尽皆知的自控力，到底完成了多少大家都心知肚明。直到有次周一晚上几乎每个人的微信都被老师挨个点爆，我们才发现原来还有这么多课啊。\n\n接下来的一周都不用说了，每个人都在补慕课，不光是中国文化概论，还有经济学。提交的内容分为两部分：一部分是听课笔记（经济学慕课是思维导图），另一部分是每堂课后的课后作业。情急之下，我想到了用 OneNote 来做笔记的方法，当然我在做笔记的过程中也被微软的各种奇葩脑回路坑的不轻（之后会有文章专门说这个，都是泪），用两天时间补完了文化概论，然后是经济学，在第八周之前会关闭前六周的作业提交通道，然后我开始拼命地补，然后发现这周是第七周，当然第七周的时候前六周的作业都提交完了。  \n\n![notbelieve.gif](https://storage.live.com/items/5582C1D07E2893FB!104595?authkey=APiqr1tjl5KIc1Q \"对不起，我们不相信 \")\n\n然后你觉得这样故事就结束了吗？很遗憾并没有。虽然在这之后文化概论的课程是按时完成的，经济学在第八周之后又扔了，一直到了快期末的时候，这时候文化概论还差一节课和一篇期末论文（期末大作业），而经济学还欠着从第九周到第十六周的作业外加一个期末大论文。然而我发现我之前补前六周作业的时候，我是按一周一讲的顺序完成的，而老师发的学习计划因为一开始我怎么都打不开所以就没怎么看，直到之后我终于打开了它，然后发现原来有几周的时间是把几讲给分开完成的，也就是说我还”超额”完成了一部分内容。然后你懂的。\n\n这还没完，当我沉浸在经济学的浩瀚海洋之中的时候，瞄了一眼文化概论的截止日期，卧槽居然是 12 月 29 号，我还以为是第 16 周的周日（这是经济学慕课的提交截止日期），一旁赫然显示着还有 1 天 12 个小时截止，而此时的我还有一节课和大论文没有写（是的是完全没动！），之前我还天真的觉得没多少，然而当我打开一看，每节课都有大概半小时，而且没有 PPT 可以照搬，只能一节课一节课地听完，一共是有 8 节课，此时只能是”一首凉凉送给自己”了。还好我及时稳定住了情绪，赶紧先把文化概论的最后一节课和大论文集中精力完成。一直到第二天的凌晨 4 点 07 分（是的你没有看错，此时我已经在家了），当我把文化概论的大论文的最后一个字敲完的时候，我整个手都在颤抖，不敢相信居然能用一个晚上完成了这“不可能完成的任务”，而此时距离提交只有 18 个小时了。本来还想写一篇题目叫《如何看到第二天初升的太阳》的文章，后来想想，不算是什么光彩的事，还是算了吧。\n\n经济学倒是还好，至少还有演示文稿可以参考一下，这倒是轻松很多，此时经济学的论文也已经完成了（这里插一句，要不是当时有人提了一句经济学论文周五之前交，我可能还天真的以为是周日之前交#捂脸），一直忙到晚上，终于全部完成。历经一天半的慕课突击行动终于结束了。\n\n**最后再来一句话：平时不努力，期末要倒霉（逃**🙃\n\n### 马克思主义哲学原理\n\n这门课是这学期的必修课之一，那没办法，给我们传授一些前人的经验也是很正常的不是。然而第一节马哲课就给我们雷得“外焦里嫩”，这位老师教学风格独特，至少我们没听懂他在讲什么。说好听一点，这位老师的方言水平很高，至少也是在十级以上了#大雾；往其他方面说，这位老师大概是普通话水平不过关，操着一口“太仓方言”来给我们“传道授业”。于是第一节课还没上完，我们的班群就开始热闹了：\n\n> “这是在上外语课吗？”\n\n> “我完全get不到他在讲什么”\n\n> “有人能翻译一下他说了些啥”\n\n......\n\n这还不是最主要的，这位“方言”老师不但讲课风格堪称一绝，连点名都成了“独门绝技”，一般人绝对是学不来的。混杂着方言的点名，而且还拖长音，更甚的是来了个念字念半边。比如说“烁”念成了“乐”，差点就没给人改名换姓了（也确实有人被“改姓”了，心疼）。我们都自叹不如。您说您说一口不标准的普通话就算了，咱好歹也是上过大学从大学修满学分毕业的人，总不能来个“半边字秀才”吧。总之每一次点名都是我们最快乐的时候，因为每次都会出现各种随机“笑料”，至于他讲了些什么，没人会 care 的，什么你问为什么？想留意他讲了些什么，你至少也要能听得懂啊。我都后悔没给录音了，此乃一大憾事也。\n\n当然，我也不想再上这样的课了。祈祷这位老师能专心下苦功练出一口标准的普通话吧。坑了我们这一届，千万别坑了我们的学弟学妹啊23333😁  \n\n最后补几张群里的发言截图，神了：  \n\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104605?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104603?authkey=APiqr1tjl5KIc1Q\"></img>\n<img src=\"https://storage.live.com/items/5582C1D07E2893FB!104604?authkey=APiqr1tjl5KIc1Q\"></img>  \n\n### 人机交互\n\n最后再补一点儿东西。人机交互设计最后还有个小学期，就是分组完成一个人机交互设计的作品，我们决定做一个网站，而我自告奋勇地揽下了前端的活：跟 HTML 和 CSS 还有 JS 打交道。然后嘛就要开始查资料了，虽然上学期上过网页设计的课，但是有一段时间没用，估计全都还给老师了。之后自己实践了一遍，只能说：Wish myself good luck 了，这个即将到来的寒假，肯定是有的干了#大雾😄   \n\n<style>div.post-block br {display:none}</style>","slug":"元旦前后的一些事情","published":1,"updated":"2019-07-16T04:26:52.556Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3uc000i0wvccx694cvv","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>不知不觉就从 2018 年进入到 2019 年，给人的感觉就像是把 2018 年最后的数字 8 改成了 9 这样的简单。距离上一次更新已经过了大概 18 天（上一次更新是在 12 月 17 日，而修订是在 12 月 22 日），不是停更，是实在没时间来更新。那么这一段时间都发生了什么呢…接下来按时间顺序排列一下：<a id=\"more\"></a></p><div class=\"note primary\"><p><del>1.Python 考试（计算机语言）- 12 月 25 日</del></p><p><del>2.慕课：中国文化概论</del></p><p><del>3.慕课：微观经济学</del></p><p><del>4.微观经济学的期末论文 - 上周五之前</del></p><p><del>5.中国文化概论的期末论文 - 上月底之前</del></p><p><del>6.马克思哲学原理的期末考试 - 1 月 2 日</del></p><p><del>7.大学英语三级的期末考试 - 1 月 4 日</del></p><p>8.小学期（人机交互设计）</p></div><p>事情确实不少<strong>（画外音：不是不少而是很多啊）</strong>然后来几个有点意思的：</p><h3 id=\"计算机语言（Python）：\"><a href=\"#计算机语言（Python）：\" class=\"headerlink\" title=\"计算机语言（Python）：\"></a>计算机语言（Python）：</h3><p>还记得我们老师第一次上课给我们讲 Python 这门语言的诞生原因，概括的说，<strong>作者是因为圣诞节很无聊就闲的无事创造了 Python 这门语言</strong>，然后 Python 这门语言就开始不断发展直到现在。<strong>然而更巧的是我们的 Python 期末考也是在圣诞节这一天，</strong>冥冥之中似乎在预示着什么（逃</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104593?authkey=APiqr1tjl5KIc1Q\" alt=\"christmasandpy.png\" title=\"人们常说，Python和圣诞节一起更配呦~\"></p><p>说到期末考，其实一开始还是很紧张的（废话谁考试快开始之前不紧张的），因为你不能叫我去考试我就去考试，我得先做好准备工作才能去考试是不是，结果就是我粗略地翻看了一下老师之前发的 PPT…然后毫无防备地上考场了。整个考试分为两部分，一开始是闭卷的基本概念部分，然后是上机的代码部分。之前的上机部分原本是让我们直接在纸上写代码，不能拿电脑跑出来再写，不过之后的考试规则改成了这样，也算是变相略微降低了考试难度。说实话我一开始还没觉得我写的代码能跑出来。上机代码的第一道题是要求我们按照给定的算式，按照指定的范围输出不同的结果，就是 if 和 else 的应用；第二道题是计算 1 到 100 以内（含 100）所有偶数相加的总和（我记得最后的答案是 2550 来着）；第三题是要求编写一个除法的函数，调用函数用给定的两个数来进行除法计算。还记得我们老师在闭卷考试的时候说了一句话：<strong>如果觉得头晕的话前面讲台有糖，可以吃一颗醒醒脑….</strong>emm反正当时所有的人都笑了…..对于我们来说，只要给答案了，不用说醒脑了，我们瞬间活力值 MAX 啊</p><p>考完试后扫了一眼班群，原来早已有“各路大神”把答案发到了群里，不过…反正我没看😜</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104585?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104586?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104587?authkey=APiqr1tjl5KIc1Q\"></p><p>顺带一提，<strong>Python 居然使用缩进的方式来确定代码所属的层级</strong>。有次作业我用空格代替了 Tab 键进行缩进（偷懒真的是没有啥好结果…），跑代码的时候直接抛出几个异常然后 error：</p><blockquote><p>IndentationError: unexpected indent</p></blockquote><blockquote><p>IndentationError: expected an indented block</p></blockquote><p>事实说明，我还是太天真太 naive 了，这两行 error 直接给我教做人😂</p><p><strong>PS：上面我贴的三张图，那些代码都是我手动调出来的，绝对没看</strong>😄</p><h3 id=\"两个慕课\"><a href=\"#两个慕课\" class=\"headerlink\" title=\"两个慕课\"></a>两个慕课</h3><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104589?authkey=APiqr1tjl5KIc1Q\" alt=\"两个慕课...\"></p><p>其实在大一下学期考试完之后，我们在选课的时候老师特别说了要选两节课：中国文化概论和经济学，当然一开始我们也没想这么多，顶多就是在原有基础上又多了两课而已。直到 9 月初的时候，我们老师直接在微信群里发消息通知让我们下载“中国大学mooc”和一个叫“蓝墨云班课”的 APP，然后我们才知道原来这两门课是要在线上完成的，老师在蓝墨云上布置了作业，听完课之后要在蓝墨云上提交作业。由于没有监督，再加上大学生普遍人尽皆知的自控力，到底完成了多少大家都心知肚明。直到有次周一晚上几乎每个人的微信都被老师挨个点爆，我们才发现原来还有这么多课啊。</p><p>接下来的一周都不用说了，每个人都在补慕课，不光是中国文化概论，还有经济学。提交的内容分为两部分：一部分是听课笔记（经济学慕课是思维导图），另一部分是每堂课后的课后作业。情急之下，我想到了用 OneNote 来做笔记的方法，当然我在做笔记的过程中也被微软的各种奇葩脑回路坑的不轻（之后会有文章专门说这个，都是泪），用两天时间补完了文化概论，然后是经济学，在第八周之前会关闭前六周的作业提交通道，然后我开始拼命地补，然后发现这周是第七周，当然第七周的时候前六周的作业都提交完了。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104595?authkey=APiqr1tjl5KIc1Q\" alt=\"notbelieve.gif\" title=\"对不起，我们不相信 \"></p><p>然后你觉得这样故事就结束了吗？很遗憾并没有。虽然在这之后文化概论的课程是按时完成的，经济学在第八周之后又扔了，一直到了快期末的时候，这时候文化概论还差一节课和一篇期末论文（期末大作业），而经济学还欠着从第九周到第十六周的作业外加一个期末大论文。然而我发现我之前补前六周作业的时候，我是按一周一讲的顺序完成的，而老师发的学习计划因为一开始我怎么都打不开所以就没怎么看，直到之后我终于打开了它，然后发现原来有几周的时间是把几讲给分开完成的，也就是说我还”超额”完成了一部分内容。然后你懂的。</p><p>这还没完，当我沉浸在经济学的浩瀚海洋之中的时候，瞄了一眼文化概论的截止日期，卧槽居然是 12 月 29 号，我还以为是第 16 周的周日（这是经济学慕课的提交截止日期），一旁赫然显示着还有 1 天 12 个小时截止，而此时的我还有一节课和大论文没有写（是的是完全没动！），之前我还天真的觉得没多少，然而当我打开一看，每节课都有大概半小时，而且没有 PPT 可以照搬，只能一节课一节课地听完，一共是有 8 节课，此时只能是”一首凉凉送给自己”了。还好我及时稳定住了情绪，赶紧先把文化概论的最后一节课和大论文集中精力完成。一直到第二天的凌晨 4 点 07 分（是的你没有看错，此时我已经在家了），当我把文化概论的大论文的最后一个字敲完的时候，我整个手都在颤抖，不敢相信居然能用一个晚上完成了这“不可能完成的任务”，而此时距离提交只有 18 个小时了。本来还想写一篇题目叫《如何看到第二天初升的太阳》的文章，后来想想，不算是什么光彩的事，还是算了吧。</p><p>经济学倒是还好，至少还有演示文稿可以参考一下，这倒是轻松很多，此时经济学的论文也已经完成了（这里插一句，要不是当时有人提了一句经济学论文周五之前交，我可能还天真的以为是周日之前交#捂脸），一直忙到晚上，终于全部完成。历经一天半的慕课突击行动终于结束了。</p><p><strong>最后再来一句话：平时不努力，期末要倒霉（逃</strong>🙃</p><h3 id=\"马克思主义哲学原理\"><a href=\"#马克思主义哲学原理\" class=\"headerlink\" title=\"马克思主义哲学原理\"></a>马克思主义哲学原理</h3><p>这门课是这学期的必修课之一，那没办法，给我们传授一些前人的经验也是很正常的不是。然而第一节马哲课就给我们雷得“外焦里嫩”，这位老师教学风格独特，至少我们没听懂他在讲什么。说好听一点，这位老师的方言水平很高，至少也是在十级以上了#大雾；往其他方面说，这位老师大概是普通话水平不过关，操着一口“太仓方言”来给我们“传道授业”。于是第一节课还没上完，我们的班群就开始热闹了：</p><blockquote><p>“这是在上外语课吗？”</p></blockquote><blockquote><p>“我完全get不到他在讲什么”</p></blockquote><blockquote><p>“有人能翻译一下他说了些啥”</p></blockquote><p>……</p><p>这还不是最主要的，这位“方言”老师不但讲课风格堪称一绝，连点名都成了“独门绝技”，一般人绝对是学不来的。混杂着方言的点名，而且还拖长音，更甚的是来了个念字念半边。比如说“烁”念成了“乐”，差点就没给人改名换姓了（也确实有人被“改姓”了，心疼）。我们都自叹不如。您说您说一口不标准的普通话就算了，咱好歹也是上过大学从大学修满学分毕业的人，总不能来个“半边字秀才”吧。总之每一次点名都是我们最快乐的时候，因为每次都会出现各种随机“笑料”，至于他讲了些什么，没人会 care 的，什么你问为什么？想留意他讲了些什么，你至少也要能听得懂啊。我都后悔没给录音了，此乃一大憾事也。</p><p>当然，我也不想再上这样的课了。祈祷这位老师能专心下苦功练出一口标准的普通话吧。坑了我们这一届，千万别坑了我们的学弟学妹啊23333😁</p><p>最后补几张群里的发言截图，神了：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104605?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104603?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104604?authkey=APiqr1tjl5KIc1Q\"></p><h3 id=\"人机交互\"><a href=\"#人机交互\" class=\"headerlink\" title=\"人机交互\"></a>人机交互</h3><p>最后再补一点儿东西。人机交互设计最后还有个小学期，就是分组完成一个人机交互设计的作品，我们决定做一个网站，而我自告奋勇地揽下了前端的活：跟 HTML 和 CSS 还有 JS 打交道。然后嘛就要开始查资料了，虽然上学期上过网页设计的课，但是有一段时间没用，估计全都还给老师了。之后自己实践了一遍，只能说：Wish myself good luck 了，这个即将到来的寒假，肯定是有的干了#大雾😄</p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->","site":{"data":{}},"length":3396,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>不知不觉就从 2018 年进入到 2019 年，给人的感觉就像是把 2018 年最后的数字 8 改成了 9 这样的简单。距离上一次更新已经过了大概 18 天（上一次更新是在 12 月 17 日，而修订是在 12 月 22 日），不是停更，是实在没时间来更新。那么这一段时间都发生了什么呢…接下来按时间顺序排列一下：","more":"</p><div class=\"note primary\"><p><del>1.Python 考试（计算机语言）- 12 月 25 日</del></p><p><del>2.慕课：中国文化概论</del></p><p><del>3.慕课：微观经济学</del></p><p><del>4.微观经济学的期末论文 - 上周五之前</del></p><p><del>5.中国文化概论的期末论文 - 上月底之前</del></p><p><del>6.马克思哲学原理的期末考试 - 1 月 2 日</del></p><p><del>7.大学英语三级的期末考试 - 1 月 4 日</del></p><p>8.小学期（人机交互设计）</p></div><p>事情确实不少<strong>（画外音：不是不少而是很多啊）</strong>然后来几个有点意思的：</p><h3 id=\"计算机语言（Python）：\"><a href=\"#计算机语言（Python）：\" class=\"headerlink\" title=\"计算机语言（Python）：\"></a>计算机语言（Python）：</h3><p>还记得我们老师第一次上课给我们讲 Python 这门语言的诞生原因，概括的说，<strong>作者是因为圣诞节很无聊就闲的无事创造了 Python 这门语言</strong>，然后 Python 这门语言就开始不断发展直到现在。<strong>然而更巧的是我们的 Python 期末考也是在圣诞节这一天，</strong>冥冥之中似乎在预示着什么（逃</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104593?authkey=APiqr1tjl5KIc1Q\" alt=\"christmasandpy.png\" title=\"人们常说，Python和圣诞节一起更配呦~\"></p><p>说到期末考，其实一开始还是很紧张的（废话谁考试快开始之前不紧张的），因为你不能叫我去考试我就去考试，我得先做好准备工作才能去考试是不是，结果就是我粗略地翻看了一下老师之前发的 PPT…然后毫无防备地上考场了。整个考试分为两部分，一开始是闭卷的基本概念部分，然后是上机的代码部分。之前的上机部分原本是让我们直接在纸上写代码，不能拿电脑跑出来再写，不过之后的考试规则改成了这样，也算是变相略微降低了考试难度。说实话我一开始还没觉得我写的代码能跑出来。上机代码的第一道题是要求我们按照给定的算式，按照指定的范围输出不同的结果，就是 if 和 else 的应用；第二道题是计算 1 到 100 以内（含 100）所有偶数相加的总和（我记得最后的答案是 2550 来着）；第三题是要求编写一个除法的函数，调用函数用给定的两个数来进行除法计算。还记得我们老师在闭卷考试的时候说了一句话：<strong>如果觉得头晕的话前面讲台有糖，可以吃一颗醒醒脑….</strong>emm反正当时所有的人都笑了…..对于我们来说，只要给答案了，不用说醒脑了，我们瞬间活力值 MAX 啊</p><p>考完试后扫了一眼班群，原来早已有“各路大神”把答案发到了群里，不过…反正我没看😜</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104585?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104586?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104587?authkey=APiqr1tjl5KIc1Q\"></p><p>顺带一提，<strong>Python 居然使用缩进的方式来确定代码所属的层级</strong>。有次作业我用空格代替了 Tab 键进行缩进（偷懒真的是没有啥好结果…），跑代码的时候直接抛出几个异常然后 error：</p><blockquote><p>IndentationError: unexpected indent</p></blockquote><blockquote><p>IndentationError: expected an indented block</p></blockquote><p>事实说明，我还是太天真太 naive 了，这两行 error 直接给我教做人😂</p><p><strong>PS：上面我贴的三张图，那些代码都是我手动调出来的，绝对没看</strong>😄</p><h3 id=\"两个慕课\"><a href=\"#两个慕课\" class=\"headerlink\" title=\"两个慕课\"></a>两个慕课</h3><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104589?authkey=APiqr1tjl5KIc1Q\" alt=\"两个慕课...\"></p><p>其实在大一下学期考试完之后，我们在选课的时候老师特别说了要选两节课：中国文化概论和经济学，当然一开始我们也没想这么多，顶多就是在原有基础上又多了两课而已。直到 9 月初的时候，我们老师直接在微信群里发消息通知让我们下载“中国大学mooc”和一个叫“蓝墨云班课”的 APP，然后我们才知道原来这两门课是要在线上完成的，老师在蓝墨云上布置了作业，听完课之后要在蓝墨云上提交作业。由于没有监督，再加上大学生普遍人尽皆知的自控力，到底完成了多少大家都心知肚明。直到有次周一晚上几乎每个人的微信都被老师挨个点爆，我们才发现原来还有这么多课啊。</p><p>接下来的一周都不用说了，每个人都在补慕课，不光是中国文化概论，还有经济学。提交的内容分为两部分：一部分是听课笔记（经济学慕课是思维导图），另一部分是每堂课后的课后作业。情急之下，我想到了用 OneNote 来做笔记的方法，当然我在做笔记的过程中也被微软的各种奇葩脑回路坑的不轻（之后会有文章专门说这个，都是泪），用两天时间补完了文化概论，然后是经济学，在第八周之前会关闭前六周的作业提交通道，然后我开始拼命地补，然后发现这周是第七周，当然第七周的时候前六周的作业都提交完了。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104595?authkey=APiqr1tjl5KIc1Q\" alt=\"notbelieve.gif\" title=\"对不起，我们不相信 \"></p><p>然后你觉得这样故事就结束了吗？很遗憾并没有。虽然在这之后文化概论的课程是按时完成的，经济学在第八周之后又扔了，一直到了快期末的时候，这时候文化概论还差一节课和一篇期末论文（期末大作业），而经济学还欠着从第九周到第十六周的作业外加一个期末大论文。然而我发现我之前补前六周作业的时候，我是按一周一讲的顺序完成的，而老师发的学习计划因为一开始我怎么都打不开所以就没怎么看，直到之后我终于打开了它，然后发现原来有几周的时间是把几讲给分开完成的，也就是说我还”超额”完成了一部分内容。然后你懂的。</p><p>这还没完，当我沉浸在经济学的浩瀚海洋之中的时候，瞄了一眼文化概论的截止日期，卧槽居然是 12 月 29 号，我还以为是第 16 周的周日（这是经济学慕课的提交截止日期），一旁赫然显示着还有 1 天 12 个小时截止，而此时的我还有一节课和大论文没有写（是的是完全没动！），之前我还天真的觉得没多少，然而当我打开一看，每节课都有大概半小时，而且没有 PPT 可以照搬，只能一节课一节课地听完，一共是有 8 节课，此时只能是”一首凉凉送给自己”了。还好我及时稳定住了情绪，赶紧先把文化概论的最后一节课和大论文集中精力完成。一直到第二天的凌晨 4 点 07 分（是的你没有看错，此时我已经在家了），当我把文化概论的大论文的最后一个字敲完的时候，我整个手都在颤抖，不敢相信居然能用一个晚上完成了这“不可能完成的任务”，而此时距离提交只有 18 个小时了。本来还想写一篇题目叫《如何看到第二天初升的太阳》的文章，后来想想，不算是什么光彩的事，还是算了吧。</p><p>经济学倒是还好，至少还有演示文稿可以参考一下，这倒是轻松很多，此时经济学的论文也已经完成了（这里插一句，要不是当时有人提了一句经济学论文周五之前交，我可能还天真的以为是周日之前交#捂脸），一直忙到晚上，终于全部完成。历经一天半的慕课突击行动终于结束了。</p><p><strong>最后再来一句话：平时不努力，期末要倒霉（逃</strong>🙃</p><h3 id=\"马克思主义哲学原理\"><a href=\"#马克思主义哲学原理\" class=\"headerlink\" title=\"马克思主义哲学原理\"></a>马克思主义哲学原理</h3><p>这门课是这学期的必修课之一，那没办法，给我们传授一些前人的经验也是很正常的不是。然而第一节马哲课就给我们雷得“外焦里嫩”，这位老师教学风格独特，至少我们没听懂他在讲什么。说好听一点，这位老师的方言水平很高，至少也是在十级以上了#大雾；往其他方面说，这位老师大概是普通话水平不过关，操着一口“太仓方言”来给我们“传道授业”。于是第一节课还没上完，我们的班群就开始热闹了：</p><blockquote><p>“这是在上外语课吗？”</p></blockquote><blockquote><p>“我完全get不到他在讲什么”</p></blockquote><blockquote><p>“有人能翻译一下他说了些啥”</p></blockquote><p>……</p><p>这还不是最主要的，这位“方言”老师不但讲课风格堪称一绝，连点名都成了“独门绝技”，一般人绝对是学不来的。混杂着方言的点名，而且还拖长音，更甚的是来了个念字念半边。比如说“烁”念成了“乐”，差点就没给人改名换姓了（也确实有人被“改姓”了，心疼）。我们都自叹不如。您说您说一口不标准的普通话就算了，咱好歹也是上过大学从大学修满学分毕业的人，总不能来个“半边字秀才”吧。总之每一次点名都是我们最快乐的时候，因为每次都会出现各种随机“笑料”，至于他讲了些什么，没人会 care 的，什么你问为什么？想留意他讲了些什么，你至少也要能听得懂啊。我都后悔没给录音了，此乃一大憾事也。</p><p>当然，我也不想再上这样的课了。祈祷这位老师能专心下苦功练出一口标准的普通话吧。坑了我们这一届，千万别坑了我们的学弟学妹啊23333😁</p><p>最后补几张群里的发言截图，神了：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104605?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104603?authkey=APiqr1tjl5KIc1Q\"><br><img src=\"https://storage.live.com/items/5582C1D07E2893FB!104604?authkey=APiqr1tjl5KIc1Q\"></p><h3 id=\"人机交互\"><a href=\"#人机交互\" class=\"headerlink\" title=\"人机交互\"></a>人机交互</h3><p>最后再补一点儿东西。人机交互设计最后还有个小学期，就是分组完成一个人机交互设计的作品，我们决定做一个网站，而我自告奋勇地揽下了前端的活：跟 HTML 和 CSS 还有 JS 打交道。然后嘛就要开始查资料了，虽然上学期上过网页设计的课，但是有一段时间没用，估计全都还给老师了。之后自己实践了一遍，只能说：Wish myself good luck 了，这个即将到来的寒假，肯定是有的干了#大雾😄</p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->"},{"title":"提交网站到 Google 上踩的坑","keyword":["Hexo"],"abbrlink":"935f4e25","date":"2018-11-24T06:23:42.000Z","_content":"### 前言\n\n其实这一篇本来可以不用写的，因为 Hexo 的生成和提交方式已经写的比较清晰明白了，怎奈在实际操作的过程中还是直接掉坑里，写这一篇就算是对操作的一个总结，顺便提醒自己不要再犯相同的问题吧...  \n\n在安装完 Hexo 的 sitemap 组件后，接下来就是创建站点地图和提交站点进行认证（就算真的没人看，这一步也是要做的 2333）。创建站点地图很快完成了，其中 Google 一份，百度的另外还有一份，接下来就是将站点提交给 Google 和百度，然后上传自己的站点地图。从这里开始，问题就来了。  <!--more-->  \n\n<img src=\"https://i.loli.net/2018/11/24/5bf91d188e582.png\" style=\"zoom:60%\" />\n\n### 首坑：网站验证\n\n进入Google的站点验证页面后，**输入自己要提交的网址然后确定，Google 会对此网址进行验证**，稍等片刻后，会弹出如下界面：  \n\n![webauth-ui.png](https://i.loli.net/2018/11/24/5bf8f68424c32.png \"示意图\")\n\n此时会让你选择一个验证方式，来证明这个站点是归你所有。**默认的验证方式是下载一个 HTML 文件并将其上传到自己的站点，然后访问一次，以此方式来通过验证**。  \n\n**当然，除此之外还有别的验证方式，只是相比第一种，可能略微麻烦点**  \n\n![webauth-ui-1.png](https://i.loli.net/2018/11/24/5bf8f78bace64.png \"...\")\n\n分别是 HTML 标记验证、使用 Google 统计验证、使用 Google Tag Manager 验证和域名提供商验证。我找了一圈，实在不知道 HTML 标记应该插入到哪里，Google 说明是要求插入到网页主体部分，在 body 标记之前的段落中，然而我实在是没找到，只得放弃；第二、三种方式是因为没有对应的账户；而第四种则是因为使用了 GitHub Pages 的服务，你让我上哪找域名的提供商？（反正列表里面可没有 GitHub）。**因此，如果没有特别的原因或问题，第一种方法应该是最简单的了，也是 Google 最为推荐的方式**。  \n\n**选择第一种方式，获得一个用于验证的 HTML 文件**。下载之后将它打开，文件内部显示是这个样子的：<span style=\"background:#222;color:white;\">**（记住这张图！）**</span>  \n\n![google-authcode.png](https://i.loli.net/2018/11/24/5bf90326355cd.png \"你没看错，只有这一行代码\")\n\n然后将这个 HTML 文件放入到站点当中，**一切顺利，接下来开始生成、开本地服务器看一下效果，貌似也没问题，部署发布！**返回到Google的站点控制台，通过机器人验证，单击“Verify”  \n\n**结果，直接报错了...**（原谅我那张报错的图当时没截下来，其实是当时没想到要截图...）  \n\n一头雾水的我打开用来验证的那个网页链接，看了看地址，没错啊，那问题出在哪里呢？（问号脸）  \n\n![error-example.png](https://i.loli.net/2018/11/24/5bf906e5e0229.png \"错误截图\")\n\n我又试了几次，还是各种报错失败，这时候我又一次打开那个原始的 HTML 文件，与上传到网站的网页文件对比一下，**额...好像哪里不对？**  \n\n**划重点：**\n\n<span style=\"background:#222;color:white;\">**因为原来的网页是没有这些模板元素的！有可能是因为这些加入的模板元素导致 Google 不能正常识别，于是我删掉了加入到网站的 HTML 文件，然后`hexo clean`一次，再然后`hexo d -g`一次，成功生成并部署到 GitHub 上之后再将那个 HTML 文件放入到站点根目录的`/public`文件夹中，然后再一次`hexo d`部署到 GitHub 上（这时不要`hexo clean`），刷新几次再看，就变成了一开始只有一行代码的样子，这时再进入到Google的验证页面，果不其然，一次成功了。**（事实证明这反射弧也太长了#捂脸）</span>  \n\n事后重新看了一下Hexo的官方文档，**Hexo 使用 Markdown 作为博客的主要书写语言，而在编写完成后，Hexo 会在 hexo g 的时候将所有页面都使用指定的模板生成一遍，也就是说在这个时候原本的 HTML 文件被加上了事先预定义的样式模板，造成了与 Google 提供的文件样式不统一，导致了验证失败**；而**解决方法中，在已经上传部署的 /public 文件夹中直接放入验证文件，然后 hexo d，跳过了之前的生成环节（之前已经生成过）直接进入到部署环节，将这个文件原封不动直接上传到 GitHub 上，期间不加入任何样式模板，这样保证了源文件的格式，验证自然成功了**。  \n\n有了之前的实践经验，接下来添加百度的站点验证就简单多了，这里倒是没有什么坑...  \n\n### 二坑：站点地图\n\n紧接着就是添加站点地图（sitemap），**这里需要先配置几个组件**，代码如下：  \n\n```bash\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n```\n\n**组件安装完成后，还需要在站点配置文件中新增以下条目：**  \n\n```yaml\n# 自动生成sitemap\nsitemap: \n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml \n```\n\n**之后站点本地位置就会生成 sitemap.xml 和 baidusitemap.xml，前者提交给 Google，后者提交给百度**，这样站点地图就提交成功了。  \n\n**但是**，这里还有一点需要注意：**站点配置文件中“url”字段之后的内容也需要修改**。示例代码如下：  \n\n``` yaml\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://witherzuo.github.io\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n```\n\n将**原有的默认字段注释删除掉，然后修改为自己的站点地址即可**。**如果这一步没有完成，在部署并生成站点地图的过程中就不会传入正确的站点地址，站点地图也就无法正常通过验证。**  \n\n### 总结\n\n前面写了不少，作为全文结尾，再来点总结：  \n\n{% note danger %}\n\n**在进行站点所有权验证时，如果选择了第一种方法，切记在部署时不要直接生成整个站点，否则用于验证的源文件会被模板样式直接覆盖掉，这种情况下由于验证源文件与 Google 提供的文件不一样，会直接导致验证失败！解决方法则是在生成并部署站点时将这个 HTML 文件移走，在部署完成后将这个文件移动回 /public 文件夹，再进行一次部署。**  \n\n**创建站点地图文件时，记得事先修改站点配置文件中的“url”字段，然后再生成站点地图文件，不然错误的站点地图地址会导致无法正常上传。**  \n\n{% endnote %}\n\n**其实，出现这些问题，还是因为对 Hexo 的了解不够，现在来看，确实是给自己挖了个大坑#捂脸×2（逃**  \n\nEND","source":"_posts/提交网站到Google上踩过的坑.md","raw":"---\ntitle: 提交网站到 Google 上踩的坑\ntags:\n  - Hexo\n  - 网站提交\n  - Google\ncategories:\n  - Hexo\nkeyword:\n  - Hexo\nabbrlink: 935f4e25\ndate: 2018-11-24 14:23:42\n---\n### 前言\n\n其实这一篇本来可以不用写的，因为 Hexo 的生成和提交方式已经写的比较清晰明白了，怎奈在实际操作的过程中还是直接掉坑里，写这一篇就算是对操作的一个总结，顺便提醒自己不要再犯相同的问题吧...  \n\n在安装完 Hexo 的 sitemap 组件后，接下来就是创建站点地图和提交站点进行认证（就算真的没人看，这一步也是要做的 2333）。创建站点地图很快完成了，其中 Google 一份，百度的另外还有一份，接下来就是将站点提交给 Google 和百度，然后上传自己的站点地图。从这里开始，问题就来了。  <!--more-->  \n\n<img src=\"https://i.loli.net/2018/11/24/5bf91d188e582.png\" style=\"zoom:60%\" />\n\n### 首坑：网站验证\n\n进入Google的站点验证页面后，**输入自己要提交的网址然后确定，Google 会对此网址进行验证**，稍等片刻后，会弹出如下界面：  \n\n![webauth-ui.png](https://i.loli.net/2018/11/24/5bf8f68424c32.png \"示意图\")\n\n此时会让你选择一个验证方式，来证明这个站点是归你所有。**默认的验证方式是下载一个 HTML 文件并将其上传到自己的站点，然后访问一次，以此方式来通过验证**。  \n\n**当然，除此之外还有别的验证方式，只是相比第一种，可能略微麻烦点**  \n\n![webauth-ui-1.png](https://i.loli.net/2018/11/24/5bf8f78bace64.png \"...\")\n\n分别是 HTML 标记验证、使用 Google 统计验证、使用 Google Tag Manager 验证和域名提供商验证。我找了一圈，实在不知道 HTML 标记应该插入到哪里，Google 说明是要求插入到网页主体部分，在 body 标记之前的段落中，然而我实在是没找到，只得放弃；第二、三种方式是因为没有对应的账户；而第四种则是因为使用了 GitHub Pages 的服务，你让我上哪找域名的提供商？（反正列表里面可没有 GitHub）。**因此，如果没有特别的原因或问题，第一种方法应该是最简单的了，也是 Google 最为推荐的方式**。  \n\n**选择第一种方式，获得一个用于验证的 HTML 文件**。下载之后将它打开，文件内部显示是这个样子的：<span style=\"background:#222;color:white;\">**（记住这张图！）**</span>  \n\n![google-authcode.png](https://i.loli.net/2018/11/24/5bf90326355cd.png \"你没看错，只有这一行代码\")\n\n然后将这个 HTML 文件放入到站点当中，**一切顺利，接下来开始生成、开本地服务器看一下效果，貌似也没问题，部署发布！**返回到Google的站点控制台，通过机器人验证，单击“Verify”  \n\n**结果，直接报错了...**（原谅我那张报错的图当时没截下来，其实是当时没想到要截图...）  \n\n一头雾水的我打开用来验证的那个网页链接，看了看地址，没错啊，那问题出在哪里呢？（问号脸）  \n\n![error-example.png](https://i.loli.net/2018/11/24/5bf906e5e0229.png \"错误截图\")\n\n我又试了几次，还是各种报错失败，这时候我又一次打开那个原始的 HTML 文件，与上传到网站的网页文件对比一下，**额...好像哪里不对？**  \n\n**划重点：**\n\n<span style=\"background:#222;color:white;\">**因为原来的网页是没有这些模板元素的！有可能是因为这些加入的模板元素导致 Google 不能正常识别，于是我删掉了加入到网站的 HTML 文件，然后`hexo clean`一次，再然后`hexo d -g`一次，成功生成并部署到 GitHub 上之后再将那个 HTML 文件放入到站点根目录的`/public`文件夹中，然后再一次`hexo d`部署到 GitHub 上（这时不要`hexo clean`），刷新几次再看，就变成了一开始只有一行代码的样子，这时再进入到Google的验证页面，果不其然，一次成功了。**（事实证明这反射弧也太长了#捂脸）</span>  \n\n事后重新看了一下Hexo的官方文档，**Hexo 使用 Markdown 作为博客的主要书写语言，而在编写完成后，Hexo 会在 hexo g 的时候将所有页面都使用指定的模板生成一遍，也就是说在这个时候原本的 HTML 文件被加上了事先预定义的样式模板，造成了与 Google 提供的文件样式不统一，导致了验证失败**；而**解决方法中，在已经上传部署的 /public 文件夹中直接放入验证文件，然后 hexo d，跳过了之前的生成环节（之前已经生成过）直接进入到部署环节，将这个文件原封不动直接上传到 GitHub 上，期间不加入任何样式模板，这样保证了源文件的格式，验证自然成功了**。  \n\n有了之前的实践经验，接下来添加百度的站点验证就简单多了，这里倒是没有什么坑...  \n\n### 二坑：站点地图\n\n紧接着就是添加站点地图（sitemap），**这里需要先配置几个组件**，代码如下：  \n\n```bash\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n```\n\n**组件安装完成后，还需要在站点配置文件中新增以下条目：**  \n\n```yaml\n# 自动生成sitemap\nsitemap: \n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml \n```\n\n**之后站点本地位置就会生成 sitemap.xml 和 baidusitemap.xml，前者提交给 Google，后者提交给百度**，这样站点地图就提交成功了。  \n\n**但是**，这里还有一点需要注意：**站点配置文件中“url”字段之后的内容也需要修改**。示例代码如下：  \n\n``` yaml\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://witherzuo.github.io\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n```\n\n将**原有的默认字段注释删除掉，然后修改为自己的站点地址即可**。**如果这一步没有完成，在部署并生成站点地图的过程中就不会传入正确的站点地址，站点地图也就无法正常通过验证。**  \n\n### 总结\n\n前面写了不少，作为全文结尾，再来点总结：  \n\n{% note danger %}\n\n**在进行站点所有权验证时，如果选择了第一种方法，切记在部署时不要直接生成整个站点，否则用于验证的源文件会被模板样式直接覆盖掉，这种情况下由于验证源文件与 Google 提供的文件不一样，会直接导致验证失败！解决方法则是在生成并部署站点时将这个 HTML 文件移走，在部署完成后将这个文件移动回 /public 文件夹，再进行一次部署。**  \n\n**创建站点地图文件时，记得事先修改站点配置文件中的“url”字段，然后再生成站点地图文件，不然错误的站点地图地址会导致无法正常上传。**  \n\n{% endnote %}\n\n**其实，出现这些问题，还是因为对 Hexo 的了解不够，现在来看，确实是给自己挖了个大坑#捂脸×2（逃**  \n\nEND","slug":"提交网站到Google上踩过的坑","published":1,"updated":"2019-07-16T04:22:08.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3ul000m0wvcmjheqkau","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>其实这一篇本来可以不用写的，因为 Hexo 的生成和提交方式已经写的比较清晰明白了，怎奈在实际操作的过程中还是直接掉坑里，写这一篇就算是对操作的一个总结，顺便提醒自己不要再犯相同的问题吧…</p><p>在安装完 Hexo 的 sitemap 组件后，接下来就是创建站点地图和提交站点进行认证（就算真的没人看，这一步也是要做的 2333）。创建站点地图很快完成了，其中 Google 一份，百度的另外还有一份，接下来就是将站点提交给 Google 和百度，然后上传自己的站点地图。从这里开始，问题就来了。<a id=\"more\"></a></p><img src=\"https://i.loli.net/2018/11/24/5bf91d188e582.png\" style=\"zoom:60%\"><h3 id=\"首坑：网站验证\"><a href=\"#首坑：网站验证\" class=\"headerlink\" title=\"首坑：网站验证\"></a>首坑：网站验证</h3><p>进入Google的站点验证页面后，<strong>输入自己要提交的网址然后确定，Google 会对此网址进行验证</strong>，稍等片刻后，会弹出如下界面：</p><p><img src=\"https://i.loli.net/2018/11/24/5bf8f68424c32.png\" alt=\"webauth-ui.png\" title=\"示意图\"></p><p>此时会让你选择一个验证方式，来证明这个站点是归你所有。<strong>默认的验证方式是下载一个 HTML 文件并将其上传到自己的站点，然后访问一次，以此方式来通过验证</strong>。</p><p><strong>当然，除此之外还有别的验证方式，只是相比第一种，可能略微麻烦点</strong></p><p><img src=\"https://i.loli.net/2018/11/24/5bf8f78bace64.png\" alt=\"webauth-ui-1.png\" title=\"...\"></p><p>分别是 HTML 标记验证、使用 Google 统计验证、使用 Google Tag Manager 验证和域名提供商验证。我找了一圈，实在不知道 HTML 标记应该插入到哪里，Google 说明是要求插入到网页主体部分，在 body 标记之前的段落中，然而我实在是没找到，只得放弃；第二、三种方式是因为没有对应的账户；而第四种则是因为使用了 GitHub Pages 的服务，你让我上哪找域名的提供商？（反正列表里面可没有 GitHub）。<strong>因此，如果没有特别的原因或问题，第一种方法应该是最简单的了，也是 Google 最为推荐的方式</strong>。</p><p><strong>选择第一种方式，获得一个用于验证的 HTML 文件</strong>。下载之后将它打开，文件内部显示是这个样子的：<span style=\"background:#222;color:#fff\"><strong>（记住这张图！）</strong></span></p><p><img src=\"https://i.loli.net/2018/11/24/5bf90326355cd.png\" alt=\"google-authcode.png\" title=\"你没看错，只有这一行代码\"></p><p>然后将这个 HTML 文件放入到站点当中，<strong>一切顺利，接下来开始生成、开本地服务器看一下效果，貌似也没问题，部署发布！</strong>返回到Google的站点控制台，通过机器人验证，单击“Verify”</p><p><strong>结果，直接报错了…</strong>（原谅我那张报错的图当时没截下来，其实是当时没想到要截图…）</p><p>一头雾水的我打开用来验证的那个网页链接，看了看地址，没错啊，那问题出在哪里呢？（问号脸）</p><p><img src=\"https://i.loli.net/2018/11/24/5bf906e5e0229.png\" alt=\"error-example.png\" title=\"错误截图\"></p><p>我又试了几次，还是各种报错失败，这时候我又一次打开那个原始的 HTML 文件，与上传到网站的网页文件对比一下，<strong>额…好像哪里不对？</strong></p><p><strong>划重点：</strong></p><p><span style=\"background:#222;color:#fff\"><strong>因为原来的网页是没有这些模板元素的！有可能是因为这些加入的模板元素导致 Google 不能正常识别，于是我删掉了加入到网站的 HTML 文件，然后<code>hexo clean</code>一次，再然后<code>hexo d -g</code>一次，成功生成并部署到 GitHub 上之后再将那个 HTML 文件放入到站点根目录的<code>/public</code>文件夹中，然后再一次<code>hexo d</code>部署到 GitHub 上（这时不要<code>hexo clean</code>），刷新几次再看，就变成了一开始只有一行代码的样子，这时再进入到Google的验证页面，果不其然，一次成功了。</strong>（事实证明这反射弧也太长了#捂脸）</span></p><p>事后重新看了一下Hexo的官方文档，<strong>Hexo 使用 Markdown 作为博客的主要书写语言，而在编写完成后，Hexo 会在 hexo g 的时候将所有页面都使用指定的模板生成一遍，也就是说在这个时候原本的 HTML 文件被加上了事先预定义的样式模板，造成了与 Google 提供的文件样式不统一，导致了验证失败</strong>；而<strong>解决方法中，在已经上传部署的 /public 文件夹中直接放入验证文件，然后 hexo d，跳过了之前的生成环节（之前已经生成过）直接进入到部署环节，将这个文件原封不动直接上传到 GitHub 上，期间不加入任何样式模板，这样保证了源文件的格式，验证自然成功了</strong>。</p><p>有了之前的实践经验，接下来添加百度的站点验证就简单多了，这里倒是没有什么坑…</p><h3 id=\"二坑：站点地图\"><a href=\"#二坑：站点地图\" class=\"headerlink\" title=\"二坑：站点地图\"></a>二坑：站点地图</h3><p>紧接着就是添加站点地图（sitemap），<strong>这里需要先配置几个组件</strong>，代码如下：</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p><strong>组件安装完成后，还需要在站点配置文件中新增以下条目：</strong></p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自动生成sitemap</span></span><br><span class=\"line\"><span class=\"attr\">sitemap:</span> </span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">sitemap.xml</span></span><br><span class=\"line\"><span class=\"attr\">baidusitemap:</span></span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">baidusitemap.xml</span></span><br></pre></td></tr></table></figure><p><strong>之后站点本地位置就会生成 sitemap.xml 和 baidusitemap.xml，前者提交给 Google，后者提交给百度</strong>，这样站点地图就提交成功了。</p><p><strong>但是</strong>，这里还有一点需要注意：<strong>站点配置文件中“url”字段之后的内容也需要修改</strong>。示例代码如下：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"attr\">https://witherzuo.github.io</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:month/:day/:title/</span></span><br><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br></pre></td></tr></table></figure><p>将<strong>原有的默认字段注释删除掉，然后修改为自己的站点地址即可</strong>。<strong>如果这一步没有完成，在部署并生成站点地图的过程中就不会传入正确的站点地址，站点地图也就无法正常通过验证。</strong></p><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>前面写了不少，作为全文结尾，再来点总结：</p><div class=\"note danger\"><p><strong>在进行站点所有权验证时，如果选择了第一种方法，切记在部署时不要直接生成整个站点，否则用于验证的源文件会被模板样式直接覆盖掉，这种情况下由于验证源文件与 Google 提供的文件不一样，会直接导致验证失败！解决方法则是在生成并部署站点时将这个 HTML 文件移走，在部署完成后将这个文件移动回 /public 文件夹，再进行一次部署。</strong></p><p><strong>创建站点地图文件时，记得事先修改站点配置文件中的“url”字段，然后再生成站点地图文件，不然错误的站点地图地址会导致无法正常上传。</strong></p></div><p><strong>其实，出现这些问题，还是因为对 Hexo 的了解不够，现在来看，确实是给自己挖了个大坑#捂脸×2（逃</strong></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":2530,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>其实这一篇本来可以不用写的，因为 Hexo 的生成和提交方式已经写的比较清晰明白了，怎奈在实际操作的过程中还是直接掉坑里，写这一篇就算是对操作的一个总结，顺便提醒自己不要再犯相同的问题吧…</p><p>在安装完 Hexo 的 sitemap 组件后，接下来就是创建站点地图和提交站点进行认证（就算真的没人看，这一步也是要做的 2333）。创建站点地图很快完成了，其中 Google 一份，百度的另外还有一份，接下来就是将站点提交给 Google 和百度，然后上传自己的站点地图。从这里开始，问题就来了。","more":"</p><img src=\"https://i.loli.net/2018/11/24/5bf91d188e582.png\" style=\"zoom:60%\"><h3 id=\"首坑：网站验证\"><a href=\"#首坑：网站验证\" class=\"headerlink\" title=\"首坑：网站验证\"></a>首坑：网站验证</h3><p>进入Google的站点验证页面后，<strong>输入自己要提交的网址然后确定，Google 会对此网址进行验证</strong>，稍等片刻后，会弹出如下界面：</p><p><img src=\"https://i.loli.net/2018/11/24/5bf8f68424c32.png\" alt=\"webauth-ui.png\" title=\"示意图\"></p><p>此时会让你选择一个验证方式，来证明这个站点是归你所有。<strong>默认的验证方式是下载一个 HTML 文件并将其上传到自己的站点，然后访问一次，以此方式来通过验证</strong>。</p><p><strong>当然，除此之外还有别的验证方式，只是相比第一种，可能略微麻烦点</strong></p><p><img src=\"https://i.loli.net/2018/11/24/5bf8f78bace64.png\" alt=\"webauth-ui-1.png\" title=\"...\"></p><p>分别是 HTML 标记验证、使用 Google 统计验证、使用 Google Tag Manager 验证和域名提供商验证。我找了一圈，实在不知道 HTML 标记应该插入到哪里，Google 说明是要求插入到网页主体部分，在 body 标记之前的段落中，然而我实在是没找到，只得放弃；第二、三种方式是因为没有对应的账户；而第四种则是因为使用了 GitHub Pages 的服务，你让我上哪找域名的提供商？（反正列表里面可没有 GitHub）。<strong>因此，如果没有特别的原因或问题，第一种方法应该是最简单的了，也是 Google 最为推荐的方式</strong>。</p><p><strong>选择第一种方式，获得一个用于验证的 HTML 文件</strong>。下载之后将它打开，文件内部显示是这个样子的：<span style=\"background:#222;color:#fff\"><strong>（记住这张图！）</strong></span></p><p><img src=\"https://i.loli.net/2018/11/24/5bf90326355cd.png\" alt=\"google-authcode.png\" title=\"你没看错，只有这一行代码\"></p><p>然后将这个 HTML 文件放入到站点当中，<strong>一切顺利，接下来开始生成、开本地服务器看一下效果，貌似也没问题，部署发布！</strong>返回到Google的站点控制台，通过机器人验证，单击“Verify”</p><p><strong>结果，直接报错了…</strong>（原谅我那张报错的图当时没截下来，其实是当时没想到要截图…）</p><p>一头雾水的我打开用来验证的那个网页链接，看了看地址，没错啊，那问题出在哪里呢？（问号脸）</p><p><img src=\"https://i.loli.net/2018/11/24/5bf906e5e0229.png\" alt=\"error-example.png\" title=\"错误截图\"></p><p>我又试了几次，还是各种报错失败，这时候我又一次打开那个原始的 HTML 文件，与上传到网站的网页文件对比一下，<strong>额…好像哪里不对？</strong></p><p><strong>划重点：</strong></p><p><span style=\"background:#222;color:#fff\"><strong>因为原来的网页是没有这些模板元素的！有可能是因为这些加入的模板元素导致 Google 不能正常识别，于是我删掉了加入到网站的 HTML 文件，然后<code>hexo clean</code>一次，再然后<code>hexo d -g</code>一次，成功生成并部署到 GitHub 上之后再将那个 HTML 文件放入到站点根目录的<code>/public</code>文件夹中，然后再一次<code>hexo d</code>部署到 GitHub 上（这时不要<code>hexo clean</code>），刷新几次再看，就变成了一开始只有一行代码的样子，这时再进入到Google的验证页面，果不其然，一次成功了。</strong>（事实证明这反射弧也太长了#捂脸）</span></p><p>事后重新看了一下Hexo的官方文档，<strong>Hexo 使用 Markdown 作为博客的主要书写语言，而在编写完成后，Hexo 会在 hexo g 的时候将所有页面都使用指定的模板生成一遍，也就是说在这个时候原本的 HTML 文件被加上了事先预定义的样式模板，造成了与 Google 提供的文件样式不统一，导致了验证失败</strong>；而<strong>解决方法中，在已经上传部署的 /public 文件夹中直接放入验证文件，然后 hexo d，跳过了之前的生成环节（之前已经生成过）直接进入到部署环节，将这个文件原封不动直接上传到 GitHub 上，期间不加入任何样式模板，这样保证了源文件的格式，验证自然成功了</strong>。</p><p>有了之前的实践经验，接下来添加百度的站点验证就简单多了，这里倒是没有什么坑…</p><h3 id=\"二坑：站点地图\"><a href=\"#二坑：站点地图\" class=\"headerlink\" title=\"二坑：站点地图\"></a>二坑：站点地图</h3><p>紧接着就是添加站点地图（sitemap），<strong>这里需要先配置几个组件</strong>，代码如下：</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p><strong>组件安装完成后，还需要在站点配置文件中新增以下条目：</strong></p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自动生成sitemap</span></span><br><span class=\"line\"><span class=\"attr\">sitemap:</span> </span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">sitemap.xml</span></span><br><span class=\"line\"><span class=\"attr\">baidusitemap:</span></span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">baidusitemap.xml</span></span><br></pre></td></tr></table></figure><p><strong>之后站点本地位置就会生成 sitemap.xml 和 baidusitemap.xml，前者提交给 Google，后者提交给百度</strong>，这样站点地图就提交成功了。</p><p><strong>但是</strong>，这里还有一点需要注意：<strong>站点配置文件中“url”字段之后的内容也需要修改</strong>。示例代码如下：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"attr\">https://witherzuo.github.io</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:month/:day/:title/</span></span><br><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br></pre></td></tr></table></figure><p>将<strong>原有的默认字段注释删除掉，然后修改为自己的站点地址即可</strong>。<strong>如果这一步没有完成，在部署并生成站点地图的过程中就不会传入正确的站点地址，站点地图也就无法正常通过验证。</strong></p><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>前面写了不少，作为全文结尾，再来点总结：</p><div class=\"note danger\"><p><strong>在进行站点所有权验证时，如果选择了第一种方法，切记在部署时不要直接生成整个站点，否则用于验证的源文件会被模板样式直接覆盖掉，这种情况下由于验证源文件与 Google 提供的文件不一样，会直接导致验证失败！解决方法则是在生成并部署站点时将这个 HTML 文件移走，在部署完成后将这个文件移动回 /public 文件夹，再进行一次部署。</strong></p><p><strong>创建站点地图文件时，记得事先修改站点配置文件中的“url”字段，然后再生成站点地图文件，不然错误的站点地图地址会导致无法正常上传。</strong></p></div><p><strong>其实，出现这些问题，还是因为对 Hexo 的了解不够，现在来看，确实是给自己挖了个大坑#捂脸×2（逃</strong></p><p>END</p><!-- rebuild by neat -->"},{"title":"新版Win10中改变鼠标颜色","abbrlink":"2ba6222e","date":"2019-07-15T02:16:42.000Z","_content":"\n在Windows 10中，传统控制面板里的“鼠标”设置面板中，有不少的鼠标指针方案被删除，只留下了默认和反色的鼠标指针方案，然而微软在新版本的Windows 10中带来了改变鼠标指针颜色的设置项，这样就不用再面对那一成不变的默认白色鼠标指针了。你可以将鼠标的指针颜色改编成任何你想要的颜色。<!--more-->  \n\n想要改变指针颜色，首先需要**确认你的系统版本，必须要在Windows 10 19H1，Build 版本号为18362或更高**，因为在此版本中，微软为其带来了这项功能，其目的在于方便障碍人士能够更好辨认鼠标指针，便于他们操作使用电脑。  \n\n![19H1的更新内容](https://i.loli.net/2019/07/15/5d2bfc6722fca48173.png)\n\n> 为了支持更大的最大尺寸和更多调整步长，鼠标指针尺寸调整变为滑块式；  \n>\n> **鼠标指针的颜色可被设为自定义颜色；**  \n>\n> 已加入11种全新的鼠标指针尺寸；\n\n**可以看到，这些更新内容都是为了“轻松使用”这一方面准备的，但我们也可以借助这个功能来给一成不变的单调白色指针变个色。**  \n\n在**“设置”应用**中，单击**“轻松使用”按钮**，进入到设置面板，在**左侧的类别条目中单击“鼠标与指针”**这一项，如图所示：  \n\n![蓝色的鼠标指针瞩目](https://i.loli.net/2019/07/15/5d2bfc68b796579674.png)  \n\n在这里可以修改指针光标大小和现实的样式和颜色。指针大小一般都保持默认大小，而**配色方案微软默认给出了四个选择：白色（默认）、黑色、反转色和自定义彩色**。  至于每种配色方案会将鼠标指针变为何种样式，在示意图中都清楚地展示出来了。    \n\n![从左至右，四种配色方案：白色、黑色、反转色、彩色](https://i.loli.net/2019/07/15/5d2bfc66a6d9e72191.png)  \n![系统推荐的配色方案](https://i.loli.net/2019/07/15/5d2bfc663893e42797.png)  \n\n**最后一种配色方案就是“自定义彩色”，也就是将指针颜色改为任何一种颜色**。默认会给出一些适合的配色方案，**如果对这些不满意，也可以在下方单击“选择自定义指针颜色”**。  \n\n![设置窗口](https://i.loli.net/2019/07/15/5d2bfc683233a14751.png)\n\n在弹出的窗口里可以自由设定你想要的颜色，只要你能辨认出来指针，那么改成什么颜色都可以，**但是还是建议修改成易于辨识的颜色，以防在一片复杂的界面中寻觅不到鼠标指针的踪迹（笑）**  \n\n![设置后的效果，正在使用Typora](https://i.loli.net/2019/07/15/5d2bfc679d47874571.png?70)  \n\n<style>div.post-block br {display: none}</style>","source":"_posts/新版Win10中改变鼠标颜色.md","raw":"---\ntitle: 新版Win10中改变鼠标颜色\nabbrlink: 2ba6222e\ndate: 2019-07-15 10:16:42\ntags: [Windows 10, 鼠标]\ncategories: 使用体验\n---\n\n在Windows 10中，传统控制面板里的“鼠标”设置面板中，有不少的鼠标指针方案被删除，只留下了默认和反色的鼠标指针方案，然而微软在新版本的Windows 10中带来了改变鼠标指针颜色的设置项，这样就不用再面对那一成不变的默认白色鼠标指针了。你可以将鼠标的指针颜色改编成任何你想要的颜色。<!--more-->  \n\n想要改变指针颜色，首先需要**确认你的系统版本，必须要在Windows 10 19H1，Build 版本号为18362或更高**，因为在此版本中，微软为其带来了这项功能，其目的在于方便障碍人士能够更好辨认鼠标指针，便于他们操作使用电脑。  \n\n![19H1的更新内容](https://i.loli.net/2019/07/15/5d2bfc6722fca48173.png)\n\n> 为了支持更大的最大尺寸和更多调整步长，鼠标指针尺寸调整变为滑块式；  \n>\n> **鼠标指针的颜色可被设为自定义颜色；**  \n>\n> 已加入11种全新的鼠标指针尺寸；\n\n**可以看到，这些更新内容都是为了“轻松使用”这一方面准备的，但我们也可以借助这个功能来给一成不变的单调白色指针变个色。**  \n\n在**“设置”应用**中，单击**“轻松使用”按钮**，进入到设置面板，在**左侧的类别条目中单击“鼠标与指针”**这一项，如图所示：  \n\n![蓝色的鼠标指针瞩目](https://i.loli.net/2019/07/15/5d2bfc68b796579674.png)  \n\n在这里可以修改指针光标大小和现实的样式和颜色。指针大小一般都保持默认大小，而**配色方案微软默认给出了四个选择：白色（默认）、黑色、反转色和自定义彩色**。  至于每种配色方案会将鼠标指针变为何种样式，在示意图中都清楚地展示出来了。    \n\n![从左至右，四种配色方案：白色、黑色、反转色、彩色](https://i.loli.net/2019/07/15/5d2bfc66a6d9e72191.png)  \n![系统推荐的配色方案](https://i.loli.net/2019/07/15/5d2bfc663893e42797.png)  \n\n**最后一种配色方案就是“自定义彩色”，也就是将指针颜色改为任何一种颜色**。默认会给出一些适合的配色方案，**如果对这些不满意，也可以在下方单击“选择自定义指针颜色”**。  \n\n![设置窗口](https://i.loli.net/2019/07/15/5d2bfc683233a14751.png)\n\n在弹出的窗口里可以自由设定你想要的颜色，只要你能辨认出来指针，那么改成什么颜色都可以，**但是还是建议修改成易于辨识的颜色，以防在一片复杂的界面中寻觅不到鼠标指针的踪迹（笑）**  \n\n![设置后的效果，正在使用Typora](https://i.loli.net/2019/07/15/5d2bfc679d47874571.png?70)  \n\n<style>div.post-block br {display: none}</style>","slug":"新版Win10中改变鼠标颜色","published":1,"updated":"2019-07-15T06:56:31.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3um000o0wvc1jb8e3nf","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>在Windows 10中，传统控制面板里的“鼠标”设置面板中，有不少的鼠标指针方案被删除，只留下了默认和反色的鼠标指针方案，然而微软在新版本的Windows 10中带来了改变鼠标指针颜色的设置项，这样就不用再面对那一成不变的默认白色鼠标指针了。你可以将鼠标的指针颜色改编成任何你想要的颜色。<a id=\"more\"></a></p><p>想要改变指针颜色，首先需要<strong>确认你的系统版本，必须要在Windows 10 19H1，Build 版本号为18362或更高</strong>，因为在此版本中，微软为其带来了这项功能，其目的在于方便障碍人士能够更好辨认鼠标指针，便于他们操作使用电脑。</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc6722fca48173.png\" alt=\"19H1的更新内容\"></p><blockquote><p>为了支持更大的最大尺寸和更多调整步长，鼠标指针尺寸调整变为滑块式；</p><p><strong>鼠标指针的颜色可被设为自定义颜色；</strong></p><p>已加入11种全新的鼠标指针尺寸；</p></blockquote><p><strong>可以看到，这些更新内容都是为了“轻松使用”这一方面准备的，但我们也可以借助这个功能来给一成不变的单调白色指针变个色。</strong></p><p>在<strong>“设置”应用</strong>中，单击<strong>“轻松使用”按钮</strong>，进入到设置面板，在<strong>左侧的类别条目中单击“鼠标与指针”</strong>这一项，如图所示：</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc68b796579674.png\" alt=\"蓝色的鼠标指针瞩目\"></p><p>在这里可以修改指针光标大小和现实的样式和颜色。指针大小一般都保持默认大小，而<strong>配色方案微软默认给出了四个选择：白色（默认）、黑色、反转色和自定义彩色</strong>。 至于每种配色方案会将鼠标指针变为何种样式，在示意图中都清楚地展示出来了。</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc66a6d9e72191.png\" alt=\"从左至右，四种配色方案：白色、黑色、反转色、彩色\"><br><img src=\"https://i.loli.net/2019/07/15/5d2bfc663893e42797.png\" alt=\"系统推荐的配色方案\"></p><p><strong>最后一种配色方案就是“自定义彩色”，也就是将指针颜色改为任何一种颜色</strong>。默认会给出一些适合的配色方案，<strong>如果对这些不满意，也可以在下方单击“选择自定义指针颜色”</strong>。</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc683233a14751.png\" alt=\"设置窗口\"></p><p>在弹出的窗口里可以自由设定你想要的颜色，只要你能辨认出来指针，那么改成什么颜色都可以，<strong>但是还是建议修改成易于辨识的颜色，以防在一片复杂的界面中寻觅不到鼠标指针的踪迹（笑）</strong></p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc679d47874571.png?70\" alt=\"设置后的效果，正在使用Typora\"></p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->","site":{"data":{}},"length":744,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>在Windows 10中，传统控制面板里的“鼠标”设置面板中，有不少的鼠标指针方案被删除，只留下了默认和反色的鼠标指针方案，然而微软在新版本的Windows 10中带来了改变鼠标指针颜色的设置项，这样就不用再面对那一成不变的默认白色鼠标指针了。你可以将鼠标的指针颜色改编成任何你想要的颜色。","more":"</p><p>想要改变指针颜色，首先需要<strong>确认你的系统版本，必须要在Windows 10 19H1，Build 版本号为18362或更高</strong>，因为在此版本中，微软为其带来了这项功能，其目的在于方便障碍人士能够更好辨认鼠标指针，便于他们操作使用电脑。</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc6722fca48173.png\" alt=\"19H1的更新内容\"></p><blockquote><p>为了支持更大的最大尺寸和更多调整步长，鼠标指针尺寸调整变为滑块式；</p><p><strong>鼠标指针的颜色可被设为自定义颜色；</strong></p><p>已加入11种全新的鼠标指针尺寸；</p></blockquote><p><strong>可以看到，这些更新内容都是为了“轻松使用”这一方面准备的，但我们也可以借助这个功能来给一成不变的单调白色指针变个色。</strong></p><p>在<strong>“设置”应用</strong>中，单击<strong>“轻松使用”按钮</strong>，进入到设置面板，在<strong>左侧的类别条目中单击“鼠标与指针”</strong>这一项，如图所示：</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc68b796579674.png\" alt=\"蓝色的鼠标指针瞩目\"></p><p>在这里可以修改指针光标大小和现实的样式和颜色。指针大小一般都保持默认大小，而<strong>配色方案微软默认给出了四个选择：白色（默认）、黑色、反转色和自定义彩色</strong>。 至于每种配色方案会将鼠标指针变为何种样式，在示意图中都清楚地展示出来了。</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc66a6d9e72191.png\" alt=\"从左至右，四种配色方案：白色、黑色、反转色、彩色\"><br><img src=\"https://i.loli.net/2019/07/15/5d2bfc663893e42797.png\" alt=\"系统推荐的配色方案\"></p><p><strong>最后一种配色方案就是“自定义彩色”，也就是将指针颜色改为任何一种颜色</strong>。默认会给出一些适合的配色方案，<strong>如果对这些不满意，也可以在下方单击“选择自定义指针颜色”</strong>。</p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc683233a14751.png\" alt=\"设置窗口\"></p><p>在弹出的窗口里可以自由设定你想要的颜色，只要你能辨认出来指针，那么改成什么颜色都可以，<strong>但是还是建议修改成易于辨识的颜色，以防在一片复杂的界面中寻觅不到鼠标指针的踪迹（笑）</strong></p><p><img src=\"https://i.loli.net/2019/07/15/5d2bfc679d47874571.png?70\" alt=\"设置后的效果，正在使用Typora\"></p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->"},{"title":"新的Minecraft启动器","abbrlink":"798ac5be","date":"2019-07-08T12:53:56.000Z","_content":"\n众所周知，想要在Windows、macOS或Linux上玩Java版的Minecraft，那么一个启动器是打开游戏的必备条件之一（你不需要启动器？那你可能是启动命令行大佬，或者你启动了基岩版#滑稽）而很多人选择MC的启动器，一般都会直接避过来自Mojang的官方启动器，转而选择第三方（一般是爱好者）开发的启动器，例如HMCL、MultiMC、BMCL等等，究其原因，第三方启动器相比官方的启动器，在基础功能上添加了更多的便捷功能。也正因为如此，即便入了正版，也很少有人会去下载官启（购买正版获得的是对应的服务和权限）。而最近Mojang释出了全新的官方启动器，从这个新版启动器开始，我对官方启动器的印象也转变了不少。<!--more-->    \n\n ![旧版的官方启动器界面，图源：Minecraft Wiki](https://i.loli.net/2019/07/08/5d23537d0d45e16715.png)  \n\n**Mojang完全重做官方启动器，放弃使用Java语言编写的启动器是在2016年**，当时的Mojang放出消息说新官启将会重做界面，并提供启动器内更换皮肤功能，在这个启动器开始测试后，Mojang也确实做到了这点。**但是在国内，这个新的启动器仍然“不受待见”，启动慢、卡白屏、无法登录等等问题。而在2019年的五月下旬开始，Mojang开始了新一轮的官启改造，这一次又是改头换面、脱胎换骨，让人感觉这次Mojang真是用心了hhh。**  \n\n![新官启的登录界面](https://i.loli.net/2019/07/08/5d23537fdfc3011881.png)  \n\n一开始先来放一张新官启的登录界面，**这个背景图比之前那死板的登录界面好看多了**。  \n\n登录进来之后，显示出来的是启动器的主界面了。不得不说，**新官启的打开速度和反应速度都比之前快了不少**，新官启的主界面分为四部分：侧边菜单项、上方的选项卡、下方的“启动游戏”和档案切换以及主界面的背景图；旧官启同样为四部分：顶栏、上方的选项卡、中间的滚动新闻和下方的“启动游戏”和档案管理。**新官启的最大区别是将“新闻”这一栏目放到了侧边菜单项中，默认不展示，而非之前在加载主界面时会一并加载新闻**。这一改动带来最大的好处就是**极大缩短了启动器打开的时间**，官方启动器展现出来的新闻内容大多在外网，在内地加载速度可想而知（里面还有YouTube...），这就导致了在完全与新闻服务器响应之前，启动器不会有其它的响应；而新启动器默认不在主界面加载新闻，启动时并不需要从新闻服务上获取数据，整体启动速度和反应快了不少，而且就算在侧边菜单中切换到“新闻”选项卡，加载速度也比旧官启快许多。而且新官启对中文字体进行了优化，微软雅黑成为了中文的默认字体，而非之前那万恶的宋体。<span style=\"background:#222;color:white\">**所以，看在加载速度与启动速度方面上，放弃旧官启吧**。</span>  \n\n![“新闻”界面](https://i.loli.net/2019/07/08/5d23536d926dd75725.png) \n![依旧扎眼的“启动游戏”](https://i.loli.net/2019/07/08/5d23536c999f570850.png)  \n\n主界面下方的绿色的“开始游戏”按钮依旧显眼，左侧是指定启动的游戏配置，而右侧则显示目前的账户名称，单击左侧的游戏配置可以切换其它的游戏配置。**而启动器整体的黑绿配色更是增添了一种说不出的激情（emm）**  \n\n新官启的背景图，蜘蛛和小白以及末影人都来了，苦力怕在偷瞄，僵尸你在哪里2333   \n\n![僵尸君你肿么了？](https://i.loli.net/2019/07/08/5d23537f0885f89315.png) \n\n相比于之前的“新”官启，这次的新官启在“配置”选项卡中的改变并不算大，比较明显的改动是在每个配置文件项目的右侧加入了“启动游戏”的按钮，当鼠标指向一个配置时，就可以通过这个按钮来快速启动游戏。每个配置实例都可以进行设置编辑和复制，官方启动器自带的两个配置无法删除。**值得一提的是，官方启动器目前的默认Java虚拟机分配内存大小从原来的1024MB增加到了2048MB，在不带大量mod的情况下，内存不足这一情况应该会比较少出现了**。   \n\n![“配置”选项卡界面](https://i.loli.net/2019/07/08/5d23536b09ab890889.png) \n![详细的配置设置窗口](https://i.loli.net/2019/07/08/5d235369bdd7527893.png)  \n\n新官启的另一显著变化是添加了“更新说明”选项卡，也就是Patch Notes，每一次的新更新内容都会在这里展示出来，不过需要注意的是，这里只展现每个大版本（如1.13、1.14）的更新内容，而小版本号（如1.14.x）的更新内容，需要单击右上方的“更多版本信息”来查看，这样就能在启动器内知晓每个大版本的全部更新内容了。  \n\n![“更新说明”界面](https://i.loli.net/2019/07/08/5d2357395277411918.png)  \n\n**新官启的“设置”项目更加集中**，相比于之前官启的设计：版本号展现在主界面左下角，账号切换在右上方，启动器设置在选项卡中这一设定，新官启的“启动器设置”、“账号管理”和“关于”都划归在“设置”选项卡中，避免了一头雾水的情况。当然，这一次的新官启和之前的新官启一样，都是**支持中文**的，这里感谢Crowdin上贡献翻译的各位志愿者。  \n\n![“设置”中的“通用”类别](https://i.loli.net/2019/07/08/5d23536781e4b20536.png) \n![“关于”界面，依赖库版本较新](https://i.loli.net/2019/07/08/5d235366e12c661737.png)  \n\n在“关于”界面中可以看到，**Bootstrap的版本还是比较新的**，这一次Mojang和微软可算是上心了。而在“关于”界面的右上方，还有一个“报告启动器漏洞”的链接，单击它会跳转到JIra上的“Minecraft Launcher”的分类，你可以把使用过程中遇到的启动器问题在这里报告，等待开发者的修复。  \n\n除此之外，单**击启动器左上角的用户名，在弹出的菜单中单击“帮助”，会弹出一个与Minecraft有关的帮助问题窗口，这里包括了Mojang官方的技术支持和基本的问题解答**，例如“怎么玩Minecraft”、“疑难解答与帮助中心”、“Twitter上的Mojang支持”等等，下方还有爱好者社区的网站链接：Minecraft Wiki和Planet Minecraft，可以查询有关Minecraft的资料或是向社区寻求帮助。  \n\n![“帮助”界面，有一些基本的疑难解答](https://i.loli.net/2019/07/08/5d235364ad16866486.png)  \n\n要说目前的新官方启动器有哪一方面是旧启动器比不上的，启动器内更换皮肤这一功能可以算一个，到**目前的最新测试版本（2.1.5560）仍然无法更换皮肤**，单击切换到“皮肤”选项卡，会提示你“请到minecraft.net更换皮肤，而皮肤设置将不久回到启动器内”，然而这个“不久”还有多长时间就不得而知了，**不得不说Bugjump就是Bugjump，跳票和写特性还是很稳的#大雾**  \n\n![目前不支持更换皮肤](https://i.loli.net/2019/07/08/5d2353654d0e296728.png)  \n\n有人可能会说，既然这个新官方启动器只是又一次换了个皮，加了一个“更新日志选项卡”，然后又重新组织了一遍功能的位置，也没有新增如安装Forge、OptiFine这样的功能，那要这个官方启动器有何用？**其实这个全新的官方启动器不仅仅是Minecraft Java版的启动器，还将成为“Minecraft Universe”的启动器，Minecraft Universe，顾名思义即“Minecraft宇宙”，微软和Mojang决定打造一个“Minecraft宇宙”，以Minecraft这个知名IP为基础，创作出更多以Minecraft为内容的衍生游戏产品**，例如Minecraft Earth和Minecraft Dungeons，前者为AR增强现实技术的Minecraft，在十周年前夕公布；后者则是一款以经典地牢爬虫为灵感来源的全新动作冒险游戏，也是第一款以Minecraft Universe为背景的游戏，Minecon Earth 2018中初次被提及，在今年的Xbox E3中公布了新的预告片和预计发售时间。**从2009年Minecraft诞生以来，直到2019年，已经走过了10个年头，这一次Mojang和微软的决定将会让Minecraft向一个全新的方向发展。不知你注意到这个新启动器左侧的侧边菜单，目前只有两项：“新闻”和“Minecraft：Java Edition”，而在Minecraft Dungeons发售后，这里极有可能会增加一个“Minecraft Dungeons”的菜单项目，黑绿的配色让人联想到了Xbox的主题色，微软和Mojang的野心已经逐渐显现。毕竟，Minecraft已经不仅仅是一个游戏了。**  \n\n<style>div.post-block br {display: none}</style>","source":"_posts/新的Minecraft启动器.md","raw":"---\ntitle: 新的Minecraft启动器\ntags:\n  - Minecraft\n  - 启动器\ncategories: Minecraft\nabbrlink: 798ac5be\ndate: 2019-07-08 20:53:56\n---\n\n众所周知，想要在Windows、macOS或Linux上玩Java版的Minecraft，那么一个启动器是打开游戏的必备条件之一（你不需要启动器？那你可能是启动命令行大佬，或者你启动了基岩版#滑稽）而很多人选择MC的启动器，一般都会直接避过来自Mojang的官方启动器，转而选择第三方（一般是爱好者）开发的启动器，例如HMCL、MultiMC、BMCL等等，究其原因，第三方启动器相比官方的启动器，在基础功能上添加了更多的便捷功能。也正因为如此，即便入了正版，也很少有人会去下载官启（购买正版获得的是对应的服务和权限）。而最近Mojang释出了全新的官方启动器，从这个新版启动器开始，我对官方启动器的印象也转变了不少。<!--more-->    \n\n ![旧版的官方启动器界面，图源：Minecraft Wiki](https://i.loli.net/2019/07/08/5d23537d0d45e16715.png)  \n\n**Mojang完全重做官方启动器，放弃使用Java语言编写的启动器是在2016年**，当时的Mojang放出消息说新官启将会重做界面，并提供启动器内更换皮肤功能，在这个启动器开始测试后，Mojang也确实做到了这点。**但是在国内，这个新的启动器仍然“不受待见”，启动慢、卡白屏、无法登录等等问题。而在2019年的五月下旬开始，Mojang开始了新一轮的官启改造，这一次又是改头换面、脱胎换骨，让人感觉这次Mojang真是用心了hhh。**  \n\n![新官启的登录界面](https://i.loli.net/2019/07/08/5d23537fdfc3011881.png)  \n\n一开始先来放一张新官启的登录界面，**这个背景图比之前那死板的登录界面好看多了**。  \n\n登录进来之后，显示出来的是启动器的主界面了。不得不说，**新官启的打开速度和反应速度都比之前快了不少**，新官启的主界面分为四部分：侧边菜单项、上方的选项卡、下方的“启动游戏”和档案切换以及主界面的背景图；旧官启同样为四部分：顶栏、上方的选项卡、中间的滚动新闻和下方的“启动游戏”和档案管理。**新官启的最大区别是将“新闻”这一栏目放到了侧边菜单项中，默认不展示，而非之前在加载主界面时会一并加载新闻**。这一改动带来最大的好处就是**极大缩短了启动器打开的时间**，官方启动器展现出来的新闻内容大多在外网，在内地加载速度可想而知（里面还有YouTube...），这就导致了在完全与新闻服务器响应之前，启动器不会有其它的响应；而新启动器默认不在主界面加载新闻，启动时并不需要从新闻服务上获取数据，整体启动速度和反应快了不少，而且就算在侧边菜单中切换到“新闻”选项卡，加载速度也比旧官启快许多。而且新官启对中文字体进行了优化，微软雅黑成为了中文的默认字体，而非之前那万恶的宋体。<span style=\"background:#222;color:white\">**所以，看在加载速度与启动速度方面上，放弃旧官启吧**。</span>  \n\n![“新闻”界面](https://i.loli.net/2019/07/08/5d23536d926dd75725.png) \n![依旧扎眼的“启动游戏”](https://i.loli.net/2019/07/08/5d23536c999f570850.png)  \n\n主界面下方的绿色的“开始游戏”按钮依旧显眼，左侧是指定启动的游戏配置，而右侧则显示目前的账户名称，单击左侧的游戏配置可以切换其它的游戏配置。**而启动器整体的黑绿配色更是增添了一种说不出的激情（emm）**  \n\n新官启的背景图，蜘蛛和小白以及末影人都来了，苦力怕在偷瞄，僵尸你在哪里2333   \n\n![僵尸君你肿么了？](https://i.loli.net/2019/07/08/5d23537f0885f89315.png) \n\n相比于之前的“新”官启，这次的新官启在“配置”选项卡中的改变并不算大，比较明显的改动是在每个配置文件项目的右侧加入了“启动游戏”的按钮，当鼠标指向一个配置时，就可以通过这个按钮来快速启动游戏。每个配置实例都可以进行设置编辑和复制，官方启动器自带的两个配置无法删除。**值得一提的是，官方启动器目前的默认Java虚拟机分配内存大小从原来的1024MB增加到了2048MB，在不带大量mod的情况下，内存不足这一情况应该会比较少出现了**。   \n\n![“配置”选项卡界面](https://i.loli.net/2019/07/08/5d23536b09ab890889.png) \n![详细的配置设置窗口](https://i.loli.net/2019/07/08/5d235369bdd7527893.png)  \n\n新官启的另一显著变化是添加了“更新说明”选项卡，也就是Patch Notes，每一次的新更新内容都会在这里展示出来，不过需要注意的是，这里只展现每个大版本（如1.13、1.14）的更新内容，而小版本号（如1.14.x）的更新内容，需要单击右上方的“更多版本信息”来查看，这样就能在启动器内知晓每个大版本的全部更新内容了。  \n\n![“更新说明”界面](https://i.loli.net/2019/07/08/5d2357395277411918.png)  \n\n**新官启的“设置”项目更加集中**，相比于之前官启的设计：版本号展现在主界面左下角，账号切换在右上方，启动器设置在选项卡中这一设定，新官启的“启动器设置”、“账号管理”和“关于”都划归在“设置”选项卡中，避免了一头雾水的情况。当然，这一次的新官启和之前的新官启一样，都是**支持中文**的，这里感谢Crowdin上贡献翻译的各位志愿者。  \n\n![“设置”中的“通用”类别](https://i.loli.net/2019/07/08/5d23536781e4b20536.png) \n![“关于”界面，依赖库版本较新](https://i.loli.net/2019/07/08/5d235366e12c661737.png)  \n\n在“关于”界面中可以看到，**Bootstrap的版本还是比较新的**，这一次Mojang和微软可算是上心了。而在“关于”界面的右上方，还有一个“报告启动器漏洞”的链接，单击它会跳转到JIra上的“Minecraft Launcher”的分类，你可以把使用过程中遇到的启动器问题在这里报告，等待开发者的修复。  \n\n除此之外，单**击启动器左上角的用户名，在弹出的菜单中单击“帮助”，会弹出一个与Minecraft有关的帮助问题窗口，这里包括了Mojang官方的技术支持和基本的问题解答**，例如“怎么玩Minecraft”、“疑难解答与帮助中心”、“Twitter上的Mojang支持”等等，下方还有爱好者社区的网站链接：Minecraft Wiki和Planet Minecraft，可以查询有关Minecraft的资料或是向社区寻求帮助。  \n\n![“帮助”界面，有一些基本的疑难解答](https://i.loli.net/2019/07/08/5d235364ad16866486.png)  \n\n要说目前的新官方启动器有哪一方面是旧启动器比不上的，启动器内更换皮肤这一功能可以算一个，到**目前的最新测试版本（2.1.5560）仍然无法更换皮肤**，单击切换到“皮肤”选项卡，会提示你“请到minecraft.net更换皮肤，而皮肤设置将不久回到启动器内”，然而这个“不久”还有多长时间就不得而知了，**不得不说Bugjump就是Bugjump，跳票和写特性还是很稳的#大雾**  \n\n![目前不支持更换皮肤](https://i.loli.net/2019/07/08/5d2353654d0e296728.png)  \n\n有人可能会说，既然这个新官方启动器只是又一次换了个皮，加了一个“更新日志选项卡”，然后又重新组织了一遍功能的位置，也没有新增如安装Forge、OptiFine这样的功能，那要这个官方启动器有何用？**其实这个全新的官方启动器不仅仅是Minecraft Java版的启动器，还将成为“Minecraft Universe”的启动器，Minecraft Universe，顾名思义即“Minecraft宇宙”，微软和Mojang决定打造一个“Minecraft宇宙”，以Minecraft这个知名IP为基础，创作出更多以Minecraft为内容的衍生游戏产品**，例如Minecraft Earth和Minecraft Dungeons，前者为AR增强现实技术的Minecraft，在十周年前夕公布；后者则是一款以经典地牢爬虫为灵感来源的全新动作冒险游戏，也是第一款以Minecraft Universe为背景的游戏，Minecon Earth 2018中初次被提及，在今年的Xbox E3中公布了新的预告片和预计发售时间。**从2009年Minecraft诞生以来，直到2019年，已经走过了10个年头，这一次Mojang和微软的决定将会让Minecraft向一个全新的方向发展。不知你注意到这个新启动器左侧的侧边菜单，目前只有两项：“新闻”和“Minecraft：Java Edition”，而在Minecraft Dungeons发售后，这里极有可能会增加一个“Minecraft Dungeons”的菜单项目，黑绿的配色让人联想到了Xbox的主题色，微软和Mojang的野心已经逐渐显现。毕竟，Minecraft已经不仅仅是一个游戏了。**  \n\n<style>div.post-block br {display: none}</style>","slug":"新的Minecraft启动器","published":1,"updated":"2019-07-16T04:25:29.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3up000t0wvctcjfkysx","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>众所周知，想要在Windows、macOS或Linux上玩Java版的Minecraft，那么一个启动器是打开游戏的必备条件之一（你不需要启动器？那你可能是启动命令行大佬，或者你启动了基岩版#滑稽）而很多人选择MC的启动器，一般都会直接避过来自Mojang的官方启动器，转而选择第三方（一般是爱好者）开发的启动器，例如HMCL、MultiMC、BMCL等等，究其原因，第三方启动器相比官方的启动器，在基础功能上添加了更多的便捷功能。也正因为如此，即便入了正版，也很少有人会去下载官启（购买正版获得的是对应的服务和权限）。而最近Mojang释出了全新的官方启动器，从这个新版启动器开始，我对官方启动器的印象也转变了不少。<a id=\"more\"></a></p><p><img src=\"https://i.loli.net/2019/07/08/5d23537d0d45e16715.png\" alt=\"旧版的官方启动器界面，图源：Minecraft Wiki\"></p><p><strong>Mojang完全重做官方启动器，放弃使用Java语言编写的启动器是在2016年</strong>，当时的Mojang放出消息说新官启将会重做界面，并提供启动器内更换皮肤功能，在这个启动器开始测试后，Mojang也确实做到了这点。<strong>但是在国内，这个新的启动器仍然“不受待见”，启动慢、卡白屏、无法登录等等问题。而在2019年的五月下旬开始，Mojang开始了新一轮的官启改造，这一次又是改头换面、脱胎换骨，让人感觉这次Mojang真是用心了hhh。</strong></p><p><img src=\"https://i.loli.net/2019/07/08/5d23537fdfc3011881.png\" alt=\"新官启的登录界面\"></p><p>一开始先来放一张新官启的登录界面，<strong>这个背景图比之前那死板的登录界面好看多了</strong>。</p><p>登录进来之后，显示出来的是启动器的主界面了。不得不说，<strong>新官启的打开速度和反应速度都比之前快了不少</strong>，新官启的主界面分为四部分：侧边菜单项、上方的选项卡、下方的“启动游戏”和档案切换以及主界面的背景图；旧官启同样为四部分：顶栏、上方的选项卡、中间的滚动新闻和下方的“启动游戏”和档案管理。<strong>新官启的最大区别是将“新闻”这一栏目放到了侧边菜单项中，默认不展示，而非之前在加载主界面时会一并加载新闻</strong>。这一改动带来最大的好处就是<strong>极大缩短了启动器打开的时间</strong>，官方启动器展现出来的新闻内容大多在外网，在内地加载速度可想而知（里面还有YouTube…），这就导致了在完全与新闻服务器响应之前，启动器不会有其它的响应；而新启动器默认不在主界面加载新闻，启动时并不需要从新闻服务上获取数据，整体启动速度和反应快了不少，而且就算在侧边菜单中切换到“新闻”选项卡，加载速度也比旧官启快许多。而且新官启对中文字体进行了优化，微软雅黑成为了中文的默认字体，而非之前那万恶的宋体。<span style=\"background:#222;color:#fff\"><strong>所以，看在加载速度与启动速度方面上，放弃旧官启吧</strong>。</span></p><p><img src=\"https://i.loli.net/2019/07/08/5d23536d926dd75725.png\" alt=\"“新闻”界面\"><br><img src=\"https://i.loli.net/2019/07/08/5d23536c999f570850.png\" alt=\"依旧扎眼的“启动游戏”\"></p><p>主界面下方的绿色的“开始游戏”按钮依旧显眼，左侧是指定启动的游戏配置，而右侧则显示目前的账户名称，单击左侧的游戏配置可以切换其它的游戏配置。<strong>而启动器整体的黑绿配色更是增添了一种说不出的激情（emm）</strong></p><p>新官启的背景图，蜘蛛和小白以及末影人都来了，苦力怕在偷瞄，僵尸你在哪里2333</p><p><img src=\"https://i.loli.net/2019/07/08/5d23537f0885f89315.png\" alt=\"僵尸君你肿么了？\"></p><p>相比于之前的“新”官启，这次的新官启在“配置”选项卡中的改变并不算大，比较明显的改动是在每个配置文件项目的右侧加入了“启动游戏”的按钮，当鼠标指向一个配置时，就可以通过这个按钮来快速启动游戏。每个配置实例都可以进行设置编辑和复制，官方启动器自带的两个配置无法删除。<strong>值得一提的是，官方启动器目前的默认Java虚拟机分配内存大小从原来的1024MB增加到了2048MB，在不带大量mod的情况下，内存不足这一情况应该会比较少出现了</strong>。</p><p><img src=\"https://i.loli.net/2019/07/08/5d23536b09ab890889.png\" alt=\"“配置”选项卡界面\"><br><img src=\"https://i.loli.net/2019/07/08/5d235369bdd7527893.png\" alt=\"详细的配置设置窗口\"></p><p>新官启的另一显著变化是添加了“更新说明”选项卡，也就是Patch Notes，每一次的新更新内容都会在这里展示出来，不过需要注意的是，这里只展现每个大版本（如1.13、1.14）的更新内容，而小版本号（如1.14.x）的更新内容，需要单击右上方的“更多版本信息”来查看，这样就能在启动器内知晓每个大版本的全部更新内容了。</p><p><img src=\"https://i.loli.net/2019/07/08/5d2357395277411918.png\" alt=\"“更新说明”界面\"></p><p><strong>新官启的“设置”项目更加集中</strong>，相比于之前官启的设计：版本号展现在主界面左下角，账号切换在右上方，启动器设置在选项卡中这一设定，新官启的“启动器设置”、“账号管理”和“关于”都划归在“设置”选项卡中，避免了一头雾水的情况。当然，这一次的新官启和之前的新官启一样，都是<strong>支持中文</strong>的，这里感谢Crowdin上贡献翻译的各位志愿者。</p><p><img src=\"https://i.loli.net/2019/07/08/5d23536781e4b20536.png\" alt=\"“设置”中的“通用”类别\"><br><img src=\"https://i.loli.net/2019/07/08/5d235366e12c661737.png\" alt=\"“关于”界面，依赖库版本较新\"></p><p>在“关于”界面中可以看到，<strong>Bootstrap的版本还是比较新的</strong>，这一次Mojang和微软可算是上心了。而在“关于”界面的右上方，还有一个“报告启动器漏洞”的链接，单击它会跳转到JIra上的“Minecraft Launcher”的分类，你可以把使用过程中遇到的启动器问题在这里报告，等待开发者的修复。</p><p>除此之外，单<strong>击启动器左上角的用户名，在弹出的菜单中单击“帮助”，会弹出一个与Minecraft有关的帮助问题窗口，这里包括了Mojang官方的技术支持和基本的问题解答</strong>，例如“怎么玩Minecraft”、“疑难解答与帮助中心”、“Twitter上的Mojang支持”等等，下方还有爱好者社区的网站链接：Minecraft Wiki和Planet Minecraft，可以查询有关Minecraft的资料或是向社区寻求帮助。</p><p><img src=\"https://i.loli.net/2019/07/08/5d235364ad16866486.png\" alt=\"“帮助”界面，有一些基本的疑难解答\"></p><p>要说目前的新官方启动器有哪一方面是旧启动器比不上的，启动器内更换皮肤这一功能可以算一个，到<strong>目前的最新测试版本（2.1.5560）仍然无法更换皮肤</strong>，单击切换到“皮肤”选项卡，会提示你“请到minecraft.net更换皮肤，而皮肤设置将不久回到启动器内”，然而这个“不久”还有多长时间就不得而知了，<strong>不得不说Bugjump就是Bugjump，跳票和写特性还是很稳的#大雾</strong></p><p><img src=\"https://i.loli.net/2019/07/08/5d2353654d0e296728.png\" alt=\"目前不支持更换皮肤\"></p><p>有人可能会说，既然这个新官方启动器只是又一次换了个皮，加了一个“更新日志选项卡”，然后又重新组织了一遍功能的位置，也没有新增如安装Forge、OptiFine这样的功能，那要这个官方启动器有何用？<strong>其实这个全新的官方启动器不仅仅是Minecraft Java版的启动器，还将成为“Minecraft Universe”的启动器，Minecraft Universe，顾名思义即“Minecraft宇宙”，微软和Mojang决定打造一个“Minecraft宇宙”，以Minecraft这个知名IP为基础，创作出更多以Minecraft为内容的衍生游戏产品</strong>，例如Minecraft Earth和Minecraft Dungeons，前者为AR增强现实技术的Minecraft，在十周年前夕公布；后者则是一款以经典地牢爬虫为灵感来源的全新动作冒险游戏，也是第一款以Minecraft Universe为背景的游戏，Minecon Earth 2018中初次被提及，在今年的Xbox E3中公布了新的预告片和预计发售时间。<strong>从2009年Minecraft诞生以来，直到2019年，已经走过了10个年头，这一次Mojang和微软的决定将会让Minecraft向一个全新的方向发展。不知你注意到这个新启动器左侧的侧边菜单，目前只有两项：“新闻”和“Minecraft：Java Edition”，而在Minecraft Dungeons发售后，这里极有可能会增加一个“Minecraft Dungeons”的菜单项目，黑绿的配色让人联想到了Xbox的主题色，微软和Mojang的野心已经逐渐显现。毕竟，Minecraft已经不仅仅是一个游戏了。</strong></p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->","site":{"data":{}},"length":2970,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>众所周知，想要在Windows、macOS或Linux上玩Java版的Minecraft，那么一个启动器是打开游戏的必备条件之一（你不需要启动器？那你可能是启动命令行大佬，或者你启动了基岩版#滑稽）而很多人选择MC的启动器，一般都会直接避过来自Mojang的官方启动器，转而选择第三方（一般是爱好者）开发的启动器，例如HMCL、MultiMC、BMCL等等，究其原因，第三方启动器相比官方的启动器，在基础功能上添加了更多的便捷功能。也正因为如此，即便入了正版，也很少有人会去下载官启（购买正版获得的是对应的服务和权限）。而最近Mojang释出了全新的官方启动器，从这个新版启动器开始，我对官方启动器的印象也转变了不少。","more":"</p><p><img src=\"https://i.loli.net/2019/07/08/5d23537d0d45e16715.png\" alt=\"旧版的官方启动器界面，图源：Minecraft Wiki\"></p><p><strong>Mojang完全重做官方启动器，放弃使用Java语言编写的启动器是在2016年</strong>，当时的Mojang放出消息说新官启将会重做界面，并提供启动器内更换皮肤功能，在这个启动器开始测试后，Mojang也确实做到了这点。<strong>但是在国内，这个新的启动器仍然“不受待见”，启动慢、卡白屏、无法登录等等问题。而在2019年的五月下旬开始，Mojang开始了新一轮的官启改造，这一次又是改头换面、脱胎换骨，让人感觉这次Mojang真是用心了hhh。</strong></p><p><img src=\"https://i.loli.net/2019/07/08/5d23537fdfc3011881.png\" alt=\"新官启的登录界面\"></p><p>一开始先来放一张新官启的登录界面，<strong>这个背景图比之前那死板的登录界面好看多了</strong>。</p><p>登录进来之后，显示出来的是启动器的主界面了。不得不说，<strong>新官启的打开速度和反应速度都比之前快了不少</strong>，新官启的主界面分为四部分：侧边菜单项、上方的选项卡、下方的“启动游戏”和档案切换以及主界面的背景图；旧官启同样为四部分：顶栏、上方的选项卡、中间的滚动新闻和下方的“启动游戏”和档案管理。<strong>新官启的最大区别是将“新闻”这一栏目放到了侧边菜单项中，默认不展示，而非之前在加载主界面时会一并加载新闻</strong>。这一改动带来最大的好处就是<strong>极大缩短了启动器打开的时间</strong>，官方启动器展现出来的新闻内容大多在外网，在内地加载速度可想而知（里面还有YouTube…），这就导致了在完全与新闻服务器响应之前，启动器不会有其它的响应；而新启动器默认不在主界面加载新闻，启动时并不需要从新闻服务上获取数据，整体启动速度和反应快了不少，而且就算在侧边菜单中切换到“新闻”选项卡，加载速度也比旧官启快许多。而且新官启对中文字体进行了优化，微软雅黑成为了中文的默认字体，而非之前那万恶的宋体。<span style=\"background:#222;color:#fff\"><strong>所以，看在加载速度与启动速度方面上，放弃旧官启吧</strong>。</span></p><p><img src=\"https://i.loli.net/2019/07/08/5d23536d926dd75725.png\" alt=\"“新闻”界面\"><br><img src=\"https://i.loli.net/2019/07/08/5d23536c999f570850.png\" alt=\"依旧扎眼的“启动游戏”\"></p><p>主界面下方的绿色的“开始游戏”按钮依旧显眼，左侧是指定启动的游戏配置，而右侧则显示目前的账户名称，单击左侧的游戏配置可以切换其它的游戏配置。<strong>而启动器整体的黑绿配色更是增添了一种说不出的激情（emm）</strong></p><p>新官启的背景图，蜘蛛和小白以及末影人都来了，苦力怕在偷瞄，僵尸你在哪里2333</p><p><img src=\"https://i.loli.net/2019/07/08/5d23537f0885f89315.png\" alt=\"僵尸君你肿么了？\"></p><p>相比于之前的“新”官启，这次的新官启在“配置”选项卡中的改变并不算大，比较明显的改动是在每个配置文件项目的右侧加入了“启动游戏”的按钮，当鼠标指向一个配置时，就可以通过这个按钮来快速启动游戏。每个配置实例都可以进行设置编辑和复制，官方启动器自带的两个配置无法删除。<strong>值得一提的是，官方启动器目前的默认Java虚拟机分配内存大小从原来的1024MB增加到了2048MB，在不带大量mod的情况下，内存不足这一情况应该会比较少出现了</strong>。</p><p><img src=\"https://i.loli.net/2019/07/08/5d23536b09ab890889.png\" alt=\"“配置”选项卡界面\"><br><img src=\"https://i.loli.net/2019/07/08/5d235369bdd7527893.png\" alt=\"详细的配置设置窗口\"></p><p>新官启的另一显著变化是添加了“更新说明”选项卡，也就是Patch Notes，每一次的新更新内容都会在这里展示出来，不过需要注意的是，这里只展现每个大版本（如1.13、1.14）的更新内容，而小版本号（如1.14.x）的更新内容，需要单击右上方的“更多版本信息”来查看，这样就能在启动器内知晓每个大版本的全部更新内容了。</p><p><img src=\"https://i.loli.net/2019/07/08/5d2357395277411918.png\" alt=\"“更新说明”界面\"></p><p><strong>新官启的“设置”项目更加集中</strong>，相比于之前官启的设计：版本号展现在主界面左下角，账号切换在右上方，启动器设置在选项卡中这一设定，新官启的“启动器设置”、“账号管理”和“关于”都划归在“设置”选项卡中，避免了一头雾水的情况。当然，这一次的新官启和之前的新官启一样，都是<strong>支持中文</strong>的，这里感谢Crowdin上贡献翻译的各位志愿者。</p><p><img src=\"https://i.loli.net/2019/07/08/5d23536781e4b20536.png\" alt=\"“设置”中的“通用”类别\"><br><img src=\"https://i.loli.net/2019/07/08/5d235366e12c661737.png\" alt=\"“关于”界面，依赖库版本较新\"></p><p>在“关于”界面中可以看到，<strong>Bootstrap的版本还是比较新的</strong>，这一次Mojang和微软可算是上心了。而在“关于”界面的右上方，还有一个“报告启动器漏洞”的链接，单击它会跳转到JIra上的“Minecraft Launcher”的分类，你可以把使用过程中遇到的启动器问题在这里报告，等待开发者的修复。</p><p>除此之外，单<strong>击启动器左上角的用户名，在弹出的菜单中单击“帮助”，会弹出一个与Minecraft有关的帮助问题窗口，这里包括了Mojang官方的技术支持和基本的问题解答</strong>，例如“怎么玩Minecraft”、“疑难解答与帮助中心”、“Twitter上的Mojang支持”等等，下方还有爱好者社区的网站链接：Minecraft Wiki和Planet Minecraft，可以查询有关Minecraft的资料或是向社区寻求帮助。</p><p><img src=\"https://i.loli.net/2019/07/08/5d235364ad16866486.png\" alt=\"“帮助”界面，有一些基本的疑难解答\"></p><p>要说目前的新官方启动器有哪一方面是旧启动器比不上的，启动器内更换皮肤这一功能可以算一个，到<strong>目前的最新测试版本（2.1.5560）仍然无法更换皮肤</strong>，单击切换到“皮肤”选项卡，会提示你“请到minecraft.net更换皮肤，而皮肤设置将不久回到启动器内”，然而这个“不久”还有多长时间就不得而知了，<strong>不得不说Bugjump就是Bugjump，跳票和写特性还是很稳的#大雾</strong></p><p><img src=\"https://i.loli.net/2019/07/08/5d2353654d0e296728.png\" alt=\"目前不支持更换皮肤\"></p><p>有人可能会说，既然这个新官方启动器只是又一次换了个皮，加了一个“更新日志选项卡”，然后又重新组织了一遍功能的位置，也没有新增如安装Forge、OptiFine这样的功能，那要这个官方启动器有何用？<strong>其实这个全新的官方启动器不仅仅是Minecraft Java版的启动器，还将成为“Minecraft Universe”的启动器，Minecraft Universe，顾名思义即“Minecraft宇宙”，微软和Mojang决定打造一个“Minecraft宇宙”，以Minecraft这个知名IP为基础，创作出更多以Minecraft为内容的衍生游戏产品</strong>，例如Minecraft Earth和Minecraft Dungeons，前者为AR增强现实技术的Minecraft，在十周年前夕公布；后者则是一款以经典地牢爬虫为灵感来源的全新动作冒险游戏，也是第一款以Minecraft Universe为背景的游戏，Minecon Earth 2018中初次被提及，在今年的Xbox E3中公布了新的预告片和预计发售时间。<strong>从2009年Minecraft诞生以来，直到2019年，已经走过了10个年头，这一次Mojang和微软的决定将会让Minecraft向一个全新的方向发展。不知你注意到这个新启动器左侧的侧边菜单，目前只有两项：“新闻”和“Minecraft：Java Edition”，而在Minecraft Dungeons发售后，这里极有可能会增加一个“Minecraft Dungeons”的菜单项目，黑绿的配色让人联想到了Xbox的主题色，微软和Mojang的野心已经逐渐显现。毕竟，Minecraft已经不仅仅是一个游戏了。</strong></p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->"},{"title":"更换输入法有感","abbrlink":"50a214ed","date":"2019-05-02T11:47:56.000Z","_content":"\n自从初中二年级入了谷歌拼音输入法的坑后，我就被谷歌那惊为天人的高纠错率折服了，这个输入法一直陪伴我到大一，直到Google正式宣布Gboard支持中文输入，我才恋恋不舍地从谷歌拼音输入法切换到Gboard，所幸谷歌的超高纠错率键盘仍然保留了下来，但是大二寒假前夕的时候，Gboard的一次更新导致我好不容易攒下来的词库全部丢失，一股无名的邪火燃起，一气之下我删掉了Gboard。  <!--more-->  \n\n但是删掉之后我就立刻后悔了，甚至希望马上去Play商店再把它装回来，毕竟华为自带的定制版百度输入法实在是用不惯。借此机会，我也想体验一下那些国产输入法，来看看这些国内的输入法能否担当起替代Gboard的重任。  \n\n### 讯飞输入法：\n\n把Gboard卸掉，我首先想到的就是讯飞输入法，毕竟一分钟输入400字的广告也就只有它敢打。讯飞的语音输入一直是强项，也是它的主要卖点。借此机会我尝试了一下，识别准确率极高，只是偶尔会错一两个字，大部分时候的识别率甚至能达到百分之百。不过在公共场合，语音输入就不是太适合了，主要的输入方式还是敲击键盘来输入文字。然而讯飞的词库却是个硬伤，整句的联想情况不理想，而且纠错能力也欠几分火候，例如chang’jian，有时手快打成了ckang'jian，这时候讯飞的纠错就不能准确地识别出来，会直接当成c'kang'jian来对待，还需要我去逐字母地调整才行。  \n\n除此之外，讯飞的皮肤也是一大硬伤，由于讯飞的官方皮肤文档年久失修，很多皮肤或多或少都有点小问题，如果你是个强迫症的话大概会疯掉（我就快了），要说整体显示效果最好的，只有官方自带的那两套皮肤，一黑一百。平心而论，我个人更喜欢那套暗色的，有一种深邃的感觉（呃）。  \n\n当然，过了一个月，我最终还是删掉了讯飞输入法。  \n\n{% note default %}  \n\n**讯飞输入法告诉我：原来语音输入也可以这么带感，就像我用Gboard一口气敲完一整个长句一样。**  \n\n{% endnote %}\n\n### 百度输入法：\n\n删掉讯飞输入法，除了纠错和联想能力比较弱之外，还有一点就是输入法皮肤的问题，由于华为自带的是定制的百度输入法，再加上正巧看到百度输入法的皮肤，酷安的评论区经常能看到各式各样的百度输入法皮肤主题，出于好奇心我下了一个试试看。由于百度输入法的皮肤文档开放程度高，不少第三方皮肤都对输入法本身的功能做出了一些调整，比如将复制粘贴功能的快捷操作方式放到字母按键上，亦或是添加滑动操作键盘的方式（如打开表情面板或者隐藏键盘等等）可谓是花样百出目不暇接。  \n\n然后我就更换了皮肤主题，将默认主题替换成了Win10皮肤，一开始还是挺新鲜，但是体验一段时间后发现了不少问题：其一是因为皮肤导致输入键盘布局的改变，需要重新适应；其二是因为键盘布局的改变，一些原有的功能被作者加入的自定义手势代替，而手势的触发却不一定灵敏，有时候会出现滑动手势无效的情况，有时候操作太快又会出现误触；其三是更换的主题皮肤由于加入了动效，打字敲击键盘的时候会出现不跟手的情况，反应略慢。  \n\n之后我又换回默认皮肤，有些问题解决了。然而我发现输入法的功能菜单滑动异常卡顿，似乎是优化的缘故（这个emmm），不过云输入的情况和纠错的情况相比讯飞好了不少，虽然还是比不上Gboard和谷歌拼音输入法就是了（笑）。    \n\n{% note default %}\n\n**百度输入法告诉我：原来手机输入法的键盘皮肤也能玩出这么多的花样来。**  \n\n{% endnote %}\n\n### 搜狗输入法：  \n\n看不少体验文章都说搜狗的云输入和纠错不错，加上百度输入法使用了一段时间（也许是喜新厌旧？），之后我又换到搜狗，反正就是再迁移一次使用习惯就是了。然而换到搜狗，第一件事就是去搜狗输入法的应用界面看看（不是输入法键盘的界面），映入眼帘的是“精选新闻”，里面的内容就不说了（应该大概能猜到吧），而且还是在底部导航栏排在第一位，之后我滑动到皮肤专区，谁知搜狗居然报告页面加载失败和网络问题，我的无线网明明没有任何问题，之后我发现下载皮肤专区的主题时时不时就会出现网络故障导致的无法下载，解决方法也很有趣：当出现下载失败的对话框时，返回上一页，然后再进去，又会弹出失败，再返回去，如此往来三次，第四次再进去的时候就可以正常下载安装了，是不是很因吹斯汀？  \n\n然而用过百度输入法的皮肤，搜狗的皮肤在它面前只能算是战五渣，面对基本框架已经固定的搜狗输入法来说，皮肤能做的也就是改改背景，改改按钮图案了。其它的基本上也改不了。  \n\n折腾一番，接下来试试看搜狗的输入体验，一番打字下来，搜狗的云输入和百度似乎没什么明显的区别，不过搜狗输入法和讯飞还有百度不同的是，它支持滑行输入，这对于一个用惯了谷歌的滑行输入的人来说简直是天降甘露！虽然体验并木有谷歌那么好，但至少也要有啊（我可以不用，但你不能没有的真实写照）。另外相比较其它两个输入法，搜狗的手工纠错操作逻辑不太一样，并不能直接在候选拼音框中选择相类似的拼音，必须要在输入框里手动修改拼音才可以，而且切换不同的候选拼音的功能位置也十分难找，最后我发现要下拉展开的候选字框才能让其它的候选拼音展示出来，不得不说藏得可真隐蔽...  \n\n搜狗的输入体验虽然没有像其他人评价的那么好，但也不差。然而搜狗输入法的本职工作恐怕并不是一个单纯的输入法，我之前提到过，我打开搜狗输入法应用主界面的一瞬间，先看到的是所谓的“精选新闻”栏目，而后更新完之后，我在输入法的功能菜单里居然找到了“搜狗借钱“的功能，而且我发现搜狗输入法顶部的快捷功能栏不能修改位置排序，也不能增删功能项目的内容，也就是说这些功能都是固定的，既不能删也不能做任何修改，但是一个输入法，弹出“借钱”广告推广又是怎么回事？  \n\n{% note default %}  \n\n**搜狗输入法告诉我：一个不包含借钱功能的输入法，不是一个有理想有追求的输入法。**  \n\n{% endnote %}  \n\n### 又回到原点。\n\n将近四个月的时间，讯飞、百度、搜狗，这三个输入法在我的手机里就像是三个匆匆的过客一样，如果对比一下前三个部分，你会发现这三个部分按顺序字数越写越多，但它们终究像蜻蜓点水一样，没有留下更深刻的痕迹。\n\n我之前看过的电视剧《毕有财》里有一段台词，是金花离开时她的同伴对她说的话：地球是圆的，路也是圆的，走得再远你也会回到原点。  \n\n经过一番折腾，我最终还是装回了Gboard，又一次回到了最初的时候。  \n\n因为我发现，那些功能与我无关，我只需要一个单纯的输入法。  \n\n> 我不需要那些花里胡哨的皮肤主题，我只需要你能用最浅显易懂的图标和文字描述这个功能，让我能在瞬间反应过来；  \n\n> 我不需要那些热词新词，我只需要你能判断出我打出的字的意图，如果有错误，就请你纠正它；  \n\n> 我不需要那些包办一切的功能，我只需要你能专注地干好一件事情，做到极致；  \n\n> 我不需要输入法随时随地弹出状态栏消息来显示你的存在感，因为在指尖触及输入框的一瞬间，你作为输入法的存在感就已经出来了；  \n\n......  \n\n> Gboard没有那么多的皮肤主题，但是它用清爽的图标告诉我每个功能的用途，用色块区分出键位；  \n\n> Gboard没有那么多的新词热词，但是它会及时纠正我的错误，然后悄悄地把它改正过来，甚至都感觉不到这一切；  \n\n> Gboard没有那些能够包办一切的功能，但是它知道作为一个输入法，最重要的事情是如何将打字这一体验不断优化，让用户体验到指尖敲击的快感；  \n\n> Gboard没有也不需要那无处不在的存在感，因为它知道当用户单击输入框的时候，这才是真正需要它的时候。 \n\n......\n\n**就是这么的简单，但是往往在复杂的经历过后，才会回想一开始的简单和纯洁。**  \n\n**（完）**  \n\nEND","source":"_posts/更换输入法有感.md","raw":"---\ntitle: 更换输入法有感\nabbrlink: 50a214ed\ndate: 2019-05-02 19:47:56\ntags: [输入法, 百度, 讯飞, 搜狗, 随笔]\ncategories: 随笔 \n---\n\n自从初中二年级入了谷歌拼音输入法的坑后，我就被谷歌那惊为天人的高纠错率折服了，这个输入法一直陪伴我到大一，直到Google正式宣布Gboard支持中文输入，我才恋恋不舍地从谷歌拼音输入法切换到Gboard，所幸谷歌的超高纠错率键盘仍然保留了下来，但是大二寒假前夕的时候，Gboard的一次更新导致我好不容易攒下来的词库全部丢失，一股无名的邪火燃起，一气之下我删掉了Gboard。  <!--more-->  \n\n但是删掉之后我就立刻后悔了，甚至希望马上去Play商店再把它装回来，毕竟华为自带的定制版百度输入法实在是用不惯。借此机会，我也想体验一下那些国产输入法，来看看这些国内的输入法能否担当起替代Gboard的重任。  \n\n### 讯飞输入法：\n\n把Gboard卸掉，我首先想到的就是讯飞输入法，毕竟一分钟输入400字的广告也就只有它敢打。讯飞的语音输入一直是强项，也是它的主要卖点。借此机会我尝试了一下，识别准确率极高，只是偶尔会错一两个字，大部分时候的识别率甚至能达到百分之百。不过在公共场合，语音输入就不是太适合了，主要的输入方式还是敲击键盘来输入文字。然而讯飞的词库却是个硬伤，整句的联想情况不理想，而且纠错能力也欠几分火候，例如chang’jian，有时手快打成了ckang'jian，这时候讯飞的纠错就不能准确地识别出来，会直接当成c'kang'jian来对待，还需要我去逐字母地调整才行。  \n\n除此之外，讯飞的皮肤也是一大硬伤，由于讯飞的官方皮肤文档年久失修，很多皮肤或多或少都有点小问题，如果你是个强迫症的话大概会疯掉（我就快了），要说整体显示效果最好的，只有官方自带的那两套皮肤，一黑一百。平心而论，我个人更喜欢那套暗色的，有一种深邃的感觉（呃）。  \n\n当然，过了一个月，我最终还是删掉了讯飞输入法。  \n\n{% note default %}  \n\n**讯飞输入法告诉我：原来语音输入也可以这么带感，就像我用Gboard一口气敲完一整个长句一样。**  \n\n{% endnote %}\n\n### 百度输入法：\n\n删掉讯飞输入法，除了纠错和联想能力比较弱之外，还有一点就是输入法皮肤的问题，由于华为自带的是定制的百度输入法，再加上正巧看到百度输入法的皮肤，酷安的评论区经常能看到各式各样的百度输入法皮肤主题，出于好奇心我下了一个试试看。由于百度输入法的皮肤文档开放程度高，不少第三方皮肤都对输入法本身的功能做出了一些调整，比如将复制粘贴功能的快捷操作方式放到字母按键上，亦或是添加滑动操作键盘的方式（如打开表情面板或者隐藏键盘等等）可谓是花样百出目不暇接。  \n\n然后我就更换了皮肤主题，将默认主题替换成了Win10皮肤，一开始还是挺新鲜，但是体验一段时间后发现了不少问题：其一是因为皮肤导致输入键盘布局的改变，需要重新适应；其二是因为键盘布局的改变，一些原有的功能被作者加入的自定义手势代替，而手势的触发却不一定灵敏，有时候会出现滑动手势无效的情况，有时候操作太快又会出现误触；其三是更换的主题皮肤由于加入了动效，打字敲击键盘的时候会出现不跟手的情况，反应略慢。  \n\n之后我又换回默认皮肤，有些问题解决了。然而我发现输入法的功能菜单滑动异常卡顿，似乎是优化的缘故（这个emmm），不过云输入的情况和纠错的情况相比讯飞好了不少，虽然还是比不上Gboard和谷歌拼音输入法就是了（笑）。    \n\n{% note default %}\n\n**百度输入法告诉我：原来手机输入法的键盘皮肤也能玩出这么多的花样来。**  \n\n{% endnote %}\n\n### 搜狗输入法：  \n\n看不少体验文章都说搜狗的云输入和纠错不错，加上百度输入法使用了一段时间（也许是喜新厌旧？），之后我又换到搜狗，反正就是再迁移一次使用习惯就是了。然而换到搜狗，第一件事就是去搜狗输入法的应用界面看看（不是输入法键盘的界面），映入眼帘的是“精选新闻”，里面的内容就不说了（应该大概能猜到吧），而且还是在底部导航栏排在第一位，之后我滑动到皮肤专区，谁知搜狗居然报告页面加载失败和网络问题，我的无线网明明没有任何问题，之后我发现下载皮肤专区的主题时时不时就会出现网络故障导致的无法下载，解决方法也很有趣：当出现下载失败的对话框时，返回上一页，然后再进去，又会弹出失败，再返回去，如此往来三次，第四次再进去的时候就可以正常下载安装了，是不是很因吹斯汀？  \n\n然而用过百度输入法的皮肤，搜狗的皮肤在它面前只能算是战五渣，面对基本框架已经固定的搜狗输入法来说，皮肤能做的也就是改改背景，改改按钮图案了。其它的基本上也改不了。  \n\n折腾一番，接下来试试看搜狗的输入体验，一番打字下来，搜狗的云输入和百度似乎没什么明显的区别，不过搜狗输入法和讯飞还有百度不同的是，它支持滑行输入，这对于一个用惯了谷歌的滑行输入的人来说简直是天降甘露！虽然体验并木有谷歌那么好，但至少也要有啊（我可以不用，但你不能没有的真实写照）。另外相比较其它两个输入法，搜狗的手工纠错操作逻辑不太一样，并不能直接在候选拼音框中选择相类似的拼音，必须要在输入框里手动修改拼音才可以，而且切换不同的候选拼音的功能位置也十分难找，最后我发现要下拉展开的候选字框才能让其它的候选拼音展示出来，不得不说藏得可真隐蔽...  \n\n搜狗的输入体验虽然没有像其他人评价的那么好，但也不差。然而搜狗输入法的本职工作恐怕并不是一个单纯的输入法，我之前提到过，我打开搜狗输入法应用主界面的一瞬间，先看到的是所谓的“精选新闻”栏目，而后更新完之后，我在输入法的功能菜单里居然找到了“搜狗借钱“的功能，而且我发现搜狗输入法顶部的快捷功能栏不能修改位置排序，也不能增删功能项目的内容，也就是说这些功能都是固定的，既不能删也不能做任何修改，但是一个输入法，弹出“借钱”广告推广又是怎么回事？  \n\n{% note default %}  \n\n**搜狗输入法告诉我：一个不包含借钱功能的输入法，不是一个有理想有追求的输入法。**  \n\n{% endnote %}  \n\n### 又回到原点。\n\n将近四个月的时间，讯飞、百度、搜狗，这三个输入法在我的手机里就像是三个匆匆的过客一样，如果对比一下前三个部分，你会发现这三个部分按顺序字数越写越多，但它们终究像蜻蜓点水一样，没有留下更深刻的痕迹。\n\n我之前看过的电视剧《毕有财》里有一段台词，是金花离开时她的同伴对她说的话：地球是圆的，路也是圆的，走得再远你也会回到原点。  \n\n经过一番折腾，我最终还是装回了Gboard，又一次回到了最初的时候。  \n\n因为我发现，那些功能与我无关，我只需要一个单纯的输入法。  \n\n> 我不需要那些花里胡哨的皮肤主题，我只需要你能用最浅显易懂的图标和文字描述这个功能，让我能在瞬间反应过来；  \n\n> 我不需要那些热词新词，我只需要你能判断出我打出的字的意图，如果有错误，就请你纠正它；  \n\n> 我不需要那些包办一切的功能，我只需要你能专注地干好一件事情，做到极致；  \n\n> 我不需要输入法随时随地弹出状态栏消息来显示你的存在感，因为在指尖触及输入框的一瞬间，你作为输入法的存在感就已经出来了；  \n\n......  \n\n> Gboard没有那么多的皮肤主题，但是它用清爽的图标告诉我每个功能的用途，用色块区分出键位；  \n\n> Gboard没有那么多的新词热词，但是它会及时纠正我的错误，然后悄悄地把它改正过来，甚至都感觉不到这一切；  \n\n> Gboard没有那些能够包办一切的功能，但是它知道作为一个输入法，最重要的事情是如何将打字这一体验不断优化，让用户体验到指尖敲击的快感；  \n\n> Gboard没有也不需要那无处不在的存在感，因为它知道当用户单击输入框的时候，这才是真正需要它的时候。 \n\n......\n\n**就是这么的简单，但是往往在复杂的经历过后，才会回想一开始的简单和纯洁。**  \n\n**（完）**  \n\nEND","slug":"更换输入法有感","published":1,"updated":"2019-07-16T01:35:22.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3uq000v0wvcjmpjvktf","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>自从初中二年级入了谷歌拼音输入法的坑后，我就被谷歌那惊为天人的高纠错率折服了，这个输入法一直陪伴我到大一，直到Google正式宣布Gboard支持中文输入，我才恋恋不舍地从谷歌拼音输入法切换到Gboard，所幸谷歌的超高纠错率键盘仍然保留了下来，但是大二寒假前夕的时候，Gboard的一次更新导致我好不容易攒下来的词库全部丢失，一股无名的邪火燃起，一气之下我删掉了Gboard。<a id=\"more\"></a></p><p>但是删掉之后我就立刻后悔了，甚至希望马上去Play商店再把它装回来，毕竟华为自带的定制版百度输入法实在是用不惯。借此机会，我也想体验一下那些国产输入法，来看看这些国内的输入法能否担当起替代Gboard的重任。</p><h3 id=\"讯飞输入法：\"><a href=\"#讯飞输入法：\" class=\"headerlink\" title=\"讯飞输入法：\"></a>讯飞输入法：</h3><p>把Gboard卸掉，我首先想到的就是讯飞输入法，毕竟一分钟输入400字的广告也就只有它敢打。讯飞的语音输入一直是强项，也是它的主要卖点。借此机会我尝试了一下，识别准确率极高，只是偶尔会错一两个字，大部分时候的识别率甚至能达到百分之百。不过在公共场合，语音输入就不是太适合了，主要的输入方式还是敲击键盘来输入文字。然而讯飞的词库却是个硬伤，整句的联想情况不理想，而且纠错能力也欠几分火候，例如chang’jian，有时手快打成了ckang’jian，这时候讯飞的纠错就不能准确地识别出来，会直接当成c’kang’jian来对待，还需要我去逐字母地调整才行。</p><p>除此之外，讯飞的皮肤也是一大硬伤，由于讯飞的官方皮肤文档年久失修，很多皮肤或多或少都有点小问题，如果你是个强迫症的话大概会疯掉（我就快了），要说整体显示效果最好的，只有官方自带的那两套皮肤，一黑一百。平心而论，我个人更喜欢那套暗色的，有一种深邃的感觉（呃）。</p><p>当然，过了一个月，我最终还是删掉了讯飞输入法。</p><div class=\"note default\"><p><strong>讯飞输入法告诉我：原来语音输入也可以这么带感，就像我用Gboard一口气敲完一整个长句一样。</strong></p></div><h3 id=\"百度输入法：\"><a href=\"#百度输入法：\" class=\"headerlink\" title=\"百度输入法：\"></a>百度输入法：</h3><p>删掉讯飞输入法，除了纠错和联想能力比较弱之外，还有一点就是输入法皮肤的问题，由于华为自带的是定制的百度输入法，再加上正巧看到百度输入法的皮肤，酷安的评论区经常能看到各式各样的百度输入法皮肤主题，出于好奇心我下了一个试试看。由于百度输入法的皮肤文档开放程度高，不少第三方皮肤都对输入法本身的功能做出了一些调整，比如将复制粘贴功能的快捷操作方式放到字母按键上，亦或是添加滑动操作键盘的方式（如打开表情面板或者隐藏键盘等等）可谓是花样百出目不暇接。</p><p>然后我就更换了皮肤主题，将默认主题替换成了Win10皮肤，一开始还是挺新鲜，但是体验一段时间后发现了不少问题：其一是因为皮肤导致输入键盘布局的改变，需要重新适应；其二是因为键盘布局的改变，一些原有的功能被作者加入的自定义手势代替，而手势的触发却不一定灵敏，有时候会出现滑动手势无效的情况，有时候操作太快又会出现误触；其三是更换的主题皮肤由于加入了动效，打字敲击键盘的时候会出现不跟手的情况，反应略慢。</p><p>之后我又换回默认皮肤，有些问题解决了。然而我发现输入法的功能菜单滑动异常卡顿，似乎是优化的缘故（这个emmm），不过云输入的情况和纠错的情况相比讯飞好了不少，虽然还是比不上Gboard和谷歌拼音输入法就是了（笑）。</p><div class=\"note default\"><p><strong>百度输入法告诉我：原来手机输入法的键盘皮肤也能玩出这么多的花样来。</strong></p></div><h3 id=\"搜狗输入法：\"><a href=\"#搜狗输入法：\" class=\"headerlink\" title=\"搜狗输入法：\"></a>搜狗输入法：</h3><p>看不少体验文章都说搜狗的云输入和纠错不错，加上百度输入法使用了一段时间（也许是喜新厌旧？），之后我又换到搜狗，反正就是再迁移一次使用习惯就是了。然而换到搜狗，第一件事就是去搜狗输入法的应用界面看看（不是输入法键盘的界面），映入眼帘的是“精选新闻”，里面的内容就不说了（应该大概能猜到吧），而且还是在底部导航栏排在第一位，之后我滑动到皮肤专区，谁知搜狗居然报告页面加载失败和网络问题，我的无线网明明没有任何问题，之后我发现下载皮肤专区的主题时时不时就会出现网络故障导致的无法下载，解决方法也很有趣：当出现下载失败的对话框时，返回上一页，然后再进去，又会弹出失败，再返回去，如此往来三次，第四次再进去的时候就可以正常下载安装了，是不是很因吹斯汀？</p><p>然而用过百度输入法的皮肤，搜狗的皮肤在它面前只能算是战五渣，面对基本框架已经固定的搜狗输入法来说，皮肤能做的也就是改改背景，改改按钮图案了。其它的基本上也改不了。</p><p>折腾一番，接下来试试看搜狗的输入体验，一番打字下来，搜狗的云输入和百度似乎没什么明显的区别，不过搜狗输入法和讯飞还有百度不同的是，它支持滑行输入，这对于一个用惯了谷歌的滑行输入的人来说简直是天降甘露！虽然体验并木有谷歌那么好，但至少也要有啊（我可以不用，但你不能没有的真实写照）。另外相比较其它两个输入法，搜狗的手工纠错操作逻辑不太一样，并不能直接在候选拼音框中选择相类似的拼音，必须要在输入框里手动修改拼音才可以，而且切换不同的候选拼音的功能位置也十分难找，最后我发现要下拉展开的候选字框才能让其它的候选拼音展示出来，不得不说藏得可真隐蔽…</p><p>搜狗的输入体验虽然没有像其他人评价的那么好，但也不差。然而搜狗输入法的本职工作恐怕并不是一个单纯的输入法，我之前提到过，我打开搜狗输入法应用主界面的一瞬间，先看到的是所谓的“精选新闻”栏目，而后更新完之后，我在输入法的功能菜单里居然找到了“搜狗借钱“的功能，而且我发现搜狗输入法顶部的快捷功能栏不能修改位置排序，也不能增删功能项目的内容，也就是说这些功能都是固定的，既不能删也不能做任何修改，但是一个输入法，弹出“借钱”广告推广又是怎么回事？</p><div class=\"note default\"><p><strong>搜狗输入法告诉我：一个不包含借钱功能的输入法，不是一个有理想有追求的输入法。</strong></p></div><h3 id=\"又回到原点。\"><a href=\"#又回到原点。\" class=\"headerlink\" title=\"又回到原点。\"></a>又回到原点。</h3><p>将近四个月的时间，讯飞、百度、搜狗，这三个输入法在我的手机里就像是三个匆匆的过客一样，如果对比一下前三个部分，你会发现这三个部分按顺序字数越写越多，但它们终究像蜻蜓点水一样，没有留下更深刻的痕迹。</p><p>我之前看过的电视剧《毕有财》里有一段台词，是金花离开时她的同伴对她说的话：地球是圆的，路也是圆的，走得再远你也会回到原点。</p><p>经过一番折腾，我最终还是装回了Gboard，又一次回到了最初的时候。</p><p>因为我发现，那些功能与我无关，我只需要一个单纯的输入法。</p><blockquote><p>我不需要那些花里胡哨的皮肤主题，我只需要你能用最浅显易懂的图标和文字描述这个功能，让我能在瞬间反应过来；</p></blockquote><blockquote><p>我不需要那些热词新词，我只需要你能判断出我打出的字的意图，如果有错误，就请你纠正它；</p></blockquote><blockquote><p>我不需要那些包办一切的功能，我只需要你能专注地干好一件事情，做到极致；</p></blockquote><blockquote><p>我不需要输入法随时随地弹出状态栏消息来显示你的存在感，因为在指尖触及输入框的一瞬间，你作为输入法的存在感就已经出来了；</p></blockquote><p>……</p><blockquote><p>Gboard没有那么多的皮肤主题，但是它用清爽的图标告诉我每个功能的用途，用色块区分出键位；</p></blockquote><blockquote><p>Gboard没有那么多的新词热词，但是它会及时纠正我的错误，然后悄悄地把它改正过来，甚至都感觉不到这一切；</p></blockquote><blockquote><p>Gboard没有那些能够包办一切的功能，但是它知道作为一个输入法，最重要的事情是如何将打字这一体验不断优化，让用户体验到指尖敲击的快感；</p></blockquote><blockquote><p>Gboard没有也不需要那无处不在的存在感，因为它知道当用户单击输入框的时候，这才是真正需要它的时候。</p></blockquote><p>……</p><p><strong>就是这么的简单，但是往往在复杂的经历过后，才会回想一开始的简单和纯洁。</strong></p><p><strong>（完）</strong></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":2957,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>自从初中二年级入了谷歌拼音输入法的坑后，我就被谷歌那惊为天人的高纠错率折服了，这个输入法一直陪伴我到大一，直到Google正式宣布Gboard支持中文输入，我才恋恋不舍地从谷歌拼音输入法切换到Gboard，所幸谷歌的超高纠错率键盘仍然保留了下来，但是大二寒假前夕的时候，Gboard的一次更新导致我好不容易攒下来的词库全部丢失，一股无名的邪火燃起，一气之下我删掉了Gboard。","more":"</p><p>但是删掉之后我就立刻后悔了，甚至希望马上去Play商店再把它装回来，毕竟华为自带的定制版百度输入法实在是用不惯。借此机会，我也想体验一下那些国产输入法，来看看这些国内的输入法能否担当起替代Gboard的重任。</p><h3 id=\"讯飞输入法：\"><a href=\"#讯飞输入法：\" class=\"headerlink\" title=\"讯飞输入法：\"></a>讯飞输入法：</h3><p>把Gboard卸掉，我首先想到的就是讯飞输入法，毕竟一分钟输入400字的广告也就只有它敢打。讯飞的语音输入一直是强项，也是它的主要卖点。借此机会我尝试了一下，识别准确率极高，只是偶尔会错一两个字，大部分时候的识别率甚至能达到百分之百。不过在公共场合，语音输入就不是太适合了，主要的输入方式还是敲击键盘来输入文字。然而讯飞的词库却是个硬伤，整句的联想情况不理想，而且纠错能力也欠几分火候，例如chang’jian，有时手快打成了ckang’jian，这时候讯飞的纠错就不能准确地识别出来，会直接当成c’kang’jian来对待，还需要我去逐字母地调整才行。</p><p>除此之外，讯飞的皮肤也是一大硬伤，由于讯飞的官方皮肤文档年久失修，很多皮肤或多或少都有点小问题，如果你是个强迫症的话大概会疯掉（我就快了），要说整体显示效果最好的，只有官方自带的那两套皮肤，一黑一百。平心而论，我个人更喜欢那套暗色的，有一种深邃的感觉（呃）。</p><p>当然，过了一个月，我最终还是删掉了讯飞输入法。</p><div class=\"note default\"><p><strong>讯飞输入法告诉我：原来语音输入也可以这么带感，就像我用Gboard一口气敲完一整个长句一样。</strong></p></div><h3 id=\"百度输入法：\"><a href=\"#百度输入法：\" class=\"headerlink\" title=\"百度输入法：\"></a>百度输入法：</h3><p>删掉讯飞输入法，除了纠错和联想能力比较弱之外，还有一点就是输入法皮肤的问题，由于华为自带的是定制的百度输入法，再加上正巧看到百度输入法的皮肤，酷安的评论区经常能看到各式各样的百度输入法皮肤主题，出于好奇心我下了一个试试看。由于百度输入法的皮肤文档开放程度高，不少第三方皮肤都对输入法本身的功能做出了一些调整，比如将复制粘贴功能的快捷操作方式放到字母按键上，亦或是添加滑动操作键盘的方式（如打开表情面板或者隐藏键盘等等）可谓是花样百出目不暇接。</p><p>然后我就更换了皮肤主题，将默认主题替换成了Win10皮肤，一开始还是挺新鲜，但是体验一段时间后发现了不少问题：其一是因为皮肤导致输入键盘布局的改变，需要重新适应；其二是因为键盘布局的改变，一些原有的功能被作者加入的自定义手势代替，而手势的触发却不一定灵敏，有时候会出现滑动手势无效的情况，有时候操作太快又会出现误触；其三是更换的主题皮肤由于加入了动效，打字敲击键盘的时候会出现不跟手的情况，反应略慢。</p><p>之后我又换回默认皮肤，有些问题解决了。然而我发现输入法的功能菜单滑动异常卡顿，似乎是优化的缘故（这个emmm），不过云输入的情况和纠错的情况相比讯飞好了不少，虽然还是比不上Gboard和谷歌拼音输入法就是了（笑）。</p><div class=\"note default\"><p><strong>百度输入法告诉我：原来手机输入法的键盘皮肤也能玩出这么多的花样来。</strong></p></div><h3 id=\"搜狗输入法：\"><a href=\"#搜狗输入法：\" class=\"headerlink\" title=\"搜狗输入法：\"></a>搜狗输入法：</h3><p>看不少体验文章都说搜狗的云输入和纠错不错，加上百度输入法使用了一段时间（也许是喜新厌旧？），之后我又换到搜狗，反正就是再迁移一次使用习惯就是了。然而换到搜狗，第一件事就是去搜狗输入法的应用界面看看（不是输入法键盘的界面），映入眼帘的是“精选新闻”，里面的内容就不说了（应该大概能猜到吧），而且还是在底部导航栏排在第一位，之后我滑动到皮肤专区，谁知搜狗居然报告页面加载失败和网络问题，我的无线网明明没有任何问题，之后我发现下载皮肤专区的主题时时不时就会出现网络故障导致的无法下载，解决方法也很有趣：当出现下载失败的对话框时，返回上一页，然后再进去，又会弹出失败，再返回去，如此往来三次，第四次再进去的时候就可以正常下载安装了，是不是很因吹斯汀？</p><p>然而用过百度输入法的皮肤，搜狗的皮肤在它面前只能算是战五渣，面对基本框架已经固定的搜狗输入法来说，皮肤能做的也就是改改背景，改改按钮图案了。其它的基本上也改不了。</p><p>折腾一番，接下来试试看搜狗的输入体验，一番打字下来，搜狗的云输入和百度似乎没什么明显的区别，不过搜狗输入法和讯飞还有百度不同的是，它支持滑行输入，这对于一个用惯了谷歌的滑行输入的人来说简直是天降甘露！虽然体验并木有谷歌那么好，但至少也要有啊（我可以不用，但你不能没有的真实写照）。另外相比较其它两个输入法，搜狗的手工纠错操作逻辑不太一样，并不能直接在候选拼音框中选择相类似的拼音，必须要在输入框里手动修改拼音才可以，而且切换不同的候选拼音的功能位置也十分难找，最后我发现要下拉展开的候选字框才能让其它的候选拼音展示出来，不得不说藏得可真隐蔽…</p><p>搜狗的输入体验虽然没有像其他人评价的那么好，但也不差。然而搜狗输入法的本职工作恐怕并不是一个单纯的输入法，我之前提到过，我打开搜狗输入法应用主界面的一瞬间，先看到的是所谓的“精选新闻”栏目，而后更新完之后，我在输入法的功能菜单里居然找到了“搜狗借钱“的功能，而且我发现搜狗输入法顶部的快捷功能栏不能修改位置排序，也不能增删功能项目的内容，也就是说这些功能都是固定的，既不能删也不能做任何修改，但是一个输入法，弹出“借钱”广告推广又是怎么回事？</p><div class=\"note default\"><p><strong>搜狗输入法告诉我：一个不包含借钱功能的输入法，不是一个有理想有追求的输入法。</strong></p></div><h3 id=\"又回到原点。\"><a href=\"#又回到原点。\" class=\"headerlink\" title=\"又回到原点。\"></a>又回到原点。</h3><p>将近四个月的时间，讯飞、百度、搜狗，这三个输入法在我的手机里就像是三个匆匆的过客一样，如果对比一下前三个部分，你会发现这三个部分按顺序字数越写越多，但它们终究像蜻蜓点水一样，没有留下更深刻的痕迹。</p><p>我之前看过的电视剧《毕有财》里有一段台词，是金花离开时她的同伴对她说的话：地球是圆的，路也是圆的，走得再远你也会回到原点。</p><p>经过一番折腾，我最终还是装回了Gboard，又一次回到了最初的时候。</p><p>因为我发现，那些功能与我无关，我只需要一个单纯的输入法。</p><blockquote><p>我不需要那些花里胡哨的皮肤主题，我只需要你能用最浅显易懂的图标和文字描述这个功能，让我能在瞬间反应过来；</p></blockquote><blockquote><p>我不需要那些热词新词，我只需要你能判断出我打出的字的意图，如果有错误，就请你纠正它；</p></blockquote><blockquote><p>我不需要那些包办一切的功能，我只需要你能专注地干好一件事情，做到极致；</p></blockquote><blockquote><p>我不需要输入法随时随地弹出状态栏消息来显示你的存在感，因为在指尖触及输入框的一瞬间，你作为输入法的存在感就已经出来了；</p></blockquote><p>……</p><blockquote><p>Gboard没有那么多的皮肤主题，但是它用清爽的图标告诉我每个功能的用途，用色块区分出键位；</p></blockquote><blockquote><p>Gboard没有那么多的新词热词，但是它会及时纠正我的错误，然后悄悄地把它改正过来，甚至都感觉不到这一切；</p></blockquote><blockquote><p>Gboard没有那些能够包办一切的功能，但是它知道作为一个输入法，最重要的事情是如何将打字这一体验不断优化，让用户体验到指尖敲击的快感；</p></blockquote><blockquote><p>Gboard没有也不需要那无处不在的存在感，因为它知道当用户单击输入框的时候，这才是真正需要它的时候。</p></blockquote><p>……</p><p><strong>就是这么的简单，但是往往在复杂的经历过后，才会回想一开始的简单和纯洁。</strong></p><p><strong>（完）</strong></p><p>END</p><!-- rebuild by neat -->"},{"title":"解决百度爬虫的问题","abbrlink":"798cc8cb","date":"2019-03-28T00:26:24.000Z","_content":"\nHexo 是一个简单高效的博客框架，使用它可以很方便地建立一个属于自己的 Blog，而且寻找托管的服务提供方也很容易，Hexo + GitHub Pages 就可以很好地满足一个静态页面的托管了。又可以省下主机的钱，如果不需要自定义域名的话，那么连购买自定义域名的钱也可以省下来。但是用 GitHub Pages 服务来托管页面也不是一个完美的办法，比如百度爬虫的问题（BaiduSpider）。   <!--more-->   \n\n![弹出的错误信息](https://storage.live.com/items/5582C1D07E2893FB!133128?authkey=APiqr1tjl5KIc1Q)  \n\nGitHub 默认会阻拦百度爬虫来爬取自己的页面信息，如果使用百度 Spider 的用户代理来访问 GitHub Pages 上的页面，往往等待的是 403 Forbidden，这说明 GitHub 阻止了百度爬虫的访问请求，而原因则是跟之前的百度流量劫持有关。概括的说，有人将访问百度的流量恶意劫持到 GitHub，导致 GitHub 服务器过载几近瘫痪，再加上百度爬虫本身访问的频率较高，导致 GitHub 就彻底阻止了来自百度爬虫的流量。而且据 GitHub 官方客服的说法，基本上以后也不会有什么改变了。  \n\n![GitHub官方的回复](https://storage.live.com/items/5582C1D07E2893FB!133127?authkey=APiqr1tjl5KIc1Q)  \n\n这样各种解决方法应运而生，有使用 CDN 加速的，有使用自己的服务器进行搭建的，有用 nginx 搭反向代理的，但是无一例外都需要花钱，这跟一开始不想过多掏钱的初衷相违背，使用 Coding Pages 和 GitHub Pages “双修”，让国内线路访问 Coding，国外访问 GitHub 也是一种思路，但 Coding Pages 服务器三天一小崩，一周上不去的情况也不适合这样做（这也是目前我采用的方式）。然而并不是没有解决的方法，重点就是：不让百度的爬虫访问 GitHub 不就行了。  \n\n其实这跟使用 Coding Pages 和 GitHub Pages，利用前者搭建后者镜像站的原理一样，我们可以设置让百度的爬虫访问镜像站，而普通用户访问原有网站即可。之前我往域名解析记录里设置的是国内（包括百度爬虫）访问 Coding Pages，而海外解析到 GitHub Pages，那么**修改 Coding Pages 的解析范围为搜索引擎就行了**，以阿里云为例（我使用的是阿里云/万网的域名解析），比如下图这样做，**将 Coding Pages 的解析路线设置为“百度”，再将 GitHub Pages 的解析记录由“海外”修改为“默认”**：  \n\n修改 Coding Pages 的两项记录，将其中的解析记录更改为百度：    \n\n![改动图示1](https://storage.live.com/items/5582C1D07E2893FB!133133?authkey=APiqr1tjl5KIc1Q)    \n\n![改动图示2](https://storage.live.com/items/5582C1D07E2893FB!133132?authkey=APiqr1tjl5KIc1Q)\n\n接下来修改 GitHub Pages 的解析记录：  \n\n![改动图示3](https://storage.live.com/items/5582C1D07E2893FB!133139?authkey=APiqr1tjl5KIc1Q)  \n\n![改动图示4](https://storage.live.com/items/5582C1D07E2893FB!133138?authkey=APiqr1tjl5KIc1Q)  \n\n![改动图示5](https://storage.live.com/items/5582C1D07E2893FB!133140?authkey=APiqr1tjl5KIc1Q)  \n\n修改后的结果：  \n\n![最终显示结果](https://storage.live.com/items/5582C1D07E2893FB!133134?authkey=APiqr1tjl5KIc1Q)  \n\n确认无误后，保存！这样一来，等待一段时间，在解析记录更新后，就会按照一开始计划的那样，百度爬虫会去爬取镜像站 Coding Pages 上的页面，而用户在访问的时候会进入到 GitHub Pages 的页面，至少 GitHub Pages 的访问稳定性好多了，而且说实话，GitHub Pages 的域名解析速度并不慢，日用是没有太大问题的。最后放几张截图：  \n\n ![ping截图](https://storage.live.com/items/5582C1D07E2893FB!133131?authkey=APiqr1tjl5KIc1Q)   \n\n可以看到，ping 的结果和 nslookup 查询的结果都已经改变，默认访问会转向 GitHub Pages，而且 ping 的速度并不算太慢。  \n\n那么 Coding Pages 和百度 Spider 呢？  \n\n![结果图](https://storage.live.com/items/5582C1D07E2893FB!133130?authkey=APiqr1tjl5KIc1Q)\n\n点进去看一下：  \n\n![结果图详情](https://storage.live.com/items/5582C1D07E2893FB!133129?authkey=APiqr1tjl5KIc1Q)   \n\nEND","source":"_posts/解决百度爬虫的问题.md","raw":"---\ntitle: 解决百度爬虫的问题\ntags:\n  - Hexo\n  - 百度爬虫\ncategories: Hexo\nabbrlink: 798cc8cb\ndate: 2019-03-28 08:26:24\n---\n\nHexo 是一个简单高效的博客框架，使用它可以很方便地建立一个属于自己的 Blog，而且寻找托管的服务提供方也很容易，Hexo + GitHub Pages 就可以很好地满足一个静态页面的托管了。又可以省下主机的钱，如果不需要自定义域名的话，那么连购买自定义域名的钱也可以省下来。但是用 GitHub Pages 服务来托管页面也不是一个完美的办法，比如百度爬虫的问题（BaiduSpider）。   <!--more-->   \n\n![弹出的错误信息](https://storage.live.com/items/5582C1D07E2893FB!133128?authkey=APiqr1tjl5KIc1Q)  \n\nGitHub 默认会阻拦百度爬虫来爬取自己的页面信息，如果使用百度 Spider 的用户代理来访问 GitHub Pages 上的页面，往往等待的是 403 Forbidden，这说明 GitHub 阻止了百度爬虫的访问请求，而原因则是跟之前的百度流量劫持有关。概括的说，有人将访问百度的流量恶意劫持到 GitHub，导致 GitHub 服务器过载几近瘫痪，再加上百度爬虫本身访问的频率较高，导致 GitHub 就彻底阻止了来自百度爬虫的流量。而且据 GitHub 官方客服的说法，基本上以后也不会有什么改变了。  \n\n![GitHub官方的回复](https://storage.live.com/items/5582C1D07E2893FB!133127?authkey=APiqr1tjl5KIc1Q)  \n\n这样各种解决方法应运而生，有使用 CDN 加速的，有使用自己的服务器进行搭建的，有用 nginx 搭反向代理的，但是无一例外都需要花钱，这跟一开始不想过多掏钱的初衷相违背，使用 Coding Pages 和 GitHub Pages “双修”，让国内线路访问 Coding，国外访问 GitHub 也是一种思路，但 Coding Pages 服务器三天一小崩，一周上不去的情况也不适合这样做（这也是目前我采用的方式）。然而并不是没有解决的方法，重点就是：不让百度的爬虫访问 GitHub 不就行了。  \n\n其实这跟使用 Coding Pages 和 GitHub Pages，利用前者搭建后者镜像站的原理一样，我们可以设置让百度的爬虫访问镜像站，而普通用户访问原有网站即可。之前我往域名解析记录里设置的是国内（包括百度爬虫）访问 Coding Pages，而海外解析到 GitHub Pages，那么**修改 Coding Pages 的解析范围为搜索引擎就行了**，以阿里云为例（我使用的是阿里云/万网的域名解析），比如下图这样做，**将 Coding Pages 的解析路线设置为“百度”，再将 GitHub Pages 的解析记录由“海外”修改为“默认”**：  \n\n修改 Coding Pages 的两项记录，将其中的解析记录更改为百度：    \n\n![改动图示1](https://storage.live.com/items/5582C1D07E2893FB!133133?authkey=APiqr1tjl5KIc1Q)    \n\n![改动图示2](https://storage.live.com/items/5582C1D07E2893FB!133132?authkey=APiqr1tjl5KIc1Q)\n\n接下来修改 GitHub Pages 的解析记录：  \n\n![改动图示3](https://storage.live.com/items/5582C1D07E2893FB!133139?authkey=APiqr1tjl5KIc1Q)  \n\n![改动图示4](https://storage.live.com/items/5582C1D07E2893FB!133138?authkey=APiqr1tjl5KIc1Q)  \n\n![改动图示5](https://storage.live.com/items/5582C1D07E2893FB!133140?authkey=APiqr1tjl5KIc1Q)  \n\n修改后的结果：  \n\n![最终显示结果](https://storage.live.com/items/5582C1D07E2893FB!133134?authkey=APiqr1tjl5KIc1Q)  \n\n确认无误后，保存！这样一来，等待一段时间，在解析记录更新后，就会按照一开始计划的那样，百度爬虫会去爬取镜像站 Coding Pages 上的页面，而用户在访问的时候会进入到 GitHub Pages 的页面，至少 GitHub Pages 的访问稳定性好多了，而且说实话，GitHub Pages 的域名解析速度并不慢，日用是没有太大问题的。最后放几张截图：  \n\n ![ping截图](https://storage.live.com/items/5582C1D07E2893FB!133131?authkey=APiqr1tjl5KIc1Q)   \n\n可以看到，ping 的结果和 nslookup 查询的结果都已经改变，默认访问会转向 GitHub Pages，而且 ping 的速度并不算太慢。  \n\n那么 Coding Pages 和百度 Spider 呢？  \n\n![结果图](https://storage.live.com/items/5582C1D07E2893FB!133130?authkey=APiqr1tjl5KIc1Q)\n\n点进去看一下：  \n\n![结果图详情](https://storage.live.com/items/5582C1D07E2893FB!133129?authkey=APiqr1tjl5KIc1Q)   \n\nEND","slug":"解决百度爬虫的问题","published":1,"updated":"2019-07-13T13:28:10.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3ut000y0wvc6ltt2faj","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>Hexo 是一个简单高效的博客框架，使用它可以很方便地建立一个属于自己的 Blog，而且寻找托管的服务提供方也很容易，Hexo + GitHub Pages 就可以很好地满足一个静态页面的托管了。又可以省下主机的钱，如果不需要自定义域名的话，那么连购买自定义域名的钱也可以省下来。但是用 GitHub Pages 服务来托管页面也不是一个完美的办法，比如百度爬虫的问题（BaiduSpider）。<a id=\"more\"></a></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133128?authkey=APiqr1tjl5KIc1Q\" alt=\"弹出的错误信息\"></p><p>GitHub 默认会阻拦百度爬虫来爬取自己的页面信息，如果使用百度 Spider 的用户代理来访问 GitHub Pages 上的页面，往往等待的是 403 Forbidden，这说明 GitHub 阻止了百度爬虫的访问请求，而原因则是跟之前的百度流量劫持有关。概括的说，有人将访问百度的流量恶意劫持到 GitHub，导致 GitHub 服务器过载几近瘫痪，再加上百度爬虫本身访问的频率较高，导致 GitHub 就彻底阻止了来自百度爬虫的流量。而且据 GitHub 官方客服的说法，基本上以后也不会有什么改变了。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133127?authkey=APiqr1tjl5KIc1Q\" alt=\"GitHub官方的回复\"></p><p>这样各种解决方法应运而生，有使用 CDN 加速的，有使用自己的服务器进行搭建的，有用 nginx 搭反向代理的，但是无一例外都需要花钱，这跟一开始不想过多掏钱的初衷相违背，使用 Coding Pages 和 GitHub Pages “双修”，让国内线路访问 Coding，国外访问 GitHub 也是一种思路，但 Coding Pages 服务器三天一小崩，一周上不去的情况也不适合这样做（这也是目前我采用的方式）。然而并不是没有解决的方法，重点就是：不让百度的爬虫访问 GitHub 不就行了。</p><p>其实这跟使用 Coding Pages 和 GitHub Pages，利用前者搭建后者镜像站的原理一样，我们可以设置让百度的爬虫访问镜像站，而普通用户访问原有网站即可。之前我往域名解析记录里设置的是国内（包括百度爬虫）访问 Coding Pages，而海外解析到 GitHub Pages，那么<strong>修改 Coding Pages 的解析范围为搜索引擎就行了</strong>，以阿里云为例（我使用的是阿里云/万网的域名解析），比如下图这样做，<strong>将 Coding Pages 的解析路线设置为“百度”，再将 GitHub Pages 的解析记录由“海外”修改为“默认”</strong>：</p><p>修改 Coding Pages 的两项记录，将其中的解析记录更改为百度：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133133?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示1\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133132?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示2\"></p><p>接下来修改 GitHub Pages 的解析记录：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133139?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示3\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133138?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示4\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133140?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示5\"></p><p>修改后的结果：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133134?authkey=APiqr1tjl5KIc1Q\" alt=\"最终显示结果\"></p><p>确认无误后，保存！这样一来，等待一段时间，在解析记录更新后，就会按照一开始计划的那样，百度爬虫会去爬取镜像站 Coding Pages 上的页面，而用户在访问的时候会进入到 GitHub Pages 的页面，至少 GitHub Pages 的访问稳定性好多了，而且说实话，GitHub Pages 的域名解析速度并不慢，日用是没有太大问题的。最后放几张截图：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133131?authkey=APiqr1tjl5KIc1Q\" alt=\"ping截图\"></p><p>可以看到，ping 的结果和 nslookup 查询的结果都已经改变，默认访问会转向 GitHub Pages，而且 ping 的速度并不算太慢。</p><p>那么 Coding Pages 和百度 Spider 呢？</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133130?authkey=APiqr1tjl5KIc1Q\" alt=\"结果图\"></p><p>点进去看一下：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133129?authkey=APiqr1tjl5KIc1Q\" alt=\"结果图详情\"></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":1334,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>Hexo 是一个简单高效的博客框架，使用它可以很方便地建立一个属于自己的 Blog，而且寻找托管的服务提供方也很容易，Hexo + GitHub Pages 就可以很好地满足一个静态页面的托管了。又可以省下主机的钱，如果不需要自定义域名的话，那么连购买自定义域名的钱也可以省下来。但是用 GitHub Pages 服务来托管页面也不是一个完美的办法，比如百度爬虫的问题（BaiduSpider）。","more":"</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133128?authkey=APiqr1tjl5KIc1Q\" alt=\"弹出的错误信息\"></p><p>GitHub 默认会阻拦百度爬虫来爬取自己的页面信息，如果使用百度 Spider 的用户代理来访问 GitHub Pages 上的页面，往往等待的是 403 Forbidden，这说明 GitHub 阻止了百度爬虫的访问请求，而原因则是跟之前的百度流量劫持有关。概括的说，有人将访问百度的流量恶意劫持到 GitHub，导致 GitHub 服务器过载几近瘫痪，再加上百度爬虫本身访问的频率较高，导致 GitHub 就彻底阻止了来自百度爬虫的流量。而且据 GitHub 官方客服的说法，基本上以后也不会有什么改变了。</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133127?authkey=APiqr1tjl5KIc1Q\" alt=\"GitHub官方的回复\"></p><p>这样各种解决方法应运而生，有使用 CDN 加速的，有使用自己的服务器进行搭建的，有用 nginx 搭反向代理的，但是无一例外都需要花钱，这跟一开始不想过多掏钱的初衷相违背，使用 Coding Pages 和 GitHub Pages “双修”，让国内线路访问 Coding，国外访问 GitHub 也是一种思路，但 Coding Pages 服务器三天一小崩，一周上不去的情况也不适合这样做（这也是目前我采用的方式）。然而并不是没有解决的方法，重点就是：不让百度的爬虫访问 GitHub 不就行了。</p><p>其实这跟使用 Coding Pages 和 GitHub Pages，利用前者搭建后者镜像站的原理一样，我们可以设置让百度的爬虫访问镜像站，而普通用户访问原有网站即可。之前我往域名解析记录里设置的是国内（包括百度爬虫）访问 Coding Pages，而海外解析到 GitHub Pages，那么<strong>修改 Coding Pages 的解析范围为搜索引擎就行了</strong>，以阿里云为例（我使用的是阿里云/万网的域名解析），比如下图这样做，<strong>将 Coding Pages 的解析路线设置为“百度”，再将 GitHub Pages 的解析记录由“海外”修改为“默认”</strong>：</p><p>修改 Coding Pages 的两项记录，将其中的解析记录更改为百度：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133133?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示1\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133132?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示2\"></p><p>接下来修改 GitHub Pages 的解析记录：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133139?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示3\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133138?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示4\"></p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133140?authkey=APiqr1tjl5KIc1Q\" alt=\"改动图示5\"></p><p>修改后的结果：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133134?authkey=APiqr1tjl5KIc1Q\" alt=\"最终显示结果\"></p><p>确认无误后，保存！这样一来，等待一段时间，在解析记录更新后，就会按照一开始计划的那样，百度爬虫会去爬取镜像站 Coding Pages 上的页面，而用户在访问的时候会进入到 GitHub Pages 的页面，至少 GitHub Pages 的访问稳定性好多了，而且说实话，GitHub Pages 的域名解析速度并不慢，日用是没有太大问题的。最后放几张截图：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133131?authkey=APiqr1tjl5KIc1Q\" alt=\"ping截图\"></p><p>可以看到，ping 的结果和 nslookup 查询的结果都已经改变，默认访问会转向 GitHub Pages，而且 ping 的速度并不算太慢。</p><p>那么 Coding Pages 和百度 Spider 呢？</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133130?authkey=APiqr1tjl5KIc1Q\" alt=\"结果图\"></p><p>点进去看一下：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133129?authkey=APiqr1tjl5KIc1Q\" alt=\"结果图详情\"></p><p>END</p><!-- rebuild by neat -->"},{"title":"获得TrustedInstaller权限","abbrlink":"358c8d05","date":"2019-07-17T01:36:36.000Z","_content":"\n在Windows中，有时候需要访问一些系统重要文件夹，这时大概率会碰到比如“无权访问”的问题，尤其是在原版的Windows 7或更高版本的系统上。在Windows 10中，一些系统文件夹比如`Program Files`也被上了锁，还有存储着商店应用数据的`WindowsApps`文件夹，这个文件夹就必须要获得TrustedInstaller这样的权限组用户的权限才能访问，普通用户一般是访问不了的。如果必须要进去访问该怎么办？可以通过系统的“安全”选项卡来设置。<!--more-->  \n\n先按常规的普通用户权限来试图进入`WindowsApps`，看看是什么情况：\n\n![无法访问](https://i.loli.net/2019/07/17/5d2ec32b5f0bf96612.png)  \n\n如果单击“继续”呢，又会是什么情况？ \n\n![仍然无法访问...](https://i.loli.net/2019/07/17/5d2ec328339a686428.png) \n\n仍然是拒绝，提示**我们需要使用“安全”选项卡来修改**。  \n\n### 获取权限  \n\n要想更改所在的用户组，改变文件夹的所有者，我们需要先找到“安全”选项卡的位置。  \n\n首先在你想要更改用户组的文件夹上右键，弹出的菜单中单击“属性”，然后在弹出的“属性”窗口中单击“安全”选项卡。如下图所示：  \n\n![“属性”窗口-“安全”选项卡](https://i.loli.net/2019/07/17/5d2ec324d7d8f96884.png)\n\n在选项卡界面中找到“高级”按钮并单击，接下来会进入“高级安全设置”窗口。  \n\n有时候会发现在这个窗口中，“所有者”一栏显示为“无法显示当前所有者”，“权限”选项卡中提示我们“必须具有读取权限才能查看此对象属性，单击`继续`以尝试用管理权限执行此操作”的字样，下方会出现一个带盾牌图标的“继续”按钮，这表明目前的**用户组权限不够，需要提升到管理员权限。单击“继续”**，**取得管理员权限后**，如下图所示：  \n\n![取得管理员权限后](https://i.loli.net/2019/07/17/5d2ec3257cd1d71204.png)\n\n在“所有者”一栏中，所有者显示为TrustedInstaller，在“权限”选项卡中，“权限条目”没有属于当前普通用户的主体，为了能够访问该文件夹，我们需要添加新的用户主体并将所有者设置为我们自己。**在“所有者”一栏上，单击“更改”**。  \n\n![选择用户或组](https://i.loli.net/2019/07/17/5d2ec3244373045607.png)\n\n在新弹出的“选择用户或组”的对话框中，分为三部分：对象类型、查找位置和对象名称，其中对象类型默认为“用户、组或内置安全主体”不要修改；查找位置为你当前设备的名称，因此也不用修改；重点在最后一项上，单击下方的“高级”按钮，在弹出的窗口中单击“立即查找”，**在下面的列表中选择你所在的用户，单击选中它**，然后单击“确定”回到上一级窗口。  \n\n这时会在下方的“对象名称”中出现你所在用户组的名称，确认无误后，单击“确定”。保存所有的改动。  \n\n![示例图1](https://i.loli.net/2019/07/17/5d2ec326f10d033699.png)  \n![示例图2](https://i.loli.net/2019/07/17/5d2ec32399f1a82383.png)\n\n上面的所有者已经改变，确认无误后，再次单击下方的“确定”，修改完成。这次再试试访问`WindowsApps`这个文件夹。  \n\n![修改后的截图](https://i.loli.net/2019/07/17/5d2ec32792f9d49548.png)  \n![演示图，现在可以访问了](https://i.loli.net/2019/07/17/5d2ec32c74dd944445.gif)\n\n**如果弹出其它的对话框，选择“确定”即可。**  \n\n### 改回权限  \n\n**TrustedInstaller的用户组权限极高，不建议在平时正常使用时一直使用，在完成需要提权的操作后最好还是将受保护的文件夹改回到原来的用户组。**（当然你一直保持着也没问题）  \n\n在“高级安全设置”窗口中，单击“所有者”右侧的“更改”按钮，在弹出的对话框中将光标定位到“对象名称”的输入框中，输入`NT SERVICE\\TrustedInstaller`然后单击右侧的“检查名称”，这时会自动识别为TrustedInstaller。  \n\n{% note warning %}  \n\n注意：不可以直接输入TrustedInstaller，系统会提示找不到对应的名称，**必须输入`NT SERVICE\\TrustedInstaller`才能识别！**  \n\n{% endnote %}  \n\n正确识别后，单击“确定”保存修改。返回上一级窗口后，再单击“确定”，**如果出现“可能会造成文件夹和文件继承权限”之类的提示信息，全部单击“取消”，然后关闭窗口**。  \n\n### TrustedInstaller是什么  \n\nTrustedInstaller是从Windows Vista开始出现的一个内置安全主体，为[Windows](https://baike.baidu.com/item/Windows/165458)系统中众多系统内置安全主体中的一个，本身是系统重要服务，用户无法直接在此服务的上下文中运行程序或另一个[服务](https://baike.baidu.com/item/服务/10393131)。它是操作系统上用来对系统进行维护、更新等操作的组。它的SID是S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464。TrustedInstaller权限的意义是用来防止程序或用户无意或恶意破坏系统文件。 这个安全主体本身是一个服务，名称为：Windows Modules Installer。  \n\n<style>div.post-block br {display: none}</style>\n\n\n","source":"_posts/获得TrustedInstaller权限.md","raw":"---\ntitle: 获得TrustedInstaller权限\nabbrlink: 358c8d05\ndate: 2019-07-17 09:36:36\ntags: [Windows, TrustedInstaller]\ncategories: Windows\n---\n\n在Windows中，有时候需要访问一些系统重要文件夹，这时大概率会碰到比如“无权访问”的问题，尤其是在原版的Windows 7或更高版本的系统上。在Windows 10中，一些系统文件夹比如`Program Files`也被上了锁，还有存储着商店应用数据的`WindowsApps`文件夹，这个文件夹就必须要获得TrustedInstaller这样的权限组用户的权限才能访问，普通用户一般是访问不了的。如果必须要进去访问该怎么办？可以通过系统的“安全”选项卡来设置。<!--more-->  \n\n先按常规的普通用户权限来试图进入`WindowsApps`，看看是什么情况：\n\n![无法访问](https://i.loli.net/2019/07/17/5d2ec32b5f0bf96612.png)  \n\n如果单击“继续”呢，又会是什么情况？ \n\n![仍然无法访问...](https://i.loli.net/2019/07/17/5d2ec328339a686428.png) \n\n仍然是拒绝，提示**我们需要使用“安全”选项卡来修改**。  \n\n### 获取权限  \n\n要想更改所在的用户组，改变文件夹的所有者，我们需要先找到“安全”选项卡的位置。  \n\n首先在你想要更改用户组的文件夹上右键，弹出的菜单中单击“属性”，然后在弹出的“属性”窗口中单击“安全”选项卡。如下图所示：  \n\n![“属性”窗口-“安全”选项卡](https://i.loli.net/2019/07/17/5d2ec324d7d8f96884.png)\n\n在选项卡界面中找到“高级”按钮并单击，接下来会进入“高级安全设置”窗口。  \n\n有时候会发现在这个窗口中，“所有者”一栏显示为“无法显示当前所有者”，“权限”选项卡中提示我们“必须具有读取权限才能查看此对象属性，单击`继续`以尝试用管理权限执行此操作”的字样，下方会出现一个带盾牌图标的“继续”按钮，这表明目前的**用户组权限不够，需要提升到管理员权限。单击“继续”**，**取得管理员权限后**，如下图所示：  \n\n![取得管理员权限后](https://i.loli.net/2019/07/17/5d2ec3257cd1d71204.png)\n\n在“所有者”一栏中，所有者显示为TrustedInstaller，在“权限”选项卡中，“权限条目”没有属于当前普通用户的主体，为了能够访问该文件夹，我们需要添加新的用户主体并将所有者设置为我们自己。**在“所有者”一栏上，单击“更改”**。  \n\n![选择用户或组](https://i.loli.net/2019/07/17/5d2ec3244373045607.png)\n\n在新弹出的“选择用户或组”的对话框中，分为三部分：对象类型、查找位置和对象名称，其中对象类型默认为“用户、组或内置安全主体”不要修改；查找位置为你当前设备的名称，因此也不用修改；重点在最后一项上，单击下方的“高级”按钮，在弹出的窗口中单击“立即查找”，**在下面的列表中选择你所在的用户，单击选中它**，然后单击“确定”回到上一级窗口。  \n\n这时会在下方的“对象名称”中出现你所在用户组的名称，确认无误后，单击“确定”。保存所有的改动。  \n\n![示例图1](https://i.loli.net/2019/07/17/5d2ec326f10d033699.png)  \n![示例图2](https://i.loli.net/2019/07/17/5d2ec32399f1a82383.png)\n\n上面的所有者已经改变，确认无误后，再次单击下方的“确定”，修改完成。这次再试试访问`WindowsApps`这个文件夹。  \n\n![修改后的截图](https://i.loli.net/2019/07/17/5d2ec32792f9d49548.png)  \n![演示图，现在可以访问了](https://i.loli.net/2019/07/17/5d2ec32c74dd944445.gif)\n\n**如果弹出其它的对话框，选择“确定”即可。**  \n\n### 改回权限  \n\n**TrustedInstaller的用户组权限极高，不建议在平时正常使用时一直使用，在完成需要提权的操作后最好还是将受保护的文件夹改回到原来的用户组。**（当然你一直保持着也没问题）  \n\n在“高级安全设置”窗口中，单击“所有者”右侧的“更改”按钮，在弹出的对话框中将光标定位到“对象名称”的输入框中，输入`NT SERVICE\\TrustedInstaller`然后单击右侧的“检查名称”，这时会自动识别为TrustedInstaller。  \n\n{% note warning %}  \n\n注意：不可以直接输入TrustedInstaller，系统会提示找不到对应的名称，**必须输入`NT SERVICE\\TrustedInstaller`才能识别！**  \n\n{% endnote %}  \n\n正确识别后，单击“确定”保存修改。返回上一级窗口后，再单击“确定”，**如果出现“可能会造成文件夹和文件继承权限”之类的提示信息，全部单击“取消”，然后关闭窗口**。  \n\n### TrustedInstaller是什么  \n\nTrustedInstaller是从Windows Vista开始出现的一个内置安全主体，为[Windows](https://baike.baidu.com/item/Windows/165458)系统中众多系统内置安全主体中的一个，本身是系统重要服务，用户无法直接在此服务的上下文中运行程序或另一个[服务](https://baike.baidu.com/item/服务/10393131)。它是操作系统上用来对系统进行维护、更新等操作的组。它的SID是S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464。TrustedInstaller权限的意义是用来防止程序或用户无意或恶意破坏系统文件。 这个安全主体本身是一个服务，名称为：Windows Modules Installer。  \n\n<style>div.post-block br {display: none}</style>\n\n\n","slug":"获得TrustedInstaller权限","published":1,"updated":"2019-07-17T06:56:33.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3uv00110wvc7k32jb39","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>在Windows中，有时候需要访问一些系统重要文件夹，这时大概率会碰到比如“无权访问”的问题，尤其是在原版的Windows 7或更高版本的系统上。在Windows 10中，一些系统文件夹比如<code>Program Files</code>也被上了锁，还有存储着商店应用数据的<code>WindowsApps</code>文件夹，这个文件夹就必须要获得TrustedInstaller这样的权限组用户的权限才能访问，普通用户一般是访问不了的。如果必须要进去访问该怎么办？可以通过系统的“安全”选项卡来设置。<a id=\"more\"></a></p><p>先按常规的普通用户权限来试图进入<code>WindowsApps</code>，看看是什么情况：</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec32b5f0bf96612.png\" alt=\"无法访问\"></p><p>如果单击“继续”呢，又会是什么情况？</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec328339a686428.png\" alt=\"仍然无法访问...\"></p><p>仍然是拒绝，提示<strong>我们需要使用“安全”选项卡来修改</strong>。</p><h3 id=\"获取权限\"><a href=\"#获取权限\" class=\"headerlink\" title=\"获取权限\"></a>获取权限</h3><p>要想更改所在的用户组，改变文件夹的所有者，我们需要先找到“安全”选项卡的位置。</p><p>首先在你想要更改用户组的文件夹上右键，弹出的菜单中单击“属性”，然后在弹出的“属性”窗口中单击“安全”选项卡。如下图所示：</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec324d7d8f96884.png\" alt=\"“属性”窗口-“安全”选项卡\"></p><p>在选项卡界面中找到“高级”按钮并单击，接下来会进入“高级安全设置”窗口。</p><p>有时候会发现在这个窗口中，“所有者”一栏显示为“无法显示当前所有者”，“权限”选项卡中提示我们“必须具有读取权限才能查看此对象属性，单击<code>继续</code>以尝试用管理权限执行此操作”的字样，下方会出现一个带盾牌图标的“继续”按钮，这表明目前的<strong>用户组权限不够，需要提升到管理员权限。单击“继续”</strong>，<strong>取得管理员权限后</strong>，如下图所示：</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec3257cd1d71204.png\" alt=\"取得管理员权限后\"></p><p>在“所有者”一栏中，所有者显示为TrustedInstaller，在“权限”选项卡中，“权限条目”没有属于当前普通用户的主体，为了能够访问该文件夹，我们需要添加新的用户主体并将所有者设置为我们自己。<strong>在“所有者”一栏上，单击“更改”</strong>。</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec3244373045607.png\" alt=\"选择用户或组\"></p><p>在新弹出的“选择用户或组”的对话框中，分为三部分：对象类型、查找位置和对象名称，其中对象类型默认为“用户、组或内置安全主体”不要修改；查找位置为你当前设备的名称，因此也不用修改；重点在最后一项上，单击下方的“高级”按钮，在弹出的窗口中单击“立即查找”，<strong>在下面的列表中选择你所在的用户，单击选中它</strong>，然后单击“确定”回到上一级窗口。</p><p>这时会在下方的“对象名称”中出现你所在用户组的名称，确认无误后，单击“确定”。保存所有的改动。</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec326f10d033699.png\" alt=\"示例图1\"><br><img src=\"https://i.loli.net/2019/07/17/5d2ec32399f1a82383.png\" alt=\"示例图2\"></p><p>上面的所有者已经改变，确认无误后，再次单击下方的“确定”，修改完成。这次再试试访问<code>WindowsApps</code>这个文件夹。</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec32792f9d49548.png\" alt=\"修改后的截图\"><br><img src=\"https://i.loli.net/2019/07/17/5d2ec32c74dd944445.gif\" alt=\"演示图，现在可以访问了\"></p><p><strong>如果弹出其它的对话框，选择“确定”即可。</strong></p><h3 id=\"改回权限\"><a href=\"#改回权限\" class=\"headerlink\" title=\"改回权限\"></a>改回权限</h3><p><strong>TrustedInstaller的用户组权限极高，不建议在平时正常使用时一直使用，在完成需要提权的操作后最好还是将受保护的文件夹改回到原来的用户组。</strong>（当然你一直保持着也没问题）</p><p>在“高级安全设置”窗口中，单击“所有者”右侧的“更改”按钮，在弹出的对话框中将光标定位到“对象名称”的输入框中，输入<code>NT SERVICE\\TrustedInstaller</code>然后单击右侧的“检查名称”，这时会自动识别为TrustedInstaller。</p><div class=\"note warning\"><p>注意：不可以直接输入TrustedInstaller，系统会提示找不到对应的名称，<strong>必须输入<code>NT SERVICE\\TrustedInstaller</code>才能识别！</strong></p></div><p>正确识别后，单击“确定”保存修改。返回上一级窗口后，再单击“确定”，<strong>如果出现“可能会造成文件夹和文件继承权限”之类的提示信息，全部单击“取消”，然后关闭窗口</strong>。</p><h3 id=\"TrustedInstaller是什么\"><a href=\"#TrustedInstaller是什么\" class=\"headerlink\" title=\"TrustedInstaller是什么\"></a>TrustedInstaller是什么</h3><p>TrustedInstaller是从Windows Vista开始出现的一个内置安全主体，为<a href=\"https://baike.baidu.com/item/Windows/165458\" target=\"_blank\" rel=\"noopener\">Windows</a>系统中众多系统内置安全主体中的一个，本身是系统重要服务，用户无法直接在此服务的上下文中运行程序或另一个<a href=\"https://baike.baidu.com/item/服务/10393131\" target=\"_blank\" rel=\"noopener\">服务</a>。它是操作系统上用来对系统进行维护、更新等操作的组。它的SID是S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464。TrustedInstaller权限的意义是用来防止程序或用户无意或恶意破坏系统文件。 这个安全主体本身是一个服务，名称为：Windows Modules Installer。</p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->","site":{"data":{}},"length":1719,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><p>在Windows中，有时候需要访问一些系统重要文件夹，这时大概率会碰到比如“无权访问”的问题，尤其是在原版的Windows 7或更高版本的系统上。在Windows 10中，一些系统文件夹比如<code>Program Files</code>也被上了锁，还有存储着商店应用数据的<code>WindowsApps</code>文件夹，这个文件夹就必须要获得TrustedInstaller这样的权限组用户的权限才能访问，普通用户一般是访问不了的。如果必须要进去访问该怎么办？可以通过系统的“安全”选项卡来设置。","more":"</p><p>先按常规的普通用户权限来试图进入<code>WindowsApps</code>，看看是什么情况：</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec32b5f0bf96612.png\" alt=\"无法访问\"></p><p>如果单击“继续”呢，又会是什么情况？</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec328339a686428.png\" alt=\"仍然无法访问...\"></p><p>仍然是拒绝，提示<strong>我们需要使用“安全”选项卡来修改</strong>。</p><h3 id=\"获取权限\"><a href=\"#获取权限\" class=\"headerlink\" title=\"获取权限\"></a>获取权限</h3><p>要想更改所在的用户组，改变文件夹的所有者，我们需要先找到“安全”选项卡的位置。</p><p>首先在你想要更改用户组的文件夹上右键，弹出的菜单中单击“属性”，然后在弹出的“属性”窗口中单击“安全”选项卡。如下图所示：</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec324d7d8f96884.png\" alt=\"“属性”窗口-“安全”选项卡\"></p><p>在选项卡界面中找到“高级”按钮并单击，接下来会进入“高级安全设置”窗口。</p><p>有时候会发现在这个窗口中，“所有者”一栏显示为“无法显示当前所有者”，“权限”选项卡中提示我们“必须具有读取权限才能查看此对象属性，单击<code>继续</code>以尝试用管理权限执行此操作”的字样，下方会出现一个带盾牌图标的“继续”按钮，这表明目前的<strong>用户组权限不够，需要提升到管理员权限。单击“继续”</strong>，<strong>取得管理员权限后</strong>，如下图所示：</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec3257cd1d71204.png\" alt=\"取得管理员权限后\"></p><p>在“所有者”一栏中，所有者显示为TrustedInstaller，在“权限”选项卡中，“权限条目”没有属于当前普通用户的主体，为了能够访问该文件夹，我们需要添加新的用户主体并将所有者设置为我们自己。<strong>在“所有者”一栏上，单击“更改”</strong>。</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec3244373045607.png\" alt=\"选择用户或组\"></p><p>在新弹出的“选择用户或组”的对话框中，分为三部分：对象类型、查找位置和对象名称，其中对象类型默认为“用户、组或内置安全主体”不要修改；查找位置为你当前设备的名称，因此也不用修改；重点在最后一项上，单击下方的“高级”按钮，在弹出的窗口中单击“立即查找”，<strong>在下面的列表中选择你所在的用户，单击选中它</strong>，然后单击“确定”回到上一级窗口。</p><p>这时会在下方的“对象名称”中出现你所在用户组的名称，确认无误后，单击“确定”。保存所有的改动。</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec326f10d033699.png\" alt=\"示例图1\"><br><img src=\"https://i.loli.net/2019/07/17/5d2ec32399f1a82383.png\" alt=\"示例图2\"></p><p>上面的所有者已经改变，确认无误后，再次单击下方的“确定”，修改完成。这次再试试访问<code>WindowsApps</code>这个文件夹。</p><p><img src=\"https://i.loli.net/2019/07/17/5d2ec32792f9d49548.png\" alt=\"修改后的截图\"><br><img src=\"https://i.loli.net/2019/07/17/5d2ec32c74dd944445.gif\" alt=\"演示图，现在可以访问了\"></p><p><strong>如果弹出其它的对话框，选择“确定”即可。</strong></p><h3 id=\"改回权限\"><a href=\"#改回权限\" class=\"headerlink\" title=\"改回权限\"></a>改回权限</h3><p><strong>TrustedInstaller的用户组权限极高，不建议在平时正常使用时一直使用，在完成需要提权的操作后最好还是将受保护的文件夹改回到原来的用户组。</strong>（当然你一直保持着也没问题）</p><p>在“高级安全设置”窗口中，单击“所有者”右侧的“更改”按钮，在弹出的对话框中将光标定位到“对象名称”的输入框中，输入<code>NT SERVICE\\TrustedInstaller</code>然后单击右侧的“检查名称”，这时会自动识别为TrustedInstaller。</p><div class=\"note warning\"><p>注意：不可以直接输入TrustedInstaller，系统会提示找不到对应的名称，<strong>必须输入<code>NT SERVICE\\TrustedInstaller</code>才能识别！</strong></p></div><p>正确识别后，单击“确定”保存修改。返回上一级窗口后，再单击“确定”，<strong>如果出现“可能会造成文件夹和文件继承权限”之类的提示信息，全部单击“取消”，然后关闭窗口</strong>。</p><h3 id=\"TrustedInstaller是什么\"><a href=\"#TrustedInstaller是什么\" class=\"headerlink\" title=\"TrustedInstaller是什么\"></a>TrustedInstaller是什么</h3><p>TrustedInstaller是从Windows Vista开始出现的一个内置安全主体，为<a href=\"https://baike.baidu.com/item/Windows/165458\" target=\"_blank\" rel=\"noopener\">Windows</a>系统中众多系统内置安全主体中的一个，本身是系统重要服务，用户无法直接在此服务的上下文中运行程序或另一个<a href=\"https://baike.baidu.com/item/服务/10393131\" target=\"_blank\" rel=\"noopener\">服务</a>。它是操作系统上用来对系统进行维护、更新等操作的组。它的SID是S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464。TrustedInstaller权限的意义是用来防止程序或用户无意或恶意破坏系统文件。 这个安全主体本身是一个服务，名称为：Windows Modules Installer。</p><style>div.post-block br{display:none}</style><!-- rebuild by neat -->"},{"title":"让 OneDrive 也具有同步特性","abbrlink":"eb5a6499","date":"2018-11-23T10:11:06.000Z","_content":"### 动机\n\n11 月份刚刚经历过期中考试，期间看了看存放在本地的课程资料，已经存了有不下 1 个 G，而我在 OneDrive 上也存放了大量的课程资料，其中很大一部分是为了能够在其它设备上也能查阅。这就提出了一个“同步”的需求。然而微软的操作至今让不少人为之费解：**OneDrive 被微软定义为“同步盘”，却不具备同步盘应该有的一个重要特性，那就是文件自动实时同步**。到目前为止，**如果你想让你的本地文件能够在 OneDrive 上自动同步，那么唯一的方法就是将这个文件放入 OneDrive 在此电脑的本地文件夹位置，然后 OneDrive 才能够识别此文件并开始上传和同步**。这样的操作麻烦不说（每次都要手动移动文件），还有可能因为一时疏忽忘记掉。  <!--more-->  \n\n![7cd83d85fdaa0e9d404abf390711b8bc.jpg](https://i.loli.net/2018/11/23/5bf7fa80b765e.jpg)\n\n期间也尝试了不少同步盘软件，国内坚果云做的非常不错，不仅具有同步盘的特性，由于其服务器在国内，速度自然没得说，缺点就是空间和每月同步流量较少，但如果你只是需要同步一些普通的文档等，这些流量和空间已经足够了；而国外 DropBox 不失为一个好的选择，然而它的缺点也跟坚果云一样，除此之外由于众所周知的原因，DropBox 服务在国内必须要科学上网才能正常访问，如果你不是 24 小时全天挂梯子，那体验定会大打折扣，况且作为将 OneDrive 引荐奖励全部刷满的我来说，还舍不得那 25 个 G 的免费空间（15G+10G），既能存储一些个人文件，又能当同步盘用，可谓一举两得。  \n\n**在继续之前，还有两点要提：**  \n\n>1. OneDrive 的客户端可以正常访问，但是在国内无法访问 OneDrive 的网页端（解决方法：挂梯子、改 hosts 或 DNS 均可）  \n>2. OneDrive 的上传速度跟你所在的当地运营商有关，如果访问速度过慢，你可能就要怀疑一下了（我这里，包括在学校还好）  \n\n接下来，就是这一操作的主角：`mklink` \n\n### 链接目录 - mklink  \n\n粗略来说，**mklink 在两个文件（夹）之间创建一种“链接”的关系**，我们可以用这样的方式来达到让 OneDrive 自动实时同步的目的。  \n\n**关于 mklink 命令的介绍：（图片来源：微软 IT 支持中心）**  \n\n![2018-11-23_183408.png](https://i.loli.net/2018/11/23/5bf7d81e5f2a0.png)\n\n跟其它大多数命令一样，**mklink 也有自己的功能参数，例如`mklink /d`,`mklink /j`等**，用一张表格来说明这些命令参数的意义：  \n\n|    命令参数    |                        参数意义                        |\n| :------------: | :----------------------------------------------------: |\n|       /d       | 创建一个符号链接，在缺省情况下，默认会创建文件“软”链接 |\n|       /h       |                 在硬盘上建立一个硬链接                 |\n|       /j       |                    创建一个目录链接                    |\n|  &lt;link&gt;  |                指定要创建的符号链接名称                |\n| &lt;target&gt; |   指定新符号链接的参考位置（绝对位置或相对位置均可）   |\n|       /?       |                      显示命令帮助                      |\n\n举例来说，如果要将 D 盘下的 MyDocs 文件夹和位于根目录的 Documents 文件夹建立链接，应该这样键入（参考）  \n\n```\nmklink /d \\MyDocs \\Users\\User1\\Documents\n```\n\n这样做，就建立了一个符号链接，`D:\\MyDocs`下的文件实际位于根目录的`\\User\\User1\\Documents`中，但在`D:\\MyDocs`中仍然可以查看并进行正常的文件操作，**如果你在其中一个文件夹中进行了更改，那么另一个文件夹也会进行相同的更改**。\n\n{% note danger %}\n\n**注意：要<font style=\"color:red\">使用管理员身份启动cmd</font>，且<font style=\"color:red\">不能随意删除链接的源目录（或源文件），否则两个文件夹（或文件）之间的链接将会失效且无法访问！</font>**\n\n{% endnote %}  \n\n### 跟 OneDrive 链接起来\n\n在上文中已经基本解释了 mklink 的命令作用和格式，以及操作示例。而 OneDrive 的操作则跟上文大同小异，命令格式为：    \n\n```\nmklink /d <要同步的本地文件夹> <待同步文件夹在OneDrive上的位置>\n```\n\n{% note danger %}\n\n**注意：<font style=\"color:red\">在创建链接之前，`<要同步的本地文件夹>`不能事先存在</font>**\n\n{% endnote %}   \n\n**例如，如果要将 G:\\SyncDir 与 OneDrive 中的 SyncDir 文件夹之间创建链接，命令如下：**  \n\n```\nmklink /d \"G:\\SyncDir\" \"C:\\Users\\<你的用户名>\\OneDrive\\SyncDir\"\n```\n\n命令输入完成后按下回车键 <kbd>Enter</kbd>  \n\n如果出现如下图示，就表明创建链接成功：  \n\n![2018-11-23_201609.png](https://i.loli.net/2018/11/23/5bf7efa2c3e9a.png)\n\n进入 G:\\ 和 OneDrive 来看一下：  \n\n![2018-11-23_202234.png](https://i.loli.net/2018/11/23/5bf7f190936dd.png)\n\n在创建完成后，**这两个文件夹相互之间建立了链接关系，在本地文件夹中创建文件或进行其它更改，对应的 OneDrive 位置也会进行自动同步**。  \n\n**示意动图：**  \n\n![onedrivesync.gif](https://i.loli.net/2018/11/23/5bf7f3a889201.gif)\n\n顺带提一下，我还看了看其它网站上对 mklink 和 OneDrive 同步的文章，这些文章的命令都写成`mklink /d <待同步文件夹在OneDrive上的位置> <要同步的本地文件夹>`，然而经过我亲自测试，这样做无法将本地文件夹自动上传到 OneDrive 上，除非你手动重启 OneDrive 客户端，然而这已经偏离了“要 OneDrive 自动实时同步”的初衷，不知道是我系统的问题还是他们一水儿相互照抄的问题了...   \n\n{% note warning %}  \n\n**注意：**如果希望**从其它设备上传的文件能够立刻自动下载到本地而非按需下载**，需要勾选上“**始终在此设备上可用**”一项。<span style=\"background: #222; color: white\">**方法为：**</span>进入 OneDrive**（本地设备路径）**，选中要更改属性的文件夹，在其上面**右键，弹出的菜单中单击“始终在此设备上可用”**即可。  \n\n{% endnote %}\n\n### 其它的注意事项\n\n**这个方法目前来说还存在一些问题，例如**\n\n>1. 部分时候 OneDrive 可能不能正常显示文件夹的同步状态图标。  \n>2. 对于一些设备，如果不能对符号链接很好支持，某些情况可能会出现同步不及时的问题，如果出现此情况，请手动刷新即可。  \n>3. 目前 OneDrive 还不能支持增量同步这一特性，也就是说如果你修改了一个文件的内容，OneDrive 就会把整个文件完全重新同步一遍。\n\n但如果你对同步的要求不高，且需要较高容量的在线存储空间，又不想付费的话，可以尝试一下这样的“另类”同步方法。  \n\nEND","source":"_posts/让OneDrive也具有同步的特性.md","raw":"---\ntitle: 让 OneDrive 也具有同步特性\ntags:\n  - 使用体验\n  - OneDrive\ncategories:\n  - OneDrive\nabbrlink: eb5a6499\ndate: 2018-11-23 18:11:06\n---\n### 动机\n\n11 月份刚刚经历过期中考试，期间看了看存放在本地的课程资料，已经存了有不下 1 个 G，而我在 OneDrive 上也存放了大量的课程资料，其中很大一部分是为了能够在其它设备上也能查阅。这就提出了一个“同步”的需求。然而微软的操作至今让不少人为之费解：**OneDrive 被微软定义为“同步盘”，却不具备同步盘应该有的一个重要特性，那就是文件自动实时同步**。到目前为止，**如果你想让你的本地文件能够在 OneDrive 上自动同步，那么唯一的方法就是将这个文件放入 OneDrive 在此电脑的本地文件夹位置，然后 OneDrive 才能够识别此文件并开始上传和同步**。这样的操作麻烦不说（每次都要手动移动文件），还有可能因为一时疏忽忘记掉。  <!--more-->  \n\n![7cd83d85fdaa0e9d404abf390711b8bc.jpg](https://i.loli.net/2018/11/23/5bf7fa80b765e.jpg)\n\n期间也尝试了不少同步盘软件，国内坚果云做的非常不错，不仅具有同步盘的特性，由于其服务器在国内，速度自然没得说，缺点就是空间和每月同步流量较少，但如果你只是需要同步一些普通的文档等，这些流量和空间已经足够了；而国外 DropBox 不失为一个好的选择，然而它的缺点也跟坚果云一样，除此之外由于众所周知的原因，DropBox 服务在国内必须要科学上网才能正常访问，如果你不是 24 小时全天挂梯子，那体验定会大打折扣，况且作为将 OneDrive 引荐奖励全部刷满的我来说，还舍不得那 25 个 G 的免费空间（15G+10G），既能存储一些个人文件，又能当同步盘用，可谓一举两得。  \n\n**在继续之前，还有两点要提：**  \n\n>1. OneDrive 的客户端可以正常访问，但是在国内无法访问 OneDrive 的网页端（解决方法：挂梯子、改 hosts 或 DNS 均可）  \n>2. OneDrive 的上传速度跟你所在的当地运营商有关，如果访问速度过慢，你可能就要怀疑一下了（我这里，包括在学校还好）  \n\n接下来，就是这一操作的主角：`mklink` \n\n### 链接目录 - mklink  \n\n粗略来说，**mklink 在两个文件（夹）之间创建一种“链接”的关系**，我们可以用这样的方式来达到让 OneDrive 自动实时同步的目的。  \n\n**关于 mklink 命令的介绍：（图片来源：微软 IT 支持中心）**  \n\n![2018-11-23_183408.png](https://i.loli.net/2018/11/23/5bf7d81e5f2a0.png)\n\n跟其它大多数命令一样，**mklink 也有自己的功能参数，例如`mklink /d`,`mklink /j`等**，用一张表格来说明这些命令参数的意义：  \n\n|    命令参数    |                        参数意义                        |\n| :------------: | :----------------------------------------------------: |\n|       /d       | 创建一个符号链接，在缺省情况下，默认会创建文件“软”链接 |\n|       /h       |                 在硬盘上建立一个硬链接                 |\n|       /j       |                    创建一个目录链接                    |\n|  &lt;link&gt;  |                指定要创建的符号链接名称                |\n| &lt;target&gt; |   指定新符号链接的参考位置（绝对位置或相对位置均可）   |\n|       /?       |                      显示命令帮助                      |\n\n举例来说，如果要将 D 盘下的 MyDocs 文件夹和位于根目录的 Documents 文件夹建立链接，应该这样键入（参考）  \n\n```\nmklink /d \\MyDocs \\Users\\User1\\Documents\n```\n\n这样做，就建立了一个符号链接，`D:\\MyDocs`下的文件实际位于根目录的`\\User\\User1\\Documents`中，但在`D:\\MyDocs`中仍然可以查看并进行正常的文件操作，**如果你在其中一个文件夹中进行了更改，那么另一个文件夹也会进行相同的更改**。\n\n{% note danger %}\n\n**注意：要<font style=\"color:red\">使用管理员身份启动cmd</font>，且<font style=\"color:red\">不能随意删除链接的源目录（或源文件），否则两个文件夹（或文件）之间的链接将会失效且无法访问！</font>**\n\n{% endnote %}  \n\n### 跟 OneDrive 链接起来\n\n在上文中已经基本解释了 mklink 的命令作用和格式，以及操作示例。而 OneDrive 的操作则跟上文大同小异，命令格式为：    \n\n```\nmklink /d <要同步的本地文件夹> <待同步文件夹在OneDrive上的位置>\n```\n\n{% note danger %}\n\n**注意：<font style=\"color:red\">在创建链接之前，`<要同步的本地文件夹>`不能事先存在</font>**\n\n{% endnote %}   \n\n**例如，如果要将 G:\\SyncDir 与 OneDrive 中的 SyncDir 文件夹之间创建链接，命令如下：**  \n\n```\nmklink /d \"G:\\SyncDir\" \"C:\\Users\\<你的用户名>\\OneDrive\\SyncDir\"\n```\n\n命令输入完成后按下回车键 <kbd>Enter</kbd>  \n\n如果出现如下图示，就表明创建链接成功：  \n\n![2018-11-23_201609.png](https://i.loli.net/2018/11/23/5bf7efa2c3e9a.png)\n\n进入 G:\\ 和 OneDrive 来看一下：  \n\n![2018-11-23_202234.png](https://i.loli.net/2018/11/23/5bf7f190936dd.png)\n\n在创建完成后，**这两个文件夹相互之间建立了链接关系，在本地文件夹中创建文件或进行其它更改，对应的 OneDrive 位置也会进行自动同步**。  \n\n**示意动图：**  \n\n![onedrivesync.gif](https://i.loli.net/2018/11/23/5bf7f3a889201.gif)\n\n顺带提一下，我还看了看其它网站上对 mklink 和 OneDrive 同步的文章，这些文章的命令都写成`mklink /d <待同步文件夹在OneDrive上的位置> <要同步的本地文件夹>`，然而经过我亲自测试，这样做无法将本地文件夹自动上传到 OneDrive 上，除非你手动重启 OneDrive 客户端，然而这已经偏离了“要 OneDrive 自动实时同步”的初衷，不知道是我系统的问题还是他们一水儿相互照抄的问题了...   \n\n{% note warning %}  \n\n**注意：**如果希望**从其它设备上传的文件能够立刻自动下载到本地而非按需下载**，需要勾选上“**始终在此设备上可用**”一项。<span style=\"background: #222; color: white\">**方法为：**</span>进入 OneDrive**（本地设备路径）**，选中要更改属性的文件夹，在其上面**右键，弹出的菜单中单击“始终在此设备上可用”**即可。  \n\n{% endnote %}\n\n### 其它的注意事项\n\n**这个方法目前来说还存在一些问题，例如**\n\n>1. 部分时候 OneDrive 可能不能正常显示文件夹的同步状态图标。  \n>2. 对于一些设备，如果不能对符号链接很好支持，某些情况可能会出现同步不及时的问题，如果出现此情况，请手动刷新即可。  \n>3. 目前 OneDrive 还不能支持增量同步这一特性，也就是说如果你修改了一个文件的内容，OneDrive 就会把整个文件完全重新同步一遍。\n\n但如果你对同步的要求不高，且需要较高容量的在线存储空间，又不想付费的话，可以尝试一下这样的“另类”同步方法。  \n\nEND","slug":"让OneDrive也具有同步的特性","published":1,"updated":"2019-07-16T07:45:48.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3v000130wvctpeyery6","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><h3 id=\"动机\"><a href=\"#动机\" class=\"headerlink\" title=\"动机\"></a>动机</h3><p>11 月份刚刚经历过期中考试，期间看了看存放在本地的课程资料，已经存了有不下 1 个 G，而我在 OneDrive 上也存放了大量的课程资料，其中很大一部分是为了能够在其它设备上也能查阅。这就提出了一个“同步”的需求。然而微软的操作至今让不少人为之费解：<strong>OneDrive 被微软定义为“同步盘”，却不具备同步盘应该有的一个重要特性，那就是文件自动实时同步</strong>。到目前为止，<strong>如果你想让你的本地文件能够在 OneDrive 上自动同步，那么唯一的方法就是将这个文件放入 OneDrive 在此电脑的本地文件夹位置，然后 OneDrive 才能够识别此文件并开始上传和同步</strong>。这样的操作麻烦不说（每次都要手动移动文件），还有可能因为一时疏忽忘记掉。<a id=\"more\"></a></p><p><img src=\"https://i.loli.net/2018/11/23/5bf7fa80b765e.jpg\" alt=\"7cd83d85fdaa0e9d404abf390711b8bc.jpg\"></p><p>期间也尝试了不少同步盘软件，国内坚果云做的非常不错，不仅具有同步盘的特性，由于其服务器在国内，速度自然没得说，缺点就是空间和每月同步流量较少，但如果你只是需要同步一些普通的文档等，这些流量和空间已经足够了；而国外 DropBox 不失为一个好的选择，然而它的缺点也跟坚果云一样，除此之外由于众所周知的原因，DropBox 服务在国内必须要科学上网才能正常访问，如果你不是 24 小时全天挂梯子，那体验定会大打折扣，况且作为将 OneDrive 引荐奖励全部刷满的我来说，还舍不得那 25 个 G 的免费空间（15G+10G），既能存储一些个人文件，又能当同步盘用，可谓一举两得。</p><p><strong>在继续之前，还有两点要提：</strong></p><blockquote><ol><li>OneDrive 的客户端可以正常访问，但是在国内无法访问 OneDrive 的网页端（解决方法：挂梯子、改 hosts 或 DNS 均可）</li><li>OneDrive 的上传速度跟你所在的当地运营商有关，如果访问速度过慢，你可能就要怀疑一下了（我这里，包括在学校还好）</li></ol></blockquote><p>接下来，就是这一操作的主角：<code>mklink</code></p><h3 id=\"链接目录-mklink\"><a href=\"#链接目录-mklink\" class=\"headerlink\" title=\"链接目录 - mklink\"></a>链接目录 - mklink</h3><p>粗略来说，<strong>mklink 在两个文件（夹）之间创建一种“链接”的关系</strong>，我们可以用这样的方式来达到让 OneDrive 自动实时同步的目的。</p><p><strong>关于 mklink 命令的介绍：（图片来源：微软 IT 支持中心）</strong></p><p><img src=\"https://i.loli.net/2018/11/23/5bf7d81e5f2a0.png\" alt=\"2018-11-23_183408.png\"></p><p>跟其它大多数命令一样，<strong>mklink 也有自己的功能参数，例如<code>mklink /d</code>,<code>mklink /j</code>等</strong>，用一张表格来说明这些命令参数的意义：</p><table><thead><tr><th align=\"center\">命令参数</th><th align=\"center\">参数意义</th></tr></thead><tbody><tr><td align=\"center\">/d</td><td align=\"center\">创建一个符号链接，在缺省情况下，默认会创建文件“软”链接</td></tr><tr><td align=\"center\">/h</td><td align=\"center\">在硬盘上建立一个硬链接</td></tr><tr><td align=\"center\">/j</td><td align=\"center\">创建一个目录链接</td></tr><tr><td align=\"center\">&lt;link&gt;</td><td align=\"center\">指定要创建的符号链接名称</td></tr><tr><td align=\"center\">&lt;target&gt;</td><td align=\"center\">指定新符号链接的参考位置（绝对位置或相对位置均可）</td></tr><tr><td align=\"center\">/?</td><td align=\"center\">显示命令帮助</td></tr></tbody></table><p>举例来说，如果要将 D 盘下的 MyDocs 文件夹和位于根目录的 Documents 文件夹建立链接，应该这样键入（参考）</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mklink /d \\MyDocs \\Users\\User1\\Documents</span><br></pre></td></tr></table></figure><p>这样做，就建立了一个符号链接，<code>D:\\MyDocs</code>下的文件实际位于根目录的<code>\\User\\User1\\Documents</code>中，但在<code>D:\\MyDocs</code>中仍然可以查看并进行正常的文件操作，<strong>如果你在其中一个文件夹中进行了更改，那么另一个文件夹也会进行相同的更改</strong>。</p><div class=\"note danger\"><p><strong>注意：要<font style=\"color:red\">使用管理员身份启动cmd</font>，且<font style=\"color:red\">不能随意删除链接的源目录（或源文件），否则两个文件夹（或文件）之间的链接将会失效且无法访问！</font></strong></p></div><h3 id=\"跟-OneDrive-链接起来\"><a href=\"#跟-OneDrive-链接起来\" class=\"headerlink\" title=\"跟 OneDrive 链接起来\"></a>跟 OneDrive 链接起来</h3><p>在上文中已经基本解释了 mklink 的命令作用和格式，以及操作示例。而 OneDrive 的操作则跟上文大同小异，命令格式为：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mklink /d &lt;要同步的本地文件夹&gt; &lt;待同步文件夹在OneDrive上的位置&gt;</span><br></pre></td></tr></table></figure><div class=\"note danger\"><p><strong>注意：<font style=\"color:red\">在创建链接之前，<code>&lt;要同步的本地文件夹&gt;</code>不能事先存在</font></strong></p></div><p><strong>例如，如果要将 G:\\SyncDir 与 OneDrive 中的 SyncDir 文件夹之间创建链接，命令如下：</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mklink /d &quot;G:\\SyncDir&quot; &quot;C:\\Users\\&lt;你的用户名&gt;\\OneDrive\\SyncDir&quot;</span><br></pre></td></tr></table></figure><p>命令输入完成后按下回车键 <kbd>Enter</kbd></p><p>如果出现如下图示，就表明创建链接成功：</p><p><img src=\"https://i.loli.net/2018/11/23/5bf7efa2c3e9a.png\" alt=\"2018-11-23_201609.png\"></p><p>进入 G:\\ 和 OneDrive 来看一下：</p><p><img src=\"https://i.loli.net/2018/11/23/5bf7f190936dd.png\" alt=\"2018-11-23_202234.png\"></p><p>在创建完成后，<strong>这两个文件夹相互之间建立了链接关系，在本地文件夹中创建文件或进行其它更改，对应的 OneDrive 位置也会进行自动同步</strong>。</p><p><strong>示意动图：</strong></p><p><img src=\"https://i.loli.net/2018/11/23/5bf7f3a889201.gif\" alt=\"onedrivesync.gif\"></p><p>顺带提一下，我还看了看其它网站上对 mklink 和 OneDrive 同步的文章，这些文章的命令都写成<code>mklink /d &lt;待同步文件夹在OneDrive上的位置&gt; &lt;要同步的本地文件夹&gt;</code>，然而经过我亲自测试，这样做无法将本地文件夹自动上传到 OneDrive 上，除非你手动重启 OneDrive 客户端，然而这已经偏离了“要 OneDrive 自动实时同步”的初衷，不知道是我系统的问题还是他们一水儿相互照抄的问题了…</p><div class=\"note warning\"><p><strong>注意：</strong>如果希望<strong>从其它设备上传的文件能够立刻自动下载到本地而非按需下载</strong>，需要勾选上“<strong>始终在此设备上可用</strong>”一项。<span style=\"background:#222;color:#fff\"><strong>方法为：</strong></span>进入 OneDrive<strong>（本地设备路径）</strong>，选中要更改属性的文件夹，在其上面<strong>右键，弹出的菜单中单击“始终在此设备上可用”</strong>即可。</p></div><h3 id=\"其它的注意事项\"><a href=\"#其它的注意事项\" class=\"headerlink\" title=\"其它的注意事项\"></a>其它的注意事项</h3><p><strong>这个方法目前来说还存在一些问题，例如</strong></p><blockquote><ol><li>部分时候 OneDrive 可能不能正常显示文件夹的同步状态图标。</li><li>对于一些设备，如果不能对符号链接很好支持，某些情况可能会出现同步不及时的问题，如果出现此情况，请手动刷新即可。</li><li>目前 OneDrive 还不能支持增量同步这一特性，也就是说如果你修改了一个文件的内容，OneDrive 就会把整个文件完全重新同步一遍。</li></ol></blockquote><p>但如果你对同步的要求不高，且需要较高容量的在线存储空间，又不想付费的话，可以尝试一下这样的“另类”同步方法。</p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":2399,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><h3 id=\"动机\"><a href=\"#动机\" class=\"headerlink\" title=\"动机\"></a>动机</h3><p>11 月份刚刚经历过期中考试，期间看了看存放在本地的课程资料，已经存了有不下 1 个 G，而我在 OneDrive 上也存放了大量的课程资料，其中很大一部分是为了能够在其它设备上也能查阅。这就提出了一个“同步”的需求。然而微软的操作至今让不少人为之费解：<strong>OneDrive 被微软定义为“同步盘”，却不具备同步盘应该有的一个重要特性，那就是文件自动实时同步</strong>。到目前为止，<strong>如果你想让你的本地文件能够在 OneDrive 上自动同步，那么唯一的方法就是将这个文件放入 OneDrive 在此电脑的本地文件夹位置，然后 OneDrive 才能够识别此文件并开始上传和同步</strong>。这样的操作麻烦不说（每次都要手动移动文件），还有可能因为一时疏忽忘记掉。","more":"</p><p><img src=\"https://i.loli.net/2018/11/23/5bf7fa80b765e.jpg\" alt=\"7cd83d85fdaa0e9d404abf390711b8bc.jpg\"></p><p>期间也尝试了不少同步盘软件，国内坚果云做的非常不错，不仅具有同步盘的特性，由于其服务器在国内，速度自然没得说，缺点就是空间和每月同步流量较少，但如果你只是需要同步一些普通的文档等，这些流量和空间已经足够了；而国外 DropBox 不失为一个好的选择，然而它的缺点也跟坚果云一样，除此之外由于众所周知的原因，DropBox 服务在国内必须要科学上网才能正常访问，如果你不是 24 小时全天挂梯子，那体验定会大打折扣，况且作为将 OneDrive 引荐奖励全部刷满的我来说，还舍不得那 25 个 G 的免费空间（15G+10G），既能存储一些个人文件，又能当同步盘用，可谓一举两得。</p><p><strong>在继续之前，还有两点要提：</strong></p><blockquote><ol><li>OneDrive 的客户端可以正常访问，但是在国内无法访问 OneDrive 的网页端（解决方法：挂梯子、改 hosts 或 DNS 均可）</li><li>OneDrive 的上传速度跟你所在的当地运营商有关，如果访问速度过慢，你可能就要怀疑一下了（我这里，包括在学校还好）</li></ol></blockquote><p>接下来，就是这一操作的主角：<code>mklink</code></p><h3 id=\"链接目录-mklink\"><a href=\"#链接目录-mklink\" class=\"headerlink\" title=\"链接目录 - mklink\"></a>链接目录 - mklink</h3><p>粗略来说，<strong>mklink 在两个文件（夹）之间创建一种“链接”的关系</strong>，我们可以用这样的方式来达到让 OneDrive 自动实时同步的目的。</p><p><strong>关于 mklink 命令的介绍：（图片来源：微软 IT 支持中心）</strong></p><p><img src=\"https://i.loli.net/2018/11/23/5bf7d81e5f2a0.png\" alt=\"2018-11-23_183408.png\"></p><p>跟其它大多数命令一样，<strong>mklink 也有自己的功能参数，例如<code>mklink /d</code>,<code>mklink /j</code>等</strong>，用一张表格来说明这些命令参数的意义：</p><table><thead><tr><th align=\"center\">命令参数</th><th align=\"center\">参数意义</th></tr></thead><tbody><tr><td align=\"center\">/d</td><td align=\"center\">创建一个符号链接，在缺省情况下，默认会创建文件“软”链接</td></tr><tr><td align=\"center\">/h</td><td align=\"center\">在硬盘上建立一个硬链接</td></tr><tr><td align=\"center\">/j</td><td align=\"center\">创建一个目录链接</td></tr><tr><td align=\"center\">&lt;link&gt;</td><td align=\"center\">指定要创建的符号链接名称</td></tr><tr><td align=\"center\">&lt;target&gt;</td><td align=\"center\">指定新符号链接的参考位置（绝对位置或相对位置均可）</td></tr><tr><td align=\"center\">/?</td><td align=\"center\">显示命令帮助</td></tr></tbody></table><p>举例来说，如果要将 D 盘下的 MyDocs 文件夹和位于根目录的 Documents 文件夹建立链接，应该这样键入（参考）</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mklink /d \\MyDocs \\Users\\User1\\Documents</span><br></pre></td></tr></table></figure><p>这样做，就建立了一个符号链接，<code>D:\\MyDocs</code>下的文件实际位于根目录的<code>\\User\\User1\\Documents</code>中，但在<code>D:\\MyDocs</code>中仍然可以查看并进行正常的文件操作，<strong>如果你在其中一个文件夹中进行了更改，那么另一个文件夹也会进行相同的更改</strong>。</p><div class=\"note danger\"><p><strong>注意：要<font style=\"color:red\">使用管理员身份启动cmd</font>，且<font style=\"color:red\">不能随意删除链接的源目录（或源文件），否则两个文件夹（或文件）之间的链接将会失效且无法访问！</font></strong></p></div><h3 id=\"跟-OneDrive-链接起来\"><a href=\"#跟-OneDrive-链接起来\" class=\"headerlink\" title=\"跟 OneDrive 链接起来\"></a>跟 OneDrive 链接起来</h3><p>在上文中已经基本解释了 mklink 的命令作用和格式，以及操作示例。而 OneDrive 的操作则跟上文大同小异，命令格式为：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mklink /d &lt;要同步的本地文件夹&gt; &lt;待同步文件夹在OneDrive上的位置&gt;</span><br></pre></td></tr></table></figure><div class=\"note danger\"><p><strong>注意：<font style=\"color:red\">在创建链接之前，<code>&lt;要同步的本地文件夹&gt;</code>不能事先存在</font></strong></p></div><p><strong>例如，如果要将 G:\\SyncDir 与 OneDrive 中的 SyncDir 文件夹之间创建链接，命令如下：</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mklink /d &quot;G:\\SyncDir&quot; &quot;C:\\Users\\&lt;你的用户名&gt;\\OneDrive\\SyncDir&quot;</span><br></pre></td></tr></table></figure><p>命令输入完成后按下回车键 <kbd>Enter</kbd></p><p>如果出现如下图示，就表明创建链接成功：</p><p><img src=\"https://i.loli.net/2018/11/23/5bf7efa2c3e9a.png\" alt=\"2018-11-23_201609.png\"></p><p>进入 G:\\ 和 OneDrive 来看一下：</p><p><img src=\"https://i.loli.net/2018/11/23/5bf7f190936dd.png\" alt=\"2018-11-23_202234.png\"></p><p>在创建完成后，<strong>这两个文件夹相互之间建立了链接关系，在本地文件夹中创建文件或进行其它更改，对应的 OneDrive 位置也会进行自动同步</strong>。</p><p><strong>示意动图：</strong></p><p><img src=\"https://i.loli.net/2018/11/23/5bf7f3a889201.gif\" alt=\"onedrivesync.gif\"></p><p>顺带提一下，我还看了看其它网站上对 mklink 和 OneDrive 同步的文章，这些文章的命令都写成<code>mklink /d &lt;待同步文件夹在OneDrive上的位置&gt; &lt;要同步的本地文件夹&gt;</code>，然而经过我亲自测试，这样做无法将本地文件夹自动上传到 OneDrive 上，除非你手动重启 OneDrive 客户端，然而这已经偏离了“要 OneDrive 自动实时同步”的初衷，不知道是我系统的问题还是他们一水儿相互照抄的问题了…</p><div class=\"note warning\"><p><strong>注意：</strong>如果希望<strong>从其它设备上传的文件能够立刻自动下载到本地而非按需下载</strong>，需要勾选上“<strong>始终在此设备上可用</strong>”一项。<span style=\"background:#222;color:#fff\"><strong>方法为：</strong></span>进入 OneDrive<strong>（本地设备路径）</strong>，选中要更改属性的文件夹，在其上面<strong>右键，弹出的菜单中单击“始终在此设备上可用”</strong>即可。</p></div><h3 id=\"其它的注意事项\"><a href=\"#其它的注意事项\" class=\"headerlink\" title=\"其它的注意事项\"></a>其它的注意事项</h3><p><strong>这个方法目前来说还存在一些问题，例如</strong></p><blockquote><ol><li>部分时候 OneDrive 可能不能正常显示文件夹的同步状态图标。</li><li>对于一些设备，如果不能对符号链接很好支持，某些情况可能会出现同步不及时的问题，如果出现此情况，请手动刷新即可。</li><li>目前 OneDrive 还不能支持增量同步这一特性，也就是说如果你修改了一个文件的内容，OneDrive 就会把整个文件完全重新同步一遍。</li></ol></blockquote><p>但如果你对同步的要求不高，且需要较高容量的在线存储空间，又不想付费的话，可以尝试一下这样的“另类”同步方法。</p><p>END</p><!-- rebuild by neat -->"},{"title":"Killed by Google","abbrlink":"5cd70f8c","date":"2018-11-30T20:24:52.000Z","_content":"\n> <i class=\"fa fa-quote-left fa-3x fa-pull-left\"></i>&nbsp;Killed by Google，这里，记载着每一个被 Google 亲手杀死的应用和服务。这些产品大多已消失在 Google 的发展过程中，现在，有人主动站出来，重新为它们正名。  \n>\n><p style=\"text-align:right\">——&nbsp;Killed by Google, A project by Cody Ogden.</p>\n\n经常有人说微软是买买买，尤其是在 XBox 上发力很多，借以提高第一方工作室的影响程度；而苹果则是贵贵贵，尤其是从 iPhone X 开始，iPhone 已经变为了奢侈品玩家的高端玩具，没个 1w+ 的预算休想拿到高配；而谷歌则是砍砍砍，从出生到现在，Google 在其发展的 20 年间不知砍掉了多少产品线，而现在有一位叫 Cody Odgen 的人做了个叫“Killed by Google”的网站，将被 Google 砍掉的产品按时间线顺序排列出来，让用户目睹了 Google 的“砍刀风采”。 <!--more-->  \n\n先上一张网站的图片，每个死亡的项目名字左边都有一个墓碑图标，看着形象贴切多了   \n\n![killedbygoogle.png](https://i.loli.net/2018/12/01/5c01f504d37a5.png \"Killed by Google的主页\")\n\n整个网站风格简约大方，顺带一提，目前此站已收录了 149 个“被 Google 死亡”的项目。可以看到下方的分类统计数字，能有一个比较直观的认识：  \n\n![chrome_7Z8pGSR00n.png](https://storage.live.com/items/5582C1D07E2893FB!133078?authkey=APiqr1tjl5KIc1Q \"确实...很直观\")  \n\n**Killed by Google 不仅标出了每个已死亡项目的名字，还包括这个项目的用途、项目的诞生时间和死亡时间以及项目的持续时间。**可以说颇为用心 + 信息全面。**QuickOffice 的四个月寿命让它荣登 Google 最快夭折和最短命的产品榜首，而第一个已有公开信息的 Google 死亡项目是 Google Deskbar**，其用途主要是在用户的Windows工具栏上显示一个 Google 的搜索栏从而让用户不离开桌面直接发起搜索；**目前最近的死亡产品（或濒死产品）是 Google+，原因是 Google+ 泄露了大量用户的个人资料且 Google 瞒报了这件事情，再加上 Google+ 本身就是一个失败的社交产品，被砍掉也就在意料之中了**。  \n\n如果将上面的产品分个类，大致可以分为以下几类：**经营不善类、同类产品竞争类和时代眼泪**。Google+、Allo、Spaces 可以划分到经营不善中，而 QuickOffice 等产品可以划分到有同类产品竞争这一类，像 Google Picasa 和 Google Reader 可以被划到时代眼泪这一类别中。**综观 Google 二十年的发展历程，Google 从来就不是一家善于社交的公司，社交属性对 Google 来说是“可望而不可及”，社交产品的失败在这些已死亡的 Google 项目占了不小的比重**。QuickOffice 一开始是 Google 推出的办公套件服务，对标微软的 Office，不过由于微软在这一领域多年的“大哥”地位，**Google 的 QuickOffice 仅四个月就黯然离场，并惨遭拆分为三个独立应用：Docs、Sheets 和 Slides（即文档、表格和幻灯片）**，有趣的是，没过多久微软也宣布将发布 3 个全新的独立 Office 套件（ Word、Excel 和 PowerPoint ）并取代原有的 Office 集合版，这算不算是一种默契😄另外一类则是“时代的眼泪”，这些产品或是其依托的服务已经被新的实现方式替代，消失在历史长河中，**最典型的莫过于 Google Reader 和 Google Picasa，前者主要是电子书阅读和 RSS 阅读器，而后者则是 Google 出品的一款本地看图软件，然而由于 RSS 逐渐被新闻聚合类应用替代，再加上越来越丰富的信息展现方式，RSS 逐渐被弃用，最终 Google Reader 也难逃被关闭的命运，于 2013 年正式停止服务；而为了能够发展云服务，Google 于 2016 年停止开发并关闭了本地看图软件 Picasa，转而开发云上存储图片服务 Google Photos。**  \n\n可以看到 Google 的死亡项目就是其在 PC 市场向互联网市场发展中的隐形过程，一个企业必须不断创新、研究自身的发展方向才能够制定正确的发展战略，Google 的“社交梦”在一次又一次的失败中消耗殆尽，成为了一个朦胧的缩影。<span style=\"background:#222;color:white\">**除了 Google 之外，还有谁记得已在天国的微软的 Windows Phone，还有苹果的 iPod？**</span>  \n\n**2018 年 12 月 1 日 12 时 01 分 23 秒（北京时间）更新：Google+ 之后，谷歌再砍通讯应用环聊 Hangouts** \n\n<i class=\"fas fa-globe-asia\"></i>&nbsp;**单击这里，访问 Killed by Google（由Cody Odgen创建）[Killed by Google](https://killedbygoogle.com/)**   \n\nEND","source":"_posts/记录：Google产品的墓地.md","raw":"---\ntitle: Killed by Google\ntags:\n  - Google\n  - 产品\ncategories:\n  - Google\nabbrlink: 5cd70f8c\ndate: 2018-12-01 04:24:52\n---\n\n> <i class=\"fa fa-quote-left fa-3x fa-pull-left\"></i>&nbsp;Killed by Google，这里，记载着每一个被 Google 亲手杀死的应用和服务。这些产品大多已消失在 Google 的发展过程中，现在，有人主动站出来，重新为它们正名。  \n>\n><p style=\"text-align:right\">——&nbsp;Killed by Google, A project by Cody Ogden.</p>\n\n经常有人说微软是买买买，尤其是在 XBox 上发力很多，借以提高第一方工作室的影响程度；而苹果则是贵贵贵，尤其是从 iPhone X 开始，iPhone 已经变为了奢侈品玩家的高端玩具，没个 1w+ 的预算休想拿到高配；而谷歌则是砍砍砍，从出生到现在，Google 在其发展的 20 年间不知砍掉了多少产品线，而现在有一位叫 Cody Odgen 的人做了个叫“Killed by Google”的网站，将被 Google 砍掉的产品按时间线顺序排列出来，让用户目睹了 Google 的“砍刀风采”。 <!--more-->  \n\n先上一张网站的图片，每个死亡的项目名字左边都有一个墓碑图标，看着形象贴切多了   \n\n![killedbygoogle.png](https://i.loli.net/2018/12/01/5c01f504d37a5.png \"Killed by Google的主页\")\n\n整个网站风格简约大方，顺带一提，目前此站已收录了 149 个“被 Google 死亡”的项目。可以看到下方的分类统计数字，能有一个比较直观的认识：  \n\n![chrome_7Z8pGSR00n.png](https://storage.live.com/items/5582C1D07E2893FB!133078?authkey=APiqr1tjl5KIc1Q \"确实...很直观\")  \n\n**Killed by Google 不仅标出了每个已死亡项目的名字，还包括这个项目的用途、项目的诞生时间和死亡时间以及项目的持续时间。**可以说颇为用心 + 信息全面。**QuickOffice 的四个月寿命让它荣登 Google 最快夭折和最短命的产品榜首，而第一个已有公开信息的 Google 死亡项目是 Google Deskbar**，其用途主要是在用户的Windows工具栏上显示一个 Google 的搜索栏从而让用户不离开桌面直接发起搜索；**目前最近的死亡产品（或濒死产品）是 Google+，原因是 Google+ 泄露了大量用户的个人资料且 Google 瞒报了这件事情，再加上 Google+ 本身就是一个失败的社交产品，被砍掉也就在意料之中了**。  \n\n如果将上面的产品分个类，大致可以分为以下几类：**经营不善类、同类产品竞争类和时代眼泪**。Google+、Allo、Spaces 可以划分到经营不善中，而 QuickOffice 等产品可以划分到有同类产品竞争这一类，像 Google Picasa 和 Google Reader 可以被划到时代眼泪这一类别中。**综观 Google 二十年的发展历程，Google 从来就不是一家善于社交的公司，社交属性对 Google 来说是“可望而不可及”，社交产品的失败在这些已死亡的 Google 项目占了不小的比重**。QuickOffice 一开始是 Google 推出的办公套件服务，对标微软的 Office，不过由于微软在这一领域多年的“大哥”地位，**Google 的 QuickOffice 仅四个月就黯然离场，并惨遭拆分为三个独立应用：Docs、Sheets 和 Slides（即文档、表格和幻灯片）**，有趣的是，没过多久微软也宣布将发布 3 个全新的独立 Office 套件（ Word、Excel 和 PowerPoint ）并取代原有的 Office 集合版，这算不算是一种默契😄另外一类则是“时代的眼泪”，这些产品或是其依托的服务已经被新的实现方式替代，消失在历史长河中，**最典型的莫过于 Google Reader 和 Google Picasa，前者主要是电子书阅读和 RSS 阅读器，而后者则是 Google 出品的一款本地看图软件，然而由于 RSS 逐渐被新闻聚合类应用替代，再加上越来越丰富的信息展现方式，RSS 逐渐被弃用，最终 Google Reader 也难逃被关闭的命运，于 2013 年正式停止服务；而为了能够发展云服务，Google 于 2016 年停止开发并关闭了本地看图软件 Picasa，转而开发云上存储图片服务 Google Photos。**  \n\n可以看到 Google 的死亡项目就是其在 PC 市场向互联网市场发展中的隐形过程，一个企业必须不断创新、研究自身的发展方向才能够制定正确的发展战略，Google 的“社交梦”在一次又一次的失败中消耗殆尽，成为了一个朦胧的缩影。<span style=\"background:#222;color:white\">**除了 Google 之外，还有谁记得已在天国的微软的 Windows Phone，还有苹果的 iPod？**</span>  \n\n**2018 年 12 月 1 日 12 时 01 分 23 秒（北京时间）更新：Google+ 之后，谷歌再砍通讯应用环聊 Hangouts** \n\n<i class=\"fas fa-globe-asia\"></i>&nbsp;**单击这里，访问 Killed by Google（由Cody Odgen创建）[Killed by Google](https://killedbygoogle.com/)**   \n\nEND","slug":"记录：Google产品的墓地","published":1,"updated":"2019-07-16T04:24:27.190Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy6xa3v200160wvc6uejses0","content":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><blockquote><p><i class=\"fa fa-quote-left fa-3x fa-pull-left\"></i>&nbsp;Killed by Google，这里，记载着每一个被 Google 亲手杀死的应用和服务。这些产品大多已消失在 Google 的发展过程中，现在，有人主动站出来，重新为它们正名。</p><p style=\"text-align:right\">——&nbsp;Killed by Google, A project by Cody Ogden.</p></blockquote><p>经常有人说微软是买买买，尤其是在 XBox 上发力很多，借以提高第一方工作室的影响程度；而苹果则是贵贵贵，尤其是从 iPhone X 开始，iPhone 已经变为了奢侈品玩家的高端玩具，没个 1w+ 的预算休想拿到高配；而谷歌则是砍砍砍，从出生到现在，Google 在其发展的 20 年间不知砍掉了多少产品线，而现在有一位叫 Cody Odgen 的人做了个叫“Killed by Google”的网站，将被 Google 砍掉的产品按时间线顺序排列出来，让用户目睹了 Google 的“砍刀风采”。<a id=\"more\"></a></p><p>先上一张网站的图片，每个死亡的项目名字左边都有一个墓碑图标，看着形象贴切多了</p><p><img src=\"https://i.loli.net/2018/12/01/5c01f504d37a5.png\" alt=\"killedbygoogle.png\" title=\"Killed by Google的主页\"></p><p>整个网站风格简约大方，顺带一提，目前此站已收录了 149 个“被 Google 死亡”的项目。可以看到下方的分类统计数字，能有一个比较直观的认识：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133078?authkey=APiqr1tjl5KIc1Q\" alt=\"chrome_7Z8pGSR00n.png\" title=\"确实...很直观\"></p><p><strong>Killed by Google 不仅标出了每个已死亡项目的名字，还包括这个项目的用途、项目的诞生时间和死亡时间以及项目的持续时间。</strong>可以说颇为用心 + 信息全面。<strong>QuickOffice 的四个月寿命让它荣登 Google 最快夭折和最短命的产品榜首，而第一个已有公开信息的 Google 死亡项目是 Google Deskbar</strong>，其用途主要是在用户的Windows工具栏上显示一个 Google 的搜索栏从而让用户不离开桌面直接发起搜索；<strong>目前最近的死亡产品（或濒死产品）是 Google+，原因是 Google+ 泄露了大量用户的个人资料且 Google 瞒报了这件事情，再加上 Google+ 本身就是一个失败的社交产品，被砍掉也就在意料之中了</strong>。</p><p>如果将上面的产品分个类，大致可以分为以下几类：<strong>经营不善类、同类产品竞争类和时代眼泪</strong>。Google+、Allo、Spaces 可以划分到经营不善中，而 QuickOffice 等产品可以划分到有同类产品竞争这一类，像 Google Picasa 和 Google Reader 可以被划到时代眼泪这一类别中。<strong>综观 Google 二十年的发展历程，Google 从来就不是一家善于社交的公司，社交属性对 Google 来说是“可望而不可及”，社交产品的失败在这些已死亡的 Google 项目占了不小的比重</strong>。QuickOffice 一开始是 Google 推出的办公套件服务，对标微软的 Office，不过由于微软在这一领域多年的“大哥”地位，<strong>Google 的 QuickOffice 仅四个月就黯然离场，并惨遭拆分为三个独立应用：Docs、Sheets 和 Slides（即文档、表格和幻灯片）</strong>，有趣的是，没过多久微软也宣布将发布 3 个全新的独立 Office 套件（ Word、Excel 和 PowerPoint ）并取代原有的 Office 集合版，这算不算是一种默契😄另外一类则是“时代的眼泪”，这些产品或是其依托的服务已经被新的实现方式替代，消失在历史长河中，<strong>最典型的莫过于 Google Reader 和 Google Picasa，前者主要是电子书阅读和 RSS 阅读器，而后者则是 Google 出品的一款本地看图软件，然而由于 RSS 逐渐被新闻聚合类应用替代，再加上越来越丰富的信息展现方式，RSS 逐渐被弃用，最终 Google Reader 也难逃被关闭的命运，于 2013 年正式停止服务；而为了能够发展云服务，Google 于 2016 年停止开发并关闭了本地看图软件 Picasa，转而开发云上存储图片服务 Google Photos。</strong></p><p>可以看到 Google 的死亡项目就是其在 PC 市场向互联网市场发展中的隐形过程，一个企业必须不断创新、研究自身的发展方向才能够制定正确的发展战略，Google 的“社交梦”在一次又一次的失败中消耗殆尽，成为了一个朦胧的缩影。<span style=\"background:#222;color:#fff\"><strong>除了 Google 之外，还有谁记得已在天国的微软的 Windows Phone，还有苹果的 iPod？</strong></span></p><p><strong>2018 年 12 月 1 日 12 时 01 分 23 秒（北京时间）更新：Google+ 之后，谷歌再砍通讯应用环聊 Hangouts</strong></p><p><i class=\"fas fa-globe-asia\"></i>&nbsp;<strong>单击这里，访问 Killed by Google（由Cody Odgen创建）<a href=\"https://killedbygoogle.com/\" target=\"_blank\" rel=\"noopener\">Killed by Google</a></strong></p><p>END</p><!-- rebuild by neat -->","site":{"data":{}},"length":1913,"excerpt":"<!-- build time:Wed Jul 17 2019 15:26:55 GMT+0800 (GMT+08:00) --><blockquote><p><i class=\"fa fa-quote-left fa-3x fa-pull-left\"></i>&nbsp;Killed by Google，这里，记载着每一个被 Google 亲手杀死的应用和服务。这些产品大多已消失在 Google 的发展过程中，现在，有人主动站出来，重新为它们正名。</p><p style=\"text-align:right\">——&nbsp;Killed by Google, A project by Cody Ogden.</p></blockquote><p>经常有人说微软是买买买，尤其是在 XBox 上发力很多，借以提高第一方工作室的影响程度；而苹果则是贵贵贵，尤其是从 iPhone X 开始，iPhone 已经变为了奢侈品玩家的高端玩具，没个 1w+ 的预算休想拿到高配；而谷歌则是砍砍砍，从出生到现在，Google 在其发展的 20 年间不知砍掉了多少产品线，而现在有一位叫 Cody Odgen 的人做了个叫“Killed by Google”的网站，将被 Google 砍掉的产品按时间线顺序排列出来，让用户目睹了 Google 的“砍刀风采”。","more":"</p><p>先上一张网站的图片，每个死亡的项目名字左边都有一个墓碑图标，看着形象贴切多了</p><p><img src=\"https://i.loli.net/2018/12/01/5c01f504d37a5.png\" alt=\"killedbygoogle.png\" title=\"Killed by Google的主页\"></p><p>整个网站风格简约大方，顺带一提，目前此站已收录了 149 个“被 Google 死亡”的项目。可以看到下方的分类统计数字，能有一个比较直观的认识：</p><p><img src=\"https://storage.live.com/items/5582C1D07E2893FB!133078?authkey=APiqr1tjl5KIc1Q\" alt=\"chrome_7Z8pGSR00n.png\" title=\"确实...很直观\"></p><p><strong>Killed by Google 不仅标出了每个已死亡项目的名字，还包括这个项目的用途、项目的诞生时间和死亡时间以及项目的持续时间。</strong>可以说颇为用心 + 信息全面。<strong>QuickOffice 的四个月寿命让它荣登 Google 最快夭折和最短命的产品榜首，而第一个已有公开信息的 Google 死亡项目是 Google Deskbar</strong>，其用途主要是在用户的Windows工具栏上显示一个 Google 的搜索栏从而让用户不离开桌面直接发起搜索；<strong>目前最近的死亡产品（或濒死产品）是 Google+，原因是 Google+ 泄露了大量用户的个人资料且 Google 瞒报了这件事情，再加上 Google+ 本身就是一个失败的社交产品，被砍掉也就在意料之中了</strong>。</p><p>如果将上面的产品分个类，大致可以分为以下几类：<strong>经营不善类、同类产品竞争类和时代眼泪</strong>。Google+、Allo、Spaces 可以划分到经营不善中，而 QuickOffice 等产品可以划分到有同类产品竞争这一类，像 Google Picasa 和 Google Reader 可以被划到时代眼泪这一类别中。<strong>综观 Google 二十年的发展历程，Google 从来就不是一家善于社交的公司，社交属性对 Google 来说是“可望而不可及”，社交产品的失败在这些已死亡的 Google 项目占了不小的比重</strong>。QuickOffice 一开始是 Google 推出的办公套件服务，对标微软的 Office，不过由于微软在这一领域多年的“大哥”地位，<strong>Google 的 QuickOffice 仅四个月就黯然离场，并惨遭拆分为三个独立应用：Docs、Sheets 和 Slides（即文档、表格和幻灯片）</strong>，有趣的是，没过多久微软也宣布将发布 3 个全新的独立 Office 套件（ Word、Excel 和 PowerPoint ）并取代原有的 Office 集合版，这算不算是一种默契😄另外一类则是“时代的眼泪”，这些产品或是其依托的服务已经被新的实现方式替代，消失在历史长河中，<strong>最典型的莫过于 Google Reader 和 Google Picasa，前者主要是电子书阅读和 RSS 阅读器，而后者则是 Google 出品的一款本地看图软件，然而由于 RSS 逐渐被新闻聚合类应用替代，再加上越来越丰富的信息展现方式，RSS 逐渐被弃用，最终 Google Reader 也难逃被关闭的命运，于 2013 年正式停止服务；而为了能够发展云服务，Google 于 2016 年停止开发并关闭了本地看图软件 Picasa，转而开发云上存储图片服务 Google Photos。</strong></p><p>可以看到 Google 的死亡项目就是其在 PC 市场向互联网市场发展中的隐形过程，一个企业必须不断创新、研究自身的发展方向才能够制定正确的发展战略，Google 的“社交梦”在一次又一次的失败中消耗殆尽，成为了一个朦胧的缩影。<span style=\"background:#222;color:#fff\"><strong>除了 Google 之外，还有谁记得已在天国的微软的 Windows Phone，还有苹果的 iPod？</strong></span></p><p><strong>2018 年 12 月 1 日 12 时 01 分 23 秒（北京时间）更新：Google+ 之后，谷歌再砍通讯应用环聊 Hangouts</strong></p><p><i class=\"fas fa-globe-asia\"></i>&nbsp;<strong>单击这里，访问 Killed by Google（由Cody Odgen创建）<a href=\"https://killedbygoogle.com/\" target=\"_blank\" rel=\"noopener\">Killed by Google</a></strong></p><p>END</p><!-- rebuild by neat -->"}],"PostAsset":[],"PostCategory":[{"post_id":"cjy6xa3tf00000wvcldpwjruu","category_id":"cjy6xa3tq00040wvc0365245g","_id":"cjy6xa3u8000e0wvcriz6mp06"},{"post_id":"cjy6xa3ty00080wvcnll6mo81","category_id":"cjy6xa3tq00040wvc0365245g","_id":"cjy6xa3ub000h0wvchoht4r8l"},{"post_id":"cjy6xa3tn00020wvcezzmkpdv","category_id":"cjy6xa3tq00040wvc0365245g","_id":"cjy6xa3uh000j0wvceofb871z"},{"post_id":"cjy6xa3tt00060wvcjztmuaer","category_id":"cjy6xa3u8000d0wvcrqu5hw2m","_id":"cjy6xa3uo000p0wvcflercmco"},{"post_id":"cjy6xa3tw00070wvc5lc89jpl","category_id":"cjy6xa3ui000k0wvcgyumqzde","_id":"cjy6xa3ur000w0wvc9x7ghdxa"},{"post_id":"cjy6xa3um000o0wvc1jb8e3nf","category_id":"cjy6xa3tq00040wvc0365245g","_id":"cjy6xa3uu00100wvcv2cxo84a"},{"post_id":"cjy6xa3u4000b0wvcdb5jy9mf","category_id":"cjy6xa3uo000r0wvcp991r1ci","_id":"cjy6xa3uz00120wvcosa14o2d"},{"post_id":"cjy6xa3uv00110wvc7k32jb39","category_id":"cjy6xa3uo000r0wvcp991r1ci","_id":"cjy6xa3v400180wvcl8zu9s89"},{"post_id":"cjy6xa3u7000c0wvc02su5rv3","category_id":"cjy6xa3us000x0wvcncfkj2ge","_id":"cjy6xa3v5001c0wvca4lvaf46"},{"post_id":"cjy6xa3u9000g0wvcoecq2x8l","category_id":"cjy6xa3v100140wvci3iwbw7l","_id":"cjy6xa3v6001f0wvclce05pls"},{"post_id":"cjy6xa3uc000i0wvccx694cvv","category_id":"cjy6xa3v100140wvci3iwbw7l","_id":"cjy6xa3v8001i0wvcm856uwth"},{"post_id":"cjy6xa3ul000m0wvcmjheqkau","category_id":"cjy6xa3v6001e0wvc9k28dg2n","_id":"cjy6xa3v9001m0wvcva3wi80h"},{"post_id":"cjy6xa3up000t0wvctcjfkysx","category_id":"cjy6xa3v8001j0wvczpt0bpgf","_id":"cjy6xa3va001p0wvc4svkgts9"},{"post_id":"cjy6xa3uq000v0wvcjmpjvktf","category_id":"cjy6xa3va001n0wvctpqzt1me","_id":"cjy6xa3vg001u0wvcp790r378"},{"post_id":"cjy6xa3ut000y0wvc6ltt2faj","category_id":"cjy6xa3v6001e0wvc9k28dg2n","_id":"cjy6xa3vi001y0wvccaw2jcc9"},{"post_id":"cjy6xa3v000130wvctpeyery6","category_id":"cjy6xa3vf001t0wvckvj92ere","_id":"cjy6xa3vk00210wvcqxmlxox9"},{"post_id":"cjy6xa3v200160wvc6uejses0","category_id":"cjy6xa3vi001z0wvc6sutq31h","_id":"cjy6xa3vl00230wvclo6wndtm"}],"PostTag":[{"post_id":"cjy6xa3tf00000wvcldpwjruu","tag_id":"cjy6xa3ts00050wvcp3ir9k8m","_id":"cjy6xa3um000n0wvcb39rwxc5"},{"post_id":"cjy6xa3tf00000wvcldpwjruu","tag_id":"cjy6xa3tz000a0wvcgvgpwpyn","_id":"cjy6xa3uo000q0wvcq8c7y3yp"},{"post_id":"cjy6xa3tf00000wvcldpwjruu","tag_id":"cjy6xa3u8000f0wvcruy0gdvm","_id":"cjy6xa3uq000u0wvcnd4fxmp2"},{"post_id":"cjy6xa3tn00020wvcezzmkpdv","tag_id":"cjy6xa3uk000l0wvcavyp94y9","_id":"cjy6xa3v300170wvcukp20bg3"},{"post_id":"cjy6xa3tn00020wvcezzmkpdv","tag_id":"cjy6xa3up000s0wvcz1taepbw","_id":"cjy6xa3v400190wvc6afku1dk"},{"post_id":"cjy6xa3tn00020wvcezzmkpdv","tag_id":"cjy6xa3uu000z0wvc5l0jw7ln","_id":"cjy6xa3v5001d0wvcur5wlg24"},{"post_id":"cjy6xa3tt00060wvcjztmuaer","tag_id":"cjy6xa3v200150wvcxxpzwtb2","_id":"cjy6xa3v8001h0wvckv5jpqsx"},{"post_id":"cjy6xa3tt00060wvcjztmuaer","tag_id":"cjy6xa3v5001b0wvcnnb60x5h","_id":"cjy6xa3v8001k0wvckf8skqu3"},{"post_id":"cjy6xa3tw00070wvc5lc89jpl","tag_id":"cjy6xa3v7001g0wvcq11s9im2","_id":"cjy6xa3vd001s0wvcj4l56sa8"},{"post_id":"cjy6xa3tw00070wvc5lc89jpl","tag_id":"cjy6xa3v8001l0wvczovg23sk","_id":"cjy6xa3vh001v0wvcsbul75jn"},{"post_id":"cjy6xa3tw00070wvc5lc89jpl","tag_id":"cjy6xa3va001o0wvcz23leayt","_id":"cjy6xa3vi001x0wvctfvzw250"},{"post_id":"cjy6xa3ty00080wvcnll6mo81","tag_id":"cjy6xa3vc001r0wvcflw3d6gi","_id":"cjy6xa3vm00250wvce0ydlfkt"},{"post_id":"cjy6xa3ty00080wvcnll6mo81","tag_id":"cjy6xa3v5001b0wvcnnb60x5h","_id":"cjy6xa3vn00260wvc04xh6l6i"},{"post_id":"cjy6xa3ty00080wvcnll6mo81","tag_id":"cjy6xa3vk00200wvc0u9sg3g3","_id":"cjy6xa3vn00280wvcliajt5di"},{"post_id":"cjy6xa3ty00080wvcnll6mo81","tag_id":"cjy6xa3vl00220wvcupta6xju","_id":"cjy6xa3vn00290wvcw0j7imbf"},{"post_id":"cjy6xa3u4000b0wvcdb5jy9mf","tag_id":"cjy6xa3v7001g0wvcq11s9im2","_id":"cjy6xa3vo002b0wvcb4p4udob"},{"post_id":"cjy6xa3u4000b0wvcdb5jy9mf","tag_id":"cjy6xa3vn00270wvcyjpwkxig","_id":"cjy6xa3vq002c0wvcrnjqq2hg"},{"post_id":"cjy6xa3u7000c0wvc02su5rv3","tag_id":"cjy6xa3vo002a0wvcti41gp75","_id":"cjy6xa3vw002g0wvc8fit4nto"},{"post_id":"cjy6xa3u7000c0wvc02su5rv3","tag_id":"cjy6xa3vq002d0wvctgwv728l","_id":"cjy6xa3vw002h0wvcc59cftb0"},{"post_id":"cjy6xa3u7000c0wvc02su5rv3","tag_id":"cjy6xa3vr002e0wvcxar8o8r8","_id":"cjy6xa3vx002j0wvcx3lybm6w"},{"post_id":"cjy6xa3u9000g0wvcoecq2x8l","tag_id":"cjy6xa3vs002f0wvc3y3ahq7i","_id":"cjy6xa3vz002l0wvc5gxczaol"},{"post_id":"cjy6xa3u9000g0wvcoecq2x8l","tag_id":"cjy6xa3vx002i0wvcobdunvnj","_id":"cjy6xa3vz002m0wvcynwhi2rh"},{"post_id":"cjy6xa3uc000i0wvccx694cvv","tag_id":"cjy6xa3vy002k0wvcfy22cr22","_id":"cjy6xa3w0002o0wvcxizwakos"},{"post_id":"cjy6xa3ul000m0wvcmjheqkau","tag_id":"cjy6xa3w0002n0wvcowzqci03","_id":"cjy6xa3w3002s0wvc55ezss47"},{"post_id":"cjy6xa3ul000m0wvcmjheqkau","tag_id":"cjy6xa3w2002p0wvcj111nvc8","_id":"cjy6xa3w3002t0wvcs72agzzf"},{"post_id":"cjy6xa3ul000m0wvcmjheqkau","tag_id":"cjy6xa3w2002q0wvctaatx861","_id":"cjy6xa3w4002v0wvci9x1vkrp"},{"post_id":"cjy6xa3um000o0wvc1jb8e3nf","tag_id":"cjy6xa3w3002r0wvc0u5o8fnm","_id":"cjy6xa3w5002x0wvc8uwzm6nd"},{"post_id":"cjy6xa3um000o0wvc1jb8e3nf","tag_id":"cjy6xa3w4002u0wvcllyr6k7q","_id":"cjy6xa3w6002y0wvcv8ubhiyn"},{"post_id":"cjy6xa3up000t0wvctcjfkysx","tag_id":"cjy6xa3w5002w0wvc4r455fls","_id":"cjy6xa3w900310wvc0vekf2ag"},{"post_id":"cjy6xa3up000t0wvctcjfkysx","tag_id":"cjy6xa3w6002z0wvcfq5ei4vh","_id":"cjy6xa3wb00320wvcqpih0vnl"},{"post_id":"cjy6xa3uq000v0wvcjmpjvktf","tag_id":"cjy6xa3w700300wvcj6u7e6kg","_id":"cjy6xa3wf00380wvczyoknxk7"},{"post_id":"cjy6xa3uq000v0wvcjmpjvktf","tag_id":"cjy6xa3wb00330wvc97kcy6qp","_id":"cjy6xa3wf00390wvc6l8n98it"},{"post_id":"cjy6xa3uq000v0wvcjmpjvktf","tag_id":"cjy6xa3wc00340wvcjuycx6j4","_id":"cjy6xa3wf003b0wvc94zhs3p6"},{"post_id":"cjy6xa3uq000v0wvcjmpjvktf","tag_id":"cjy6xa3wd00350wvc1kluyu8d","_id":"cjy6xa3wg003c0wvcetivsnho"},{"post_id":"cjy6xa3uq000v0wvcjmpjvktf","tag_id":"cjy6xa3wd00360wvcsuh07wk7","_id":"cjy6xa3wh003e0wvcgsflkpve"},{"post_id":"cjy6xa3ut000y0wvc6ltt2faj","tag_id":"cjy6xa3w0002n0wvcowzqci03","_id":"cjy6xa3wh003f0wvcr8jbl364"},{"post_id":"cjy6xa3ut000y0wvc6ltt2faj","tag_id":"cjy6xa3wf003a0wvca4fgrbec","_id":"cjy6xa3wj003h0wvcv4uak35m"},{"post_id":"cjy6xa3uv00110wvc7k32jb39","tag_id":"cjy6xa3v7001g0wvcq11s9im2","_id":"cjy6xa3wl003j0wvceziez6ag"},{"post_id":"cjy6xa3uv00110wvc7k32jb39","tag_id":"cjy6xa3wj003g0wvc1zvni54c","_id":"cjy6xa3wl003k0wvcp3v8qvp5"},{"post_id":"cjy6xa3v000130wvctpeyery6","tag_id":"cjy6xa3v5001b0wvcnnb60x5h","_id":"cjy6xa3wm003m0wvcba7dw57c"},{"post_id":"cjy6xa3v000130wvctpeyery6","tag_id":"cjy6xa3uk000l0wvcavyp94y9","_id":"cjy6xa3wn003n0wvcjthakzj0"},{"post_id":"cjy6xa3v200160wvc6uejses0","tag_id":"cjy6xa3w2002q0wvctaatx861","_id":"cjy6xa3ws003p0wvciclk6s7m"},{"post_id":"cjy6xa3v200160wvc6uejses0","tag_id":"cjy6xa3wn003o0wvcgueuaftn","_id":"cjy6xa3wt003q0wvcmttjzb02"}],"Tag":[{"name":"Markdown","_id":"cjy6xa3ts00050wvcp3ir9k8m"},{"name":"纯纯写作","_id":"cjy6xa3tz000a0wvcgvgpwpyn"},{"name":"移动端写作","_id":"cjy6xa3u8000f0wvcruy0gdvm"},{"name":"OneDrive","_id":"cjy6xa3uk000l0wvcavyp94y9"},{"name":"图床","_id":"cjy6xa3up000s0wvcz1taepbw"},{"name":"UWP","_id":"cjy6xa3uu000z0wvc5l0jw7ln"},{"name":"OneNote","_id":"cjy6xa3v200150wvcxxpzwtb2"},{"name":"使用体验","_id":"cjy6xa3v5001b0wvcnnb60x5h"},{"name":"Windows","_id":"cjy6xa3v7001g0wvcq11s9im2"},{"name":"自带应用","_id":"cjy6xa3v8001l0wvczovg23sk"},{"name":"便笺","_id":"cjy6xa3va001o0wvcz23leayt"},{"name":"Nativefier","_id":"cjy6xa3vc001r0wvcflw3d6gi"},{"name":"Electron","_id":"cjy6xa3vk00200wvc0u9sg3g3"},{"name":"WebApp","_id":"cjy6xa3vl00220wvcupta6xju"},{"name":"快捷键","_id":"cjy6xa3vn00270wvcyjpwkxig"},{"name":"PWA","_id":"cjy6xa3vo002a0wvcti41gp75"},{"name":"烧脑","_id":"cjy6xa3vq002d0wvctgwv728l"},{"name":"图案解锁","_id":"cjy6xa3vr002e0wvcxar8o8r8"},{"name":"CoinHive","_id":"cjy6xa3vs002f0wvc3y3ahq7i"},{"name":"挖矿","_id":"cjy6xa3vx002i0wvcobdunvnj"},{"name":"杂记，奇葩，记事","_id":"cjy6xa3vy002k0wvcfy22cr22"},{"name":"Hexo","_id":"cjy6xa3w0002n0wvcowzqci03"},{"name":"网站提交","_id":"cjy6xa3w2002p0wvcj111nvc8"},{"name":"Google","_id":"cjy6xa3w2002q0wvctaatx861"},{"name":"Windows 10","_id":"cjy6xa3w3002r0wvc0u5o8fnm"},{"name":"鼠标","_id":"cjy6xa3w4002u0wvcllyr6k7q"},{"name":"Minecraft","_id":"cjy6xa3w5002w0wvc4r455fls"},{"name":"启动器","_id":"cjy6xa3w6002z0wvcfq5ei4vh"},{"name":"输入法","_id":"cjy6xa3w700300wvcj6u7e6kg"},{"name":"百度","_id":"cjy6xa3wb00330wvc97kcy6qp"},{"name":"讯飞","_id":"cjy6xa3wc00340wvcjuycx6j4"},{"name":"搜狗","_id":"cjy6xa3wd00350wvc1kluyu8d"},{"name":"随笔","_id":"cjy6xa3wd00360wvcsuh07wk7"},{"name":"百度爬虫","_id":"cjy6xa3wf003a0wvca4fgrbec"},{"name":"TrustedInstaller","_id":"cjy6xa3wj003g0wvc1zvni54c"},{"name":"产品","_id":"cjy6xa3wn003o0wvcgueuaftn"}]}}